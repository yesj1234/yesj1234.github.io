import{s as is,n as un}from"./scheduler.Bch89ZIZ.js";import{S as us,i as rs,e,s as l,H as at,c as p,g as c,f as o,j as et,k as pt,d as n,a as i,l as a}from"./index.WsbZAp97.js";function ks(as){let u,rn='<ol class="toc-level toc-level-1"><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#riverpod-architecture">Riverpod Architecture</a><ol class="toc-level toc-level-2"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#presentation-layer">Presentation Layer</a><ol class="toc-level toc-level-3"><li class="toc-item toc-item-h3"><a class="toc-link toc-link-h3" href="#widgets">Widgets</a></li><li class="toc-item toc-item-h3"><a class="toc-link toc-link-h3" href="#controllers">Controllers</a></li></ol></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#domain-layer">Domain Layer</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#data-layer">Data Layer</a></li></ol></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#code-example">Code Example</a></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#sources">Sources</a></li></ol>',lt,r,kn="Riverpod Architecture",ot,C,dn='<img src="/riverpod_architecture.png" alt="Overall diagram of Riverpod architecture"/>',ct,k,mn="Presentation Layer",it,x,fn="<strong>presentation layer</strong>는 다음과 같이 Widget, Controller로 이루어져있습니다.",ut,w,vn="<li><strong>Widgets</strong>: 실제 화면에 데이터를 어떻게 보여줄지를 결정</li> <li><strong>Controllers</strong>: POST요청과 같은 데이터와 관련된 비동기적인 요청을 수행하고 widget state를 관리</li>",rt,d,yn="Widgets",kt,_,gn="<strong>Widget은</strong> MVVM 아키텍처에서 <strong>View</strong>에 해당하는 부분으로 이해할 수 있습니다.",dt,h,Cn="Widget은 실제 화면에 데이터를 어떻게 보여줄지 결정하는 부분입니다.",mt,L,xn="데이터와 관련된 비즈니스 로직을 포함하지 않도록 주의해야합니다.",ft,m,wn="Controllers",vt,H,_n="<strong>Controller</strong>는 MVVM 아키텍처에서 <strong>View Model</strong>에 해당하는 부분으로 이해할 수 있습니다.",yt,T,hn="Controller의 역할은 다음과 같습니다.",gt,M,Ln="<li>데이터와 관련된 비즈니스 로직을 포함</li> <li>Widget의 state를 관리</li> <li>Data layer의 repository와 데이터를 주고 받으며 Widget과 Data layer를 중개</li>",Ct,xt,wt,f,Hn="Domain Layer",_t,D,Tn="Domain layer는 특정 앱이 필요로 하는 데이터의 모양을 결정합니다.",ht,P,Mn="Wikipedia는 도메인 모델을 다음과 같이 정의합니다.",Lt,I,Dn="<p>도메인 모델은 <strong>행위</strong>와 <strong>데이터</strong>를 둘 다 아우르는 도메인의 <strong>개념 모델</strong>(Conceptual Model)이다.</p>",Ht,R,Pn="예를 들어, 쇼핑앱을 만든다고 가정해보면 다음과 같은 개념 모델들을 생각해 볼 수 있습니다.",Tt,b,In="<li><strong>User</strong> : ID, email 등의 property를 갖는 모델</li> <li><strong>Product</strong> : ID, image URL, title, price, available quantity 등의 property를 갖는 모델</li> <li><strong>Item</strong> : Product ID, quantity 등의 property를 갖는 모델</li> <li><strong>Cart</strong> : List of items, total 등의 property를 갖는 모델</li> <li><strong>Order</strong> : List of items, price paid, status, payment details 등의 property를 갖는 모델</li>",Mt,A,Rn="모델은 해당 도메인에 대한 충분한 이해와 고민을 바탕으로 만들어집니다.",Dt,S,bn="각각의 모델들이 도메인의 무엇을 나타내는지에 대한 <strong>컨셉</strong>과 전체 시스템 안에서 다른 모델들과 소통하기 위한 <strong>행동</strong>들, 각 모델들이 다른 모델들과 맺는 <strong>관계성</strong> 등에 대한 고민이 필요합니다.",Pt,q,An="Riverpod architecture에서의 모델은 다음과 같은 특징을 갖는 <strong>class</strong>로 이해할 수 있습니다.",It,U,Sn="<li><strong>불변</strong>(Immutable)</li> <li>fromJson , toJson과 같은 <strong>직렬화 로직</strong>(Serialization logic)을 포함</li> <li>동등성 비교를 위한 <strong>== 연산</strong>, <strong>hashCode</strong></li>",Rt,E,qn=`위의 예시의 Cart가 Order는 Item에 의존성을 갖듯이 모델은 <strong>다른 모델에 의존성</strong>을 가질 수 있습니다.<br/>
하지만 data를 어디서 가져오는지에 대한지는 포함하지 않습니다.`,bt,O,Un="따라서 Domain layer를 다른 레이어들과 구분되는 별개의 layer로 표현할 수 있습니다.",At,W,En="하지만 Diagram의 표현과는 다르게 model들은 인접레이어인 Application layer 혹은 Data layer와만 소통하는 식이 아니라 Widget과 같은 presentation layer와도 필요하다면 가져다 사용하는 class입니다.",St,qt,Ut,v,On="Data Layer",Et,j,Wn="Data layer는 다음과 같이 3개의 서로 다른 타입의 클래스를 포함합니다.",Ot,F,jn="<li><strong>Data Sources</strong>: 원격 데이터베이스, REST API endpoint, push notification, 블루투스 인터페이스 등의 앱 외부와 소통하기 위한 써드파티 API들</li> <li><strong>Data Transfer Objects</strong> : DTO. Data sources로 받아오는 데이터들. 일반적으로 JSON과 같은 비정형 데이터인 경우가 많음</li> <li><strong>Repositories</strong>: 백엔드 API 등의 다양한 Data source가 반환하는 DTO에 접근하기 위한 클래스로서 앱에서 사용하기 위해 type-safe한 모델로 변환하는 과정을 담당</li>",Wt,V,Fn=`Data Source와 Data Transfer Object들은 앱 외부의 패키지들입니다.
해당 패키지들을 사용하기 위해서는 해당 패키지가 제공하는 API들을 사용하여 소통해야합니다.`,jt,N,Vn="반면 Repository는 앱의 일부입니다. 직접 설계하고 코드를 작성해서 사용하는 클래스입니다.",Ft,z,Nn=`만약 앱에서 원격 혹은 로컬 데이터베이스를 사용한다면 그 데이터베이스가 앱의 유일한 정보의 원천(Single Source of Truth)이어야하며 Repository는 데이터베이스에 접근하는 gateway역할을 합니다.
이는 단방향 데이터 흐름 원칙을 이용해 구현할 수 있습니다.`,Vt,Nt,zt,y,zn="Code Example",Jt,J,Jn="위의 개념들을 최대한 활용해 Firestore로부터 이미지URL을 받아와 기본 아바타 프로필 이미지를 보여주는 위젯을 하나 만들어보겠습니다.",Bt,B,Bn="<strong>1. 모델 정의</strong>",Gt,G,Kt,es=`<code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">DefaultImage</span> <span class="token punctuation">&#123;</span>
  <span class="token class-name">String</span><span class="token operator">?</span> downloadURL<span class="token punctuation">;</span>
  <span class="token class-name">DefaultImage</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>required <span class="token keyword">this</span><span class="token punctuation">.</span>downloadURL<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">factory</span> <span class="token class-name">DefaultImage</span><span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token punctuation">></span></span> data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">final</span> downloadURL <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">'downloadURL'</span></span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">DefaultImage</span><span class="token punctuation">(</span>downloadURL<span class="token punctuation">:</span> downloadURL<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
</code>`,Qt,K,Gn="<strong>2. Abstract Repository 정의</strong>",$t,Q,Xt,ps=`<code class="language-dart"><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">DefaultImageRepository</span> <span class="token punctuation">&#123;</span>
  <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DefaultImage</span><span class="token punctuation">></span></span> <span class="token function">getDefaultImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,Yt,$,Kn="<strong>3. Concrete Repository 정의</strong>",Zt,X,tn,ls=`<code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">FireStoreDefaultImageRepository</span> <span class="token keyword">implements</span> <span class="token class-name">DefaultImageRepository</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">final</span> <span class="token class-name">FirebaseFirestore</span> instance<span class="token punctuation">;</span>
  <span class="token class-name">FireStoreDefaultImageRepository</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>required <span class="token keyword">this</span><span class="token punctuation">.</span>instance<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token metadata function">@override</span>
  <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DefaultImage</span><span class="token punctuation">></span></span> <span class="token function">getDefaultImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// TODO: send request, parse response, return DefaultImage object or throw.</span>
    <span class="token keyword">final</span> image <span class="token operator">=</span> instance<span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">'images'</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doc</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">'LNnga0Rn86RkxU6kB8VO'</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> result <span class="token operator">=</span> <span class="token keyword">await</span> image<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">DocumentSnapshot</span> doc<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">final</span> json <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">as</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>
      <span class="token keyword">final</span> defaultImage <span class="token operator">=</span> <span class="token class-name">DefaultImage</span><span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> defaultImage<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,nn,Y,Qn="<strong>4. Controller 정의</strong>",sn,Z,an,os=`<code class="language-dart"><span class="token metadata function">@riverpod</span>
<span class="token keyword">class</span> <span class="token class-name">DefaultImageController</span> <span class="token keyword">extends</span> _$<span class="token class-name">DefaultImageController</span> <span class="token punctuation">&#123;</span>
  <span class="token metadata function">@override</span>
  <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DefaultImage</span><span class="token punctuation">></span></span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">final</span> repository <span class="token operator">=</span> ref<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>defaultImageRepositoryProvider<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">await</span> repository<span class="token punctuation">.</span><span class="token function">getDefaultImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,en,tt,$n="<strong>5. Widget</strong>",pn,nt,ln,cs=`<code class="language-dart"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">'package:flutter/material.dart'</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">'package:flutter_riverpod/flutter_riverpod.dart'</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">'package:farmers_journal/domain/firebase/DefaultImage.dart'</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">'package:farmers_journal/presentation/controller/default_image_controller.dart'</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">AvatarProfile</span> <span class="token keyword">extends</span> <span class="token class-name">ConsumerWidget</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">final</span> double width<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double height<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">VoidCallback</span> onNavigateTap<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token class-name">AvatarProfile</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span>key<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">10.0</span><span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">10.0</span><span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>onNavigateTap<span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token metadata function">@override</span>
  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">,</span> <span class="token class-name">WidgetRef</span> ref<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">final</span> <span class="token class-name">AsyncValue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DefaultImage</span><span class="token punctuation">></span></span> defaultImage <span class="token operator">=</span>
        ref<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span>defaultImageControllerProvider<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">GestureDetector</span><span class="token punctuation">(</span>
      onTap<span class="token punctuation">:</span> onNavigateTap<span class="token punctuation">,</span>
      child<span class="token punctuation">:</span> <span class="token class-name">SizedBox</span><span class="token punctuation">(</span>
        width<span class="token punctuation">:</span> width<span class="token punctuation">,</span>
        height<span class="token punctuation">:</span> height<span class="token punctuation">,</span>
        child<span class="token punctuation">:</span> <span class="token class-name">CircleAvatar</span><span class="token punctuation">(</span>
          backgroundImage<span class="token punctuation">:</span> <span class="token keyword">switch</span> <span class="token punctuation">(</span>defaultImage<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">AsyncData</span><span class="token punctuation">(</span><span class="token punctuation">:</span><span class="token keyword">final</span> value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token class-name">NetworkImage</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>downloadURL<span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">AsyncError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">const</span> <span class="token class-name">AssetImage</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">'assets/avatars/default.png'</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            _ <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">const</span> <span class="token class-name">AssetImage</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">'assets/avatars/default.png'</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
</code>`,on,g,Xn="Sources",cn,st,Yn='<a href="https://codewithandrea.com/articles/flutter-presentation-layer/" rel="nofollow">https://codewithandrea.com/articles/flutter-presentation-layer/</a> <a href="https://codewithandrea.com/articles/flutter-repository-pattern/" rel="nofollow">https://codewithandrea.com/articles/flutter-repository-pattern/</a> <a href="https://codewithandrea.com/articles/flutter-app-architecture-domain-model/" rel="nofollow">https://codewithandrea.com/articles/flutter-app-architecture-domain-model/</a> <a href="https://codewithandrea.com/articles/flutter-app-architecture-domain-model/" rel="nofollow">https://codewithandrea.com/articles/flutter-app-architecture-domain-model/</a>';return{c(){u=e("nav"),u.innerHTML=rn,lt=l(),r=e("h1"),r.textContent=kn,ot=l(),C=e("p"),C.innerHTML=dn,ct=l(),k=e("h2"),k.textContent=mn,it=l(),x=e("p"),x.innerHTML=fn,ut=l(),w=e("ul"),w.innerHTML=vn,rt=l(),d=e("h3"),d.textContent=yn,kt=l(),_=e("p"),_.innerHTML=gn,dt=l(),h=e("p"),h.textContent=Cn,mt=l(),L=e("p"),L.textContent=xn,ft=l(),m=e("h3"),m.textContent=wn,vt=l(),H=e("p"),H.innerHTML=_n,yt=l(),T=e("p"),T.textContent=hn,gt=l(),M=e("ul"),M.innerHTML=Ln,Ct=l(),xt=e("hr"),wt=l(),f=e("h2"),f.textContent=Hn,_t=l(),D=e("p"),D.textContent=Tn,ht=l(),P=e("p"),P.textContent=Mn,Lt=l(),I=e("blockquote"),I.innerHTML=Dn,Ht=l(),R=e("p"),R.textContent=Pn,Tt=l(),b=e("ul"),b.innerHTML=In,Mt=l(),A=e("p"),A.textContent=Rn,Dt=l(),S=e("p"),S.innerHTML=bn,Pt=l(),q=e("p"),q.innerHTML=An,It=l(),U=e("ul"),U.innerHTML=Sn,Rt=l(),E=e("p"),E.innerHTML=qn,bt=l(),O=e("p"),O.textContent=Un,At=l(),W=e("p"),W.textContent=En,St=l(),qt=e("hr"),Ut=l(),v=e("h2"),v.textContent=On,Et=l(),j=e("p"),j.textContent=Wn,Ot=l(),F=e("ul"),F.innerHTML=jn,Wt=l(),V=e("p"),V.textContent=Fn,jt=l(),N=e("p"),N.textContent=Vn,Ft=l(),z=e("p"),z.textContent=Nn,Vt=l(),Nt=e("hr"),zt=l(),y=e("h1"),y.textContent=zn,Jt=l(),J=e("p"),J.textContent=Jn,Bt=l(),B=e("p"),B.innerHTML=Bn,Gt=l(),G=e("pre"),Kt=new at(!1),Qt=l(),K=e("p"),K.innerHTML=Gn,$t=l(),Q=e("pre"),Xt=new at(!1),Yt=l(),$=e("p"),$.innerHTML=Kn,Zt=l(),X=e("pre"),tn=new at(!1),nn=l(),Y=e("p"),Y.innerHTML=Qn,sn=l(),Z=e("pre"),an=new at(!1),en=l(),tt=e("p"),tt.innerHTML=$n,pn=l(),nt=e("pre"),ln=new at(!1),on=l(),g=e("h1"),g.textContent=Xn,cn=l(),st=e("p"),st.innerHTML=Yn,this.h()},l(t){u=p(t,"NAV",{class:!0,"data-svelte-h":!0}),c(u)!=="svelte-1tz6kmn"&&(u.innerHTML=rn),lt=o(t),r=p(t,"H1",{id:!0,"data-svelte-h":!0}),c(r)!=="svelte-pnzut"&&(r.textContent=kn),ot=o(t),C=p(t,"P",{"data-svelte-h":!0}),c(C)!=="svelte-gvj446"&&(C.innerHTML=dn),ct=o(t),k=p(t,"H2",{id:!0,"data-svelte-h":!0}),c(k)!=="svelte-5lljkr"&&(k.textContent=mn),it=o(t),x=p(t,"P",{"data-svelte-h":!0}),c(x)!=="svelte-1c7i9fw"&&(x.innerHTML=fn),ut=o(t),w=p(t,"UL",{"data-svelte-h":!0}),c(w)!=="svelte-8dsti5"&&(w.innerHTML=vn),rt=o(t),d=p(t,"H3",{id:!0,"data-svelte-h":!0}),c(d)!=="svelte-liipxe"&&(d.textContent=yn),kt=o(t),_=p(t,"P",{"data-svelte-h":!0}),c(_)!=="svelte-1llcxs0"&&(_.innerHTML=gn),dt=o(t),h=p(t,"P",{"data-svelte-h":!0}),c(h)!=="svelte-1938xc9"&&(h.textContent=Cn),mt=o(t),L=p(t,"P",{"data-svelte-h":!0}),c(L)!=="svelte-1c1xulp"&&(L.textContent=xn),ft=o(t),m=p(t,"H3",{id:!0,"data-svelte-h":!0}),c(m)!=="svelte-1t9ikk2"&&(m.textContent=wn),vt=o(t),H=p(t,"P",{"data-svelte-h":!0}),c(H)!=="svelte-l1nq31"&&(H.innerHTML=_n),yt=o(t),T=p(t,"P",{"data-svelte-h":!0}),c(T)!=="svelte-y6nykf"&&(T.textContent=hn),gt=o(t),M=p(t,"UL",{"data-svelte-h":!0}),c(M)!=="svelte-18a0fmd"&&(M.innerHTML=Ln),Ct=o(t),xt=p(t,"HR",{}),wt=o(t),f=p(t,"H2",{id:!0,"data-svelte-h":!0}),c(f)!=="svelte-n26c8r"&&(f.textContent=Hn),_t=o(t),D=p(t,"P",{"data-svelte-h":!0}),c(D)!=="svelte-1ail5d1"&&(D.textContent=Tn),ht=o(t),P=p(t,"P",{"data-svelte-h":!0}),c(P)!=="svelte-1fq3q0c"&&(P.textContent=Mn),Lt=o(t),I=p(t,"BLOCKQUOTE",{"data-svelte-h":!0}),c(I)!=="svelte-vk1b7l"&&(I.innerHTML=Dn),Ht=o(t),R=p(t,"P",{"data-svelte-h":!0}),c(R)!=="svelte-mw0cqd"&&(R.textContent=Pn),Tt=o(t),b=p(t,"UL",{"data-svelte-h":!0}),c(b)!=="svelte-3gyypa"&&(b.innerHTML=In),Mt=o(t),A=p(t,"P",{"data-svelte-h":!0}),c(A)!=="svelte-kuy26w"&&(A.textContent=Rn),Dt=o(t),S=p(t,"P",{"data-svelte-h":!0}),c(S)!=="svelte-dhfsg6"&&(S.innerHTML=bn),Pt=o(t),q=p(t,"P",{"data-svelte-h":!0}),c(q)!=="svelte-15xneyb"&&(q.innerHTML=An),It=o(t),U=p(t,"UL",{"data-svelte-h":!0}),c(U)!=="svelte-1pnqwmd"&&(U.innerHTML=Sn),Rt=o(t),E=p(t,"P",{"data-svelte-h":!0}),c(E)!=="svelte-1t708t3"&&(E.innerHTML=qn),bt=o(t),O=p(t,"P",{"data-svelte-h":!0}),c(O)!=="svelte-xo91v"&&(O.textContent=Un),At=o(t),W=p(t,"P",{"data-svelte-h":!0}),c(W)!=="svelte-bdbb7c"&&(W.textContent=En),St=o(t),qt=p(t,"HR",{}),Ut=o(t),v=p(t,"H2",{id:!0,"data-svelte-h":!0}),c(v)!=="svelte-1abgcg3"&&(v.textContent=On),Et=o(t),j=p(t,"P",{"data-svelte-h":!0}),c(j)!=="svelte-1k073gd"&&(j.textContent=Wn),Ot=o(t),F=p(t,"UL",{"data-svelte-h":!0}),c(F)!=="svelte-1rsebse"&&(F.innerHTML=jn),Wt=o(t),V=p(t,"P",{"data-svelte-h":!0}),c(V)!=="svelte-1rbm9sm"&&(V.textContent=Fn),jt=o(t),N=p(t,"P",{"data-svelte-h":!0}),c(N)!=="svelte-1em9dfw"&&(N.textContent=Vn),Ft=o(t),z=p(t,"P",{"data-svelte-h":!0}),c(z)!=="svelte-1nhyge3"&&(z.textContent=Nn),Vt=o(t),Nt=p(t,"HR",{}),zt=o(t),y=p(t,"H1",{id:!0,"data-svelte-h":!0}),c(y)!=="svelte-cszf69"&&(y.textContent=zn),Jt=o(t),J=p(t,"P",{"data-svelte-h":!0}),c(J)!=="svelte-1s0q23o"&&(J.textContent=Jn),Bt=o(t),B=p(t,"P",{"data-svelte-h":!0}),c(B)!=="svelte-1bbah9n"&&(B.innerHTML=Bn),Gt=o(t),G=p(t,"PRE",{class:!0});var s=et(G);Kt=pt(s,!1),s.forEach(n),Qt=o(t),K=p(t,"P",{"data-svelte-h":!0}),c(K)!=="svelte-1qs32mm"&&(K.innerHTML=Gn),$t=o(t),Q=p(t,"PRE",{class:!0});var Zn=et(Q);Xt=pt(Zn,!1),Zn.forEach(n),Yt=o(t),$=p(t,"P",{"data-svelte-h":!0}),c($)!=="svelte-r3xh50"&&($.innerHTML=Kn),Zt=o(t),X=p(t,"PRE",{class:!0});var ts=et(X);tn=pt(ts,!1),ts.forEach(n),nn=o(t),Y=p(t,"P",{"data-svelte-h":!0}),c(Y)!=="svelte-sllfbw"&&(Y.innerHTML=Qn),sn=o(t),Z=p(t,"PRE",{class:!0});var ns=et(Z);an=pt(ns,!1),ns.forEach(n),en=o(t),tt=p(t,"P",{"data-svelte-h":!0}),c(tt)!=="svelte-ex6igg"&&(tt.innerHTML=$n),pn=o(t),nt=p(t,"PRE",{class:!0});var ss=et(nt);ln=pt(ss,!1),ss.forEach(n),on=o(t),g=p(t,"H1",{id:!0,"data-svelte-h":!0}),c(g)!=="svelte-22jvrw"&&(g.textContent=Xn),cn=o(t),st=p(t,"P",{"data-svelte-h":!0}),c(st)!=="svelte-197qkr0"&&(st.innerHTML=Yn),this.h()},h(){i(u,"class","toc"),i(r,"id","riverpod-architecture"),i(k,"id","presentation-layer"),i(d,"id","widgets"),i(m,"id","controllers"),i(f,"id","domain-layer"),i(v,"id","data-layer"),i(y,"id","code-example"),Kt.a=null,i(G,"class","language-dart"),Xt.a=null,i(Q,"class","language-dart"),tn.a=null,i(X,"class","language-dart"),an.a=null,i(Z,"class","language-dart"),ln.a=null,i(nt,"class","language-dart"),i(g,"id","sources")},m(t,s){a(t,u,s),a(t,lt,s),a(t,r,s),a(t,ot,s),a(t,C,s),a(t,ct,s),a(t,k,s),a(t,it,s),a(t,x,s),a(t,ut,s),a(t,w,s),a(t,rt,s),a(t,d,s),a(t,kt,s),a(t,_,s),a(t,dt,s),a(t,h,s),a(t,mt,s),a(t,L,s),a(t,ft,s),a(t,m,s),a(t,vt,s),a(t,H,s),a(t,yt,s),a(t,T,s),a(t,gt,s),a(t,M,s),a(t,Ct,s),a(t,xt,s),a(t,wt,s),a(t,f,s),a(t,_t,s),a(t,D,s),a(t,ht,s),a(t,P,s),a(t,Lt,s),a(t,I,s),a(t,Ht,s),a(t,R,s),a(t,Tt,s),a(t,b,s),a(t,Mt,s),a(t,A,s),a(t,Dt,s),a(t,S,s),a(t,Pt,s),a(t,q,s),a(t,It,s),a(t,U,s),a(t,Rt,s),a(t,E,s),a(t,bt,s),a(t,O,s),a(t,At,s),a(t,W,s),a(t,St,s),a(t,qt,s),a(t,Ut,s),a(t,v,s),a(t,Et,s),a(t,j,s),a(t,Ot,s),a(t,F,s),a(t,Wt,s),a(t,V,s),a(t,jt,s),a(t,N,s),a(t,Ft,s),a(t,z,s),a(t,Vt,s),a(t,Nt,s),a(t,zt,s),a(t,y,s),a(t,Jt,s),a(t,J,s),a(t,Bt,s),a(t,B,s),a(t,Gt,s),a(t,G,s),Kt.m(es,G),a(t,Qt,s),a(t,K,s),a(t,$t,s),a(t,Q,s),Xt.m(ps,Q),a(t,Yt,s),a(t,$,s),a(t,Zt,s),a(t,X,s),tn.m(ls,X),a(t,nn,s),a(t,Y,s),a(t,sn,s),a(t,Z,s),an.m(os,Z),a(t,en,s),a(t,tt,s),a(t,pn,s),a(t,nt,s),ln.m(cs,nt),a(t,on,s),a(t,g,s),a(t,cn,s),a(t,st,s)},p:un,i:un,o:un,d(t){t&&(n(u),n(lt),n(r),n(ot),n(C),n(ct),n(k),n(it),n(x),n(ut),n(w),n(rt),n(d),n(kt),n(_),n(dt),n(h),n(mt),n(L),n(ft),n(m),n(vt),n(H),n(yt),n(T),n(gt),n(M),n(Ct),n(xt),n(wt),n(f),n(_t),n(D),n(ht),n(P),n(Lt),n(I),n(Ht),n(R),n(Tt),n(b),n(Mt),n(A),n(Dt),n(S),n(Pt),n(q),n(It),n(U),n(Rt),n(E),n(bt),n(O),n(At),n(W),n(St),n(qt),n(Ut),n(v),n(Et),n(j),n(Ot),n(F),n(Wt),n(V),n(jt),n(N),n(Ft),n(z),n(Vt),n(Nt),n(zt),n(y),n(Jt),n(J),n(Bt),n(B),n(Gt),n(G),n(Qt),n(K),n($t),n(Q),n(Yt),n($),n(Zt),n(X),n(nn),n(Y),n(sn),n(Z),n(en),n(tt),n(pn),n(nt),n(on),n(g),n(cn),n(st))}}}const fs={title:"Flutter App Architecture(2) - Riverpod Architecture",author:"jack",description:"Riverpod 아키텍처에 대해 알아봅니다.",published:!0,date:"2024. 12. 10.",tags:["Flutter"]};class vs extends us{constructor(u){super(),rs(this,u,null,ks,is,{})}}export{vs as default,fs as metadata};
