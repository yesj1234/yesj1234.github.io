import{s as jt,n as ze}from"./scheduler.BDkTqwUR.js";import{S as St,i as Tt,e as n,s as p,H as c,c as l,a as o,g as i,b as u,d as f,f as t,h as r,j as a}from"./index.DnSs38ay.js";function Mt(ht){let X,Q,d,Ae="Table of Contents",V,h,Ke='<li><a href="#1-sveltkit-project-setup">1. Sveltkit project setup</a><ul><li><a href="#create-a-project">Create a project</a></li> <li><a href="#change-adapter-to-adapter-static">Change <em>adapter</em> to adapter-static.</a></li> <li><a href="#install-mdsvex-and-configure">Install Mdsvex and configure.</a></li></ul></li> <li><a href="#2-github-pages-setup">2. Github Pages setup.</a><ul><li><a href="#create-a-repository">Create a repository.</a></li> <li><a href="#set-git-remote-in-the-sveltkit-application-you-made-in-the-previous-step">Set git remote in the sveltkit application you made in the previous step.</a></li> <li><a href="#install-gh-pages">Install gh-pages.</a></li> <li><a href="#add-deploy-command-in-packagejson-file">Add deploy command in package.json file.</a></li> <li><a href="#run-the-deploy-command">Run the deploy command</a></li></ul></li> <li><a href="#references">References</a></li>',F,m,Ge="1. Sveltkit project setup",W,v,qe="Create a project",Y,g,Z,mt='<code class="language-undefined">npm create svelte@latest app</code>',$,y,Be='Change <em>adapter</em><sup id="fnref-1"><a href="#fn-1" class="footnote-ref">1</a></sup> to adapter-static<sup id="fnref-2"><a href="#fn-2" class="footnote-ref">2</a></sup>.',ee,x,Je='To use SveltKit as a <em>static site generator</em>(SSG)<sup id="fnref-3"><a href="#fn-3" class="footnote-ref">3</a></sup>, use <em>adapter-static</em>.',te,w,Ne="Install with",se,_,ae,vt='<code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">-D</span> @sveltejs/adapter-static</code>',ne,C,Oe="Then add the adapter to your svelte.config.js:",le,b,pe,gt=`<code class="language-javascript"><span class="token keyword">import</span> adapter <span class="token keyword">from</span> <span class="token string">'@sveltejs/adapter-static'</span><span class="token punctuation">;</span>
<span class="token comment">/** @type &#123;import('@sveltejs/kit').Config&#125; */</span>
<span class="token keyword">const</span> config  <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">kit</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        <span class="token literal-property property">adapter</span><span class="token operator">:</span> <span class="token function">adapter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">strict</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> config</code>`,oe,H,Ue="<p>By default, adapter-static checks that either all pages and endpoints (if any) of your app were prerendered, or you have the fallback option set. This check exists to prevent you from accidentally publishing an app where some parts of it are not accessible, because they are not contained in the final output. If you know this is ok (for example, when a certain page only exists conditionally), you can set strict to false to turn off this check.</p>",ie,j,Xe='Install Mdsvex<sup id="fnref-4"><a href="#fn-4" class="footnote-ref">4</a></sup> and configure.',re,S,Qe="Install with",ce,T,ue,yt='<code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">-D</span> mdsvex</code>',fe,M,Ve="Add configuration file for mdsvex. Name it mdsvex.config.js",ke,P,de,xt=`<code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineMDSveXConfig <span class="token keyword">as</span> defineConfig <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'mdsvex'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
	<span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.svelte.md'</span><span class="token punctuation">,</span> <span class="token string">'.md'</span><span class="token punctuation">,</span> <span class="token string">'.svx'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

	<span class="token literal-property property">smartypants</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
		<span class="token literal-property property">dashes</span><span class="token operator">:</span> <span class="token string">'oldschool'</span>
	<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>

	<span class="token literal-property property">remarkPlugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token literal-property property">rehypePlugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> config<span class="token punctuation">;</span></code>`,he,E,Fe="Then add the mdsvex preprocessor to svelte.config.js with the configuration defined above.",me,L,ve,wt=`<code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> mdsvex <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'mdsvex'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> mdsvexConfig <span class="token keyword">from</span> <span class="token string">'./mdsvex.config.js'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
	<span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.svelte'</span><span class="token punctuation">,</span> <span class="token operator">...</span>mdsvexConfig<span class="token punctuation">.</span>extensions<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token literal-property property">preprocessors</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">mdsvex</span><span class="token punctuation">(</span>mdsvexConfig<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> config<span class="token punctuation">;</span></code>`,ge,R,We="2. Github Pages setup.",ye,I,Ye="Create a repository.",xe,D,Ze="Create a repository and name it <em>username</em>.github.io, where <em>username</em> is your username(or organization name) on Github. If the first part of the repository doesn’t exactly match your username, it won’t work, so make sure to get it right.",we,z,$e="Set git remote in the sveltkit application you made in the previous step.",_e,A,Ce,_t='<code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/username/username.github.io</code>',be,K,et="Install gh-pages.",He,G,je,Ct='<code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">-d</span> gh-pages</code>',Se,q,tt="Add deploy command in package.json file.",Te,B,Me,bt=`<code class="language-json"><span class="token punctuation">&#123;</span>
	<span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
		<span class="token property">"deploy"</span><span class="token operator">:</span> <span class="token string">"vite build &amp; gh-pages -d build -t true"</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,Pe,J,st="Run the deploy command",Ee,N,Le,Ht='<code class="language-bash"><span class="token function">npm</span> run deploy</code>',Re,O,at="References",Ie,U,nt='<li><a href="https://github.com/mvasigh/sveltekit-mdsvex-blog" rel="nofollow">https://github.com/mvasigh/sveltekit-mdsvex-blog</a></li> <li><a href="https://mdsvex.pngwn.io/docs#highlight" rel="nofollow">https://mdsvex.pngwn.io/docs#highlight</a></li> <li><a href="https://kit.svelte.dev/docs/adapters#using-adapters" rel="nofollow">https://kit.svelte.dev/docs/adapters#using-adapters</a></li> <li><a href="https://github.com/sveltejs/kit/tree/main/packages/adapter-static" rel="nofollow">https://github.com/sveltejs/kit/tree/main/packages/adapter-static</a></li> <li><a href="https://mdsvex.pngwn.io/docs" rel="nofollow">https://mdsvex.pngwn.io/docs</a></li>',De,k,lt='<hr/> <ol><li id="fn-1">Before you can deploy your SvelteKit App, you need to adapt it for your deployment target. Adapters are small plugins that take the built app as input and generate output for deployment.<a href="#fnref-1" class="footnote-backref">↩</a></li> <li id="fn-2">Adapter for svelteKit apps that prerenders your entire site as a collection of static files. It’s also possible to create an SPA with it by specifying a fallback page which renders an empty shell. If you’d like to prerender only some pages and not create an SPA for those left out, you will need to use a diffrent adapter together with the prerender option.<a href="#fnref-2" class="footnote-backref">↩</a></li> <li id="fn-3">Static site generators(SSGs) are software engines that use text input files (such as Markdown, reStructuredText, AsciiDoc and JSON) to generate static web pages. Static sites generated by static sites generators do not require a backend after site generation, making them first-class citizens on content delivery networks(CDN). Some of the most popular static site generators are <a href="https://en.wikipedia.org/wiki/Jekyll_(software)" rel="nofollow">JeKyll</a>, <a href="https://en.wikipedia.org/wiki/Hugo_(software)" rel="nofollow">Hugo</a>, NextJS. SSGs are typically for rarely-changing, informative content, such as product pages, new articles, software documentations and blogs.<a href="#fnref-3" class="footnote-backref">↩</a></li> <li id="fn-4">mdsvex is a markdown preprocessor for Svelte components. Basically MDX for Svelte. This preprocessor allows you to use Svelte components in your markdown, or markdown in your Svelte components. mdsvex supports all Svelte syntax and almost all markdown syntax.<a href="#fnref-4" class="footnote-backref">↩</a></li></ol>';return{c(){X=n("hr"),Q=p(),d=n("h1"),d.textContent=Ae,V=p(),h=n("ul"),h.innerHTML=Ke,F=p(),m=n("h1"),m.textContent=Ge,W=p(),v=n("h2"),v.textContent=qe,Y=p(),g=n("pre"),Z=new c(!1),$=p(),y=n("h2"),y.innerHTML=Be,ee=p(),x=n("p"),x.innerHTML=Je,te=p(),w=n("p"),w.textContent=Ne,se=p(),_=n("pre"),ae=new c(!1),ne=p(),C=n("p"),C.textContent=Oe,le=p(),b=n("pre"),pe=new c(!1),oe=p(),H=n("blockquote"),H.innerHTML=Ue,ie=p(),j=n("h2"),j.innerHTML=Xe,re=p(),S=n("p"),S.textContent=Qe,ce=p(),T=n("pre"),ue=new c(!1),fe=p(),M=n("p"),M.textContent=Ve,ke=p(),P=n("pre"),de=new c(!1),he=p(),E=n("p"),E.textContent=Fe,me=p(),L=n("pre"),ve=new c(!1),ge=p(),R=n("h1"),R.textContent=We,ye=p(),I=n("h2"),I.textContent=Ye,xe=p(),D=n("p"),D.innerHTML=Ze,we=p(),z=n("h2"),z.textContent=$e,_e=p(),A=n("pre"),Ce=new c(!1),be=p(),K=n("h2"),K.textContent=et,He=p(),G=n("pre"),je=new c(!1),Se=p(),q=n("h2"),q.textContent=tt,Te=p(),B=n("pre"),Me=new c(!1),Pe=p(),J=n("h2"),J.textContent=st,Ee=p(),N=n("pre"),Le=new c(!1),Re=p(),O=n("h1"),O.textContent=at,Ie=p(),U=n("ul"),U.innerHTML=nt,De=p(),k=n("div"),k.innerHTML=lt,this.h()},l(e){X=l(e,"HR",{}),Q=o(e),d=l(e,"H1",{"data-svelte-h":!0}),i(d)!=="svelte-150gcmt"&&(d.textContent=Ae),V=o(e),h=l(e,"UL",{"data-svelte-h":!0}),i(h)!=="svelte-1kdox3n"&&(h.innerHTML=Ke),F=o(e),m=l(e,"H1",{"data-svelte-h":!0}),i(m)!=="svelte-18g59sl"&&(m.textContent=Ge),W=o(e),v=l(e,"H2",{"data-svelte-h":!0}),i(v)!=="svelte-vi5a6w"&&(v.textContent=qe),Y=o(e),g=l(e,"PRE",{class:!0});var s=u(g);Z=f(s,!1),s.forEach(t),$=o(e),y=l(e,"H2",{"data-svelte-h":!0}),i(y)!=="svelte-15ictlo"&&(y.innerHTML=Be),ee=o(e),x=l(e,"P",{"data-svelte-h":!0}),i(x)!=="svelte-p1r1iw"&&(x.innerHTML=Je),te=o(e),w=l(e,"P",{"data-svelte-h":!0}),i(w)!=="svelte-1uzl4sz"&&(w.textContent=Ne),se=o(e),_=l(e,"PRE",{class:!0});var pt=u(_);ae=f(pt,!1),pt.forEach(t),ne=o(e),C=l(e,"P",{"data-svelte-h":!0}),i(C)!=="svelte-yfi5vc"&&(C.textContent=Oe),le=o(e),b=l(e,"PRE",{class:!0});var ot=u(b);pe=f(ot,!1),ot.forEach(t),oe=o(e),H=l(e,"BLOCKQUOTE",{"data-svelte-h":!0}),i(H)!=="svelte-wsu1lc"&&(H.innerHTML=Ue),ie=o(e),j=l(e,"H2",{"data-svelte-h":!0}),i(j)!=="svelte-k7ty0g"&&(j.innerHTML=Xe),re=o(e),S=l(e,"P",{"data-svelte-h":!0}),i(S)!=="svelte-1uzl4sz"&&(S.textContent=Qe),ce=o(e),T=l(e,"PRE",{class:!0});var it=u(T);ue=f(it,!1),it.forEach(t),fe=o(e),M=l(e,"P",{"data-svelte-h":!0}),i(M)!=="svelte-xox485"&&(M.textContent=Ve),ke=o(e),P=l(e,"PRE",{class:!0});var rt=u(P);de=f(rt,!1),rt.forEach(t),he=o(e),E=l(e,"P",{"data-svelte-h":!0}),i(E)!=="svelte-1htodnt"&&(E.textContent=Fe),me=o(e),L=l(e,"PRE",{class:!0});var ct=u(L);ve=f(ct,!1),ct.forEach(t),ge=o(e),R=l(e,"H1",{"data-svelte-h":!0}),i(R)!=="svelte-1auopi8"&&(R.textContent=We),ye=o(e),I=l(e,"H2",{"data-svelte-h":!0}),i(I)!=="svelte-27m9h7"&&(I.textContent=Ye),xe=o(e),D=l(e,"P",{"data-svelte-h":!0}),i(D)!=="svelte-1ponfku"&&(D.innerHTML=Ze),we=o(e),z=l(e,"H2",{"data-svelte-h":!0}),i(z)!=="svelte-mke559"&&(z.textContent=$e),_e=o(e),A=l(e,"PRE",{class:!0});var ut=u(A);Ce=f(ut,!1),ut.forEach(t),be=o(e),K=l(e,"H2",{"data-svelte-h":!0}),i(K)!=="svelte-z0hezv"&&(K.textContent=et),He=o(e),G=l(e,"PRE",{class:!0});var ft=u(G);je=f(ft,!1),ft.forEach(t),Se=o(e),q=l(e,"H2",{"data-svelte-h":!0}),i(q)!=="svelte-1304a98"&&(q.textContent=tt),Te=o(e),B=l(e,"PRE",{class:!0});var kt=u(B);Me=f(kt,!1),kt.forEach(t),Pe=o(e),J=l(e,"H2",{"data-svelte-h":!0}),i(J)!=="svelte-dbjwam"&&(J.textContent=st),Ee=o(e),N=l(e,"PRE",{class:!0});var dt=u(N);Le=f(dt,!1),dt.forEach(t),Re=o(e),O=l(e,"H1",{"data-svelte-h":!0}),i(O)!=="svelte-1vpz5ri"&&(O.textContent=at),Ie=o(e),U=l(e,"UL",{"data-svelte-h":!0}),i(U)!=="svelte-2qc92k"&&(U.innerHTML=nt),De=o(e),k=l(e,"DIV",{class:!0,"data-svelte-h":!0}),i(k)!=="svelte-1rmla8j"&&(k.innerHTML=lt),this.h()},h(){Z.a=null,r(g,"class","language-undefined"),ae.a=null,r(_,"class","language-bash"),pe.a=null,r(b,"class","language-javascript"),ue.a=null,r(T,"class","language-bash"),de.a=null,r(P,"class","language-javascript"),ve.a=null,r(L,"class","language-javascript"),Ce.a=null,r(A,"class","language-bash"),je.a=null,r(G,"class","language-bash"),Me.a=null,r(B,"class","language-json"),Le.a=null,r(N,"class","language-bash"),r(k,"class","footnotes")},m(e,s){a(e,X,s),a(e,Q,s),a(e,d,s),a(e,V,s),a(e,h,s),a(e,F,s),a(e,m,s),a(e,W,s),a(e,v,s),a(e,Y,s),a(e,g,s),Z.m(mt,g),a(e,$,s),a(e,y,s),a(e,ee,s),a(e,x,s),a(e,te,s),a(e,w,s),a(e,se,s),a(e,_,s),ae.m(vt,_),a(e,ne,s),a(e,C,s),a(e,le,s),a(e,b,s),pe.m(gt,b),a(e,oe,s),a(e,H,s),a(e,ie,s),a(e,j,s),a(e,re,s),a(e,S,s),a(e,ce,s),a(e,T,s),ue.m(yt,T),a(e,fe,s),a(e,M,s),a(e,ke,s),a(e,P,s),de.m(xt,P),a(e,he,s),a(e,E,s),a(e,me,s),a(e,L,s),ve.m(wt,L),a(e,ge,s),a(e,R,s),a(e,ye,s),a(e,I,s),a(e,xe,s),a(e,D,s),a(e,we,s),a(e,z,s),a(e,_e,s),a(e,A,s),Ce.m(_t,A),a(e,be,s),a(e,K,s),a(e,He,s),a(e,G,s),je.m(Ct,G),a(e,Se,s),a(e,q,s),a(e,Te,s),a(e,B,s),Me.m(bt,B),a(e,Pe,s),a(e,J,s),a(e,Ee,s),a(e,N,s),Le.m(Ht,N),a(e,Re,s),a(e,O,s),a(e,Ie,s),a(e,U,s),a(e,De,s),a(e,k,s)},p:ze,i:ze,o:ze,d(e){e&&(t(X),t(Q),t(d),t(V),t(h),t(F),t(m),t(W),t(v),t(Y),t(g),t($),t(y),t(ee),t(x),t(te),t(w),t(se),t(_),t(ne),t(C),t(le),t(b),t(oe),t(H),t(ie),t(j),t(re),t(S),t(ce),t(T),t(fe),t(M),t(ke),t(P),t(he),t(E),t(me),t(L),t(ge),t(R),t(ye),t(I),t(xe),t(D),t(we),t(z),t(_e),t(A),t(be),t(K),t(He),t(G),t(Se),t(q),t(Te),t(B),t(Pe),t(J),t(Ee),t(N),t(Re),t(O),t(Ie),t(U),t(De),t(k))}}}const Lt={title:"Deploy SvelteKit + MDsveX with github pages step by step.",description:"How to deploy svelteKit + Mdsvex blog app in github pages.",author:"jack",published:!0,date:"2024. 04. 22.",tags:["SvelteKit","Mdsvex","Github"]};class Rt extends St{constructor(X){super(),Tt(this,X,null,Mt,jt,{})}}export{Rt as default,Lt as metadata};
