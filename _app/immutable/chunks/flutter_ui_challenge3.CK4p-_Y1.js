import{s as Dl,n as Ve}from"./scheduler.K4N95sjU.js";import{S as Fl,i as Bl,e,s as o,H as i,c as p,g as c,f as l,j as k,k as r,d as s,a as u,l as t}from"./index.of2qq71z.js";function El(kl){let d,ze='<ol class="toc-level toc-level-1"><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#widget-구성">Widget 구성</a><ol class="toc-level toc-level-2"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#homepage">HomePage</a><ol class="toc-level toc-level-3"><li class="toc-item toc-item-h3"><a class="toc-link toc-link-h3" href="#globalkey">GlobalKey</a></li></ol></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#pageflipbuilder">PageFlipBuilder</a><ol class="toc-level toc-level-3"><li class="toc-item toc-item-h3"><a class="toc-link toc-link-h3" href="#required-properties">Required properties</a></li><li class="toc-item toc-item-h3"><a class="toc-link toc-link-h3" href="#default-value-properties">Default value properties</a></li></ol></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#pageflipbuilderstate">PageFlipBuilderState</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#animatedpageflipbuilder">AnimatedPageFlipBuilder</a><ol class="toc-level toc-level-3"><li class="toc-item toc-item-h3"><a class="toc-link toc-link-h3" href="#required-properties-1">Required properties</a></li><li class="toc-item toc-item-h3"><a class="toc-link toc-link-h3" href="#default-value-properties-1">Default value properties</a></li></ol></li></ol></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#내부-메서드-세부-구현">내부 메서드 세부 구현</a><ol class="toc-level toc-level-2"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#pageflipbuilderstate-1">PageFlipBuilderState</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#animatedpageflipbuilder-1">AnimatedPageFlipBuilder</a></li></ol></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#example">Example</a><ol class="toc-level toc-level-2"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#animation-controller-정의">animation controller 정의</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#gesturedetector의-horizontal-drag-callback-정의">GestureDetector의 horizontal drag callback 정의</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#animatedwidget으로-완성하기">AnimatedWidget으로 완성하기</a></li></ol></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#sources">Sources</a></li></ol>',js,Os,Rs,F,je="글을 일기전에 문제를 먼저 고민해보고 andrea의 예시 답안을 보고나서 읽기를 추천드립니다!",Us,B,Oe='<img src="/ui3_1.png" alt="ui3_1"/> <img src="/ui3_2.png" alt="ui3_2"/>',Ws,E,Re='pro.codewithandrea.com 의 flutter ui challenge 3번째 문제입니다.(<a href="https://pro.codewithandrea.com/flutter-ui-challenges/003-page-flip/01-intro" rel="nofollow">링크</a>)',Gs,A,Ue="구현하고자 하는 것은 앞뒤에 서로 다른 그림이 있는 페이지를 만들고 버튼과 drag gesture을 통해 앞과 뒤가 바뀌는 애니메이션을 넣는 것입니다.",Ks,q,We="구현 목표는 다음과 같습니다.",Qs,I,Ge="<li>PageFlipBuilder stateful widget 만들기</li> <li>AnimationController 과 AnimatedWidget 을 이용해 뒤집는 애니메이션을 구현하고 버튼을 눌렀을 때 작동되도록 onFlip 콜백에 등록</li> <li>Transform widget을 이용해 페이지가 회전하는 듯한 효과 주기</li> <li>transform 시 tilt 값을 이용해 3D처럼 보이도록하기</li> <li>GestureDetector를 이용해 drag 제스처 감지 및 로직 구현하기</li> <li>AnimationController의 상한값을 1로 하한값을 -1로 설정하기</li> <li>“fling” 을 이용해 좀 더 물리적으로 좀 더 실감나는 애니메이션 구현</li> <li>위젯의 구성을 설계할 때 변화와 edge case에 대응 할 수 있는 코드로 설계할 것.</li>",Ys,m,Ke="Widget 구성",Js,V,Qe='<img src="/widget_tree.png" alt="widget_tree"/>',Ns,f,Ye="HomePage",$s,v,Je="GlobalKey",Xs,z,Ne="<p>Global keys uniquely identify elements. Global keys <strong>provide access</strong> to other objects that are associated with those elements, such as <strong>BuildContext</strong>. For StatefulWidgets, global keys also provide access to <strong>State</strong>.</p>",Zs,j,$e="onFlip의 구현이 StatelessWidget인 LightHomePage 혹은 DarkHomePage에 없음.",na,O,Xe="만약 LightHomePage 혹은 DarkHomePage 안에서 onFlip을 구현하려고 한다면 다음과 같은 문제가 생김",sa,R,Ze="<li><strong>코드가 중복</strong></li> <li><strong>animation controller를 사용하기 위해서 구조자체를 바꿔야함</strong></li> <li><strong>요구사항 변경에 대응하기 어려움</strong></li>",aa,U,np="확장성있고 재활용 가능한 위젯으로 활용하기 위해서는 위처럼 Key를 이용해 State 안에서 onFlip을 정의해서 사용하는 것이 좋음.",ta,x,sp="PageFlipBuilder",ea,h,ap="Required properties",pa,W,tp="<li><p><strong>frontBuilder &amp; backBuilder</strong> :</p> <p>frontBuilder 와 backBuilder를 이용해 보여주고자하는 페이지를 유동적으로 변경할 수 있음.</p> <p>코드에서 사용되는 builder는 정확히는 Builder 위젯을 의미하는게 아니라 WidgetBuilder typedef를 사용함.</p></li>",oa,G,la,rl='<code class="language-dart"><span class="token class-name">WidgetBuilder</span> <span class="token operator">=</span> <span class="token class-name">Widget</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span></code>',ca,K,ep="<p>Signature for a function that creates a widget, e.g. StatelessWidget.build or State.build</p>",ua,w,pp="Default value properties",ia,Q,op="<li><p><strong>nonInteractiveAnimationDuration</strong></p> <p>defaults to const Duration(milliseconds: 500)</p> <p>animation이 진행되는 시간. controller.begin ~ controller.end 까지의 애니메이션이 500ms동안 진행됨.</p></li> <li><p><strong>interactiveFlipEnabled</strong></p> <p>defaults to true</p> <p>interactiveFlipEnabled가 true일 경우에만 drag gesture를 이용한 화면 전환 허용</p></li> <li><p><strong>flipAxis</strong></p> <p>defaults to Axis.vertical</p> <p>화면 전환 시 사용되는 회전축.</p> <p>현재 기본값은 Axis.vertical로 화면상 y축이 회전축이 되어 화면을 전환</p></li> <li><p><strong>maxTilt</strong></p> <p>defaults to 0.003</p> <p>Transform 위젯 사용시 tilt효과에 적용될 값. tilt는 직역하자면 기울인다는 뜻인데 시점을 보정해주는 역할을 합니다.</p> <p>예를 들어 100 x 100 사이즈의 박스를 y축을 기준으로 45도 기울일 경우 생각과는 일반적으로 예상하는 결과와는 다른 상황이 벌어집니다.</p></li>",ka,Y,ra,dl=`<code class="language-dart"><span class="token class-name">Transform</span><span class="token punctuation">(</span>
	transform<span class="token punctuation">:</span> <span class="token class-name">Matrix4</span><span class="token punctuation">.</span><span class="token function">rotationY</span><span class="token punctuation">(</span>pi <span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	child<span class="token punctuation">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>
		width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
		height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
		decoration<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">BoxDecoration</span><span class="token punctuation">(</span>
			color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>black
		<span class="token punctuation">)</span>
	<span class="token punctuation">)</span>
<span class="token punctuation">)</span></code>`,da,J,lp='<img src="/tilt1.png" alt="tilt1"/>',ma,N,cp="하지만 tilt값을 설정해준다면 다음과 같이 기울기가 적용되어 실제 3D상에서 45도를 기울인것 같은 결과를 볼수 있습니다.",fa,$,va,ml=`<code class="language-dart"><span class="token class-name">Transform</span><span class="token punctuation">(</span>
	transform<span class="token punctuation">:</span> <span class="token class-name">Matrix4</span><span class="token punctuation">.</span><span class="token function">rotationY</span><span class="token punctuation">(</span>pi <span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">setEntry</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.003</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	child<span class="token punctuation">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>
		width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
		height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
		decoration<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">BoxDecoration</span><span class="token punctuation">(</span>
			color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>black
		<span class="token punctuation">)</span>
	<span class="token punctuation">)</span>
<span class="token punctuation">)</span></code>`,xa,X,up='<img src="/tilt2.png" alt="tilt2"/>',ha,Z,ip="tilt값을 설정해준다고 하면서 실제로 한 것은 Matrix4의 3행, 0열에 0.003을 넣어준것입니다.",wa,nn,kp="이게 어떻게 tilt값을 설정해준다는 것일까요?",Ca,sn,rp="우선 Flutter가 어떤식으로 화면의 한 점을 나타내는지 알아야 합니다.",ga,an,dp="Flutter는 기본적으로 모든 화면을 3d공간상의 좌표로 표현하는데, 좌표의 한 점을 표현할 때 x값, y값, z값 에 추가로 한 가지 값을 더 넣어서 <strong>4개의 값으로 한 점을 표현</strong>합니다.",_a,tn,mp="이런식으로 좌표를 표현하는 것을 동차좌표(homogeneous coordinates)라고 합니다.",ya,en,fp="예를 들어 한 점(a, b, c)은 (aw, bw, cw, w)로 표현합니다. w값이 1이라면 (a, b, c, 1) 이 되는 식입니다.",ba,pn,vp="따라서, Flutter가 그려내는 화면의 어떤 한 점은 1 x 4 모양의 행렬이됩니다. (사실은 4 x 1 행렬입니다.)",Ta,on,xp="<strong>Matrix4</strong>는 보이는 화면의 특정한 한 점을 나타내는 것이 아니라 어떤 요소에 적용할 <strong>변환(transform) 행렬(matrix)</strong>입니다.",Ha,ln,hp="예를 들어, Matrix4.rotationY(pi/4) 는 pi /4 radian (45도) 만큼 y축을 기준으로 회전시키는 변환을 나타내는 4x4 행렬입니다.",Pa,cn,wp="다음은 이 Matrix4의 각 부분이 어떤 변환을 나타내는지 알 수 있는 간단한 그림입니다.",La,un,Cp='<img src="/Matrix4.png" alt="Matrix4"/>',Sa,kn,gp="<li><p><strong>maxScale</strong></p> <p>0.2</p> <p>스케일 즉, 확대 또는 축소하는 효과를 줄 수 있습니다.</p> <p>값이 1보다 크면 확대, 작으면 축소한다고 생각할 수 있습니다.</p></li>",Ma,rn,Da,fl=`<code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">AnimatedPageFlipBuilder</span> <span class="token keyword">extends</span> <span class="token class-name">AnimatedWidget</span> <span class="token punctuation">&#123;</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	<span class="token keyword">return</span> <span class="token class-name">Transform</span><span class="token punctuation">(</span>
		transform<span class="token punctuation">:</span> matrix <span class="token operator">*</span> <span class="token class-name">Matrix4</span><span class="token punctuation">.</span><span class="token function">diagonal3Values</span><span class="token punctuation">(</span>scale<span class="token punctuation">,</span> scale<span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,Fa,dn,_p="<li><p><strong>onFlipComplete</strong></p> <p>optional</p> <p>onFlipComplete는 필수값은 아닙니다. 현재는 디버깅을 위해 showFrontSide 상태를 로그에 찍어주는 콜백을 사용했습니다.</p></li>",Ba,C,yp="PageFlipBuilderState",Ea,mn,bp="<li><p><strong>showFrontSide</strong></p></li> <li><p><strong>wasFrontSide</strong></p></li>",Aa,g,Tp="AnimatedPageFlipBuilder",qa,_,Hp="Required properties",Ia,fn,Pp="<li><p><strong>showFrontSide</strong></p></li> <li><p><strong>frontBuilder &amp; backBuilder</strong></p></li>",Va,y,Lp="Default value properties",za,vn,Sp="<li><p><strong>flipAxis</strong></p></li> <li><p><strong>maxTilt</strong></p></li> <li><p><strong>maxScale</strong></p></li>",ja,b,Mp="내부 메서드 세부 구현",Oa,T,Dp="PageFlipBuilderState",Ra,xn,Fp="<strong>flip</strong>",Ua,hn,Wa,vl=`<code class="language-dart"><span class="token keyword">void</span> <span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	_wasFrontSide <span class="token operator">=</span> _showFrontSide<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>_showFrontSide<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		_controller<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
		_controller<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,Ga,wn,Bp="flip은 wasFrontSide와 showFrontSide를 property를 이용해 현재 보여지는 페이지의 상태를 바꿔주는 콜백함수입니다.",Ka,Cn,Ep="로직자체는 어렵지 않지만 왜 이렇게 썼는지 바로 이해하기엔 헷갈릴 수 있습니다.",Qa,gn,Ap="showFrontSide 가 true라면 controller.forward 즉, 페이지를 뒤집는 애니메이션이 실행됩니다.",Ya,_n,qp="애니메이션은 다음의 4가지 상태값을 갖습니다.",Ja,yn,Ip="<li><strong>dismissed</strong> : animation이 <strong>시작 지점</strong>에서 <strong>멈췄을 때</strong></li> <li><strong>forward</strong> : animation이 <strong>시작지점</strong>에서 <strong>끝지점</strong>으로 <strong>진행중</strong> 일 때</li> <li><strong>reverse</strong> : animation이 <strong>끝지점</strong>에서 <strong>시작지점</strong>으로 <strong>진행중</strong> 일 때</li> <li><strong>completed</strong> : animation이 <strong>끝지점</strong>에서 <strong>멈췄을 때</strong></li>",Na,bn,$a,xl=`<code class="language-dart"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	late <span class="token keyword">final</span> <span class="token class-name">AnimationController</span> _controller<span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	<span class="token metadata function">@override</span>
	<span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	_controller <span class="token operator">=</span> <span class="token class-name">AnimationController</span><span class="token punctuation">(</span>
		vsync<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">,</span>
		duration<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>nonInteractiveAnimationDuration<span class="token punctuation">,</span>
		lowerBound<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">,</span>
		upperBound<span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>
	_controller<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>
	_controller<span class="token punctuation">.</span><span class="token function">addStatusListener</span><span class="token punctuation">(</span>_updateStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span></code>`,Xa,Tn,Vp="현재 PageFlipBuilderState의 animation controller는 다음과 같은 status listener를 갖고 있습니다.",Za,Hn,nt,hl=`<code class="language-dart"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	<span class="token keyword">void</span> <span class="token function">_updateStatus</span><span class="token punctuation">(</span><span class="token class-name">AnimationStatus</span> status<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span> <span class="token class-name">AnimationStatus</span><span class="token punctuation">.</span>completed <span class="token operator">||</span>
		status <span class="token operator">==</span> <span class="token class-name">AnimationStatus</span><span class="token punctuation">.</span>dismissed<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		_controller<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>
		<span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> _showFrontSide <span class="token operator">=</span> <span class="token operator">!</span>_showFrontSide<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>_wasFrontSide <span class="token operator">!=</span> _showFrontSide<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
			_wasFrontSide <span class="token operator">=</span> _showFrontSide<span class="token punctuation">;</span>
			widget<span class="token punctuation">.</span>onFlipComplete<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>_showFrontSide<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>
</code>`,st,Pn,zp="현재의 애니메이션의 상태가 completed(forward 완료) 혹은 dismissed(reverse 완료)가 됐을 때, 즉 완전한 페이지 전환이 한차례 이루어졌을 때 showFrontSide값을 반대로 바꾸어주고 있습니다.",at,Ln,jp="만약 GestureDetector가 없이 버튼으로만 페이지를 전환했다면 showFrontSide값을 바꾸는 로직이 flip에 있어도 되지만, 지금처럼 버튼 이외의 요소가 상태(showFrontSide)를 변경할 수 있는 환경에서는 해당 상태가 결정되는 지점에서 로직을 구현해야합니다.",tt,Sn,Op="그런데 애초에 wasFrontSide와 showFrontSide 변수는 왜 필요할까요?",et,Mn,Rp="flip상태를 보기 위해서라면 showFrontSide 하나만 있어도 충분할 것 같습니다.",pt,Dn,Up=`wasFrontSide는 updateStatus 함수의 마지막 줄때문에 필요합니다.
<code>widget.onFlipComplete?.call(\\_showFrontside);</code>`,ot,Fn,lt,wl=`<code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">PageFlipBuilder</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">&#123;</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	<span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token class-name">Function</span><span class="token punctuation">(</span>bool<span class="token punctuation">)</span><span class="token operator">?</span> onFlipComplete<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,ct,Bn,Wp="PageFlipBuilder는 flip이 완료됐을 때 최종적으로 실행시킬 함수를 가질 수 있습니다.",ut,En,Gp="함수의 이름처럼 flip이 완료됐을 때를 판단하기 위해서는 현재 보여지는 페이지가 이전 페이지와는 다른 페이지라는 정보를 알아야 하기 때문에 wasFrontSide가 필요하게 된 것입니다.",it,kt,rt,An,Kp="<strong>GestureDetector callbacks</strong>",dt,qn,Qp="GestureDetector는 이름처럼 스크린에 감지되는 행동에 반응할 수 있는 widget입니다.",mt,In,Yp="다양한 제스처들이 있지만 지금 하고자 하는 것은 <strong>수평(horizontal)</strong>으로 혹은 <strong>수직(vertical)</strong>으로 <strong>잡아끄는(drag)</strong> 모션을 감지하고 그에 맞게 페이지를 뒤집는듯한 애니메이션을 넣고 싶습니다.",ft,Vn,Jp="이를 위해선 GestureDetector에 다음과 같은 콜백을 등록해주어야합니다.",vt,zn,Np="<li><p><strong>GestureDragStartCallback?</strong> onHorizontalDragStart</p></li> <li><p><strong>GestureDragUpdateCallback?</strong> onHorizontalDragUpdate</p></li> <li><p><strong>GestureDragEndCallback?</strong> onHorizontalDragEnd</p></li> <li><p><strong>GestureDragStartCallback?</strong> onVerticalDragStart</p></li> <li><p><strong>GestureDragUpdateCallback?</strong> onVerticalDragUpdate</p></li> <li><p><strong>GestureDragEndCallback?</strong> onVerticalEnd</p> <p>이 콜백함수들은 해당 제스처에 맞는 로직을 구현하기 위한 <strong>상세값(detail)</strong>을 파라미터로 갖습니다.</p> <p>예를 들어 <strong>GestureDragUpdateCallback은</strong> DragUpdateDetails 를 파라미터로 갖습니다.</p></li>",xt,jn,$p="<p><code>GestureDragUpdateCallback = void Function(DragUpdateDetails details)</code></p>",ht,On,Xp="이 detail이 제공하는 값들을 가지고 적절하게 애니메이션을 컨트롤하는 로직을 구현하면 되는데 다음의 3가지 함수가 그 역할을 하고 있습니다.",wt,Rn,Zp="<strong>handleDragStart</strong>",Ct,Un,gt,Cl=`<code class="language-dart"><span class="token keyword">void</span> <span class="token function">_handleDragStart</span><span class="token punctuation">(</span><span class="token class-name">DragStartDetails</span> details<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	_wasFrontSide <span class="token operator">=</span> _showFrontSide<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,_t,Wn,no="DragGesture가 시작될 때 wasFrontSide의 값을 showFrontSide로 업데이트해줍니다.",yt,Gn,so="<strong>handleDragUpdate</strong>",bt,Kn,Tt,gl=`<code class="language-dart"><span class="token keyword">void</span> <span class="token function">_handleDragUpdate</span><span class="token punctuation">(</span><span class="token class-name">DragUpdateDetails</span> details<span class="token punctuation">,</span> double crossAxisLength<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  _controller<span class="token punctuation">.</span>value <span class="token operator">+=</span> details<span class="token punctuation">.</span>primaryDelta<span class="token operator">!</span> <span class="token operator">/</span> crossAxisLength<span class="token punctuation">;</span>
  <span class="token function">debugPrint</span><span class="token punctuation">(</span><span class="token punctuation">(</span>details<span class="token punctuation">.</span>primaryDelta<span class="token operator">!</span> <span class="token operator">/</span> crossAxisLength<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,Ht,Qn,ao="controller 시작 지점 값과 끝 지점의 값을 갖는 애니메이션입니다.",Pt,Yn,to="시작 지점은 0이고 끝지점은 처음 controller를 만들때 1(upperBound) 또는 -1(lowerBound)로 설정해주었습니다.",Lt,Jn,eo="<strong>primaryDelta</strong>는 이전 업데이트로부터 마우스(또는 손가락)가 메인 축을 따라(horizontal drag일 경우 x축) <strong>얼마만큼 움직였는지</strong>를 알려줍니다.",St,Nn,po=`primaryDelta 값을 <strong>crossAxisLength</strong>로 나누어주고 있는데 crossAxisLength는 <strong>horizontal drag일 경우 x축의 max width</strong>, <strong>vertical drag일 경우 y축의 max height</strong>이 됩니다.
현재 코드상 crossAxisLength는 다음과 같이 구해집니다.`,Mt,$n,Dt,_l='<code class="language-dart"><span class="token keyword">final</span> crossAxisLength <span class="token operator">=</span> isHorizontal <span class="token operator">?</span> constraints<span class="token punctuation">.</span>maxWidth <span class="token punctuation">:</span> constraints<span class="token punctuation">.</span>maxHeight<span class="token punctuation">;</span></code>',Ft,Xn,oo="(변수명을 좀 헷갈리게 만든것 같긴 하네요..^^; )",Bt,Zn,lo="primaryDelta값을 crossAxisLength값으로 나눠주는 이유는 <strong>정규화</strong>를 해주기 위해서입니다.",Et,ns,co="값을 <strong>0~1사이로 보정</strong>해 다른 사이즈의 스크린에서도 동일한 애니메이션 효과를 얻을 수 있습니다.",At,ss,uo="controller.value에 값을 누적해서 더하고 있는데 <strong>upperBound</strong>, <strong>lowerBound</strong>가 설정되어 있기 때문에 범위를 넘어설 걱정은 안해도 됩니다.",qt,as,io="<strong>handleDragEnd</strong>",It,ts,Vt,yl=`<code class="language-dart"><span class="token keyword">void</span> <span class="token function">_handleDragEnd</span><span class="token punctuation">(</span><span class="token class-name">DragEndDetails</span> details<span class="token punctuation">,</span> double crossAxisLength<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>_controller<span class="token punctuation">.</span>isAnimating <span class="token operator">||</span>
      _controller<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token class-name">AnimationStatus</span><span class="token punctuation">.</span>completed <span class="token operator">||</span>
      _controller<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token class-name">AnimationStatus</span><span class="token punctuation">.</span>dismissed<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> velocityThreshold <span class="token operator">=</span> <span class="token number">2.0</span><span class="token punctuation">;</span>
  <span class="token keyword">final</span> velocity <span class="token operator">=</span> widget<span class="token punctuation">.</span>flipAxis <span class="token operator">==</span> <span class="token class-name">Axis</span><span class="token punctuation">.</span>horizontal
      <span class="token operator">?</span> details<span class="token punctuation">.</span>velocity<span class="token punctuation">.</span>pixelsPerSecond<span class="token punctuation">.</span>dx
      <span class="token punctuation">:</span> details<span class="token punctuation">.</span>velocity<span class="token punctuation">.</span>pixelsPerSecond<span class="token punctuation">.</span>dy<span class="token punctuation">;</span>
  <span class="token keyword">final</span> flingVelocity <span class="token operator">=</span> velocity <span class="token operator">/</span> crossAxisLength<span class="token punctuation">;</span>

  <span class="token comment">// if value and velocity are 0, the gesture was a tap so we return early</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>_controller<span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token number">0.0</span> <span class="token operator">&amp;&amp;</span> flingVelocity <span class="token operator">==</span> <span class="token number">0.0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>_controller<span class="token punctuation">.</span>value <span class="token operator">></span> <span class="token number">0.5</span> <span class="token operator">||</span>
      _controller<span class="token punctuation">.</span>value <span class="token operator">></span> <span class="token number">0.0</span> <span class="token operator">&amp;&amp;</span> flingVelocity <span class="token operator">></span> velocityThreshold<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    _controller<span class="token punctuation">.</span><span class="token function">fling</span><span class="token punctuation">(</span>velocity<span class="token punctuation">:</span> velocityThreshold<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_controller<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">0.5</span> <span class="token operator">||</span>
      _controller<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> <span class="token number">0.0</span> <span class="token operator">&amp;&amp;</span> flingVelocity <span class="token operator">&lt;</span> <span class="token operator">-</span>velocityThreshold<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    _controller<span class="token punctuation">.</span><span class="token function">fling</span><span class="token punctuation">(</span>velocity<span class="token punctuation">:</span> <span class="token operator">-</span>velocityThreshold<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_controller<span class="token punctuation">.</span>value <span class="token operator">></span> <span class="token number">0.0</span> <span class="token operator">||</span>
      _controller<span class="token punctuation">.</span>value <span class="token operator">></span> <span class="token number">0.5</span> <span class="token operator">&amp;&amp;</span> flingVelocity <span class="token operator">&lt;</span> <span class="token operator">-</span>velocityThreshold<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// controller can't fling to 0.0 because the lowerBound is -1.0</span>
    <span class="token comment">// so we decrement the value by 1.0 and toggle the state to get the same effect    _controller.value -= 1.0;</span>
    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> _showFrontSide <span class="token operator">=</span> <span class="token operator">!</span>_showFrontSide<span class="token punctuation">)</span><span class="token punctuation">;</span>
    _controller<span class="token punctuation">.</span><span class="token function">fling</span><span class="token punctuation">(</span>velocity<span class="token punctuation">:</span> <span class="token operator">-</span>velocityThreshold<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_controller<span class="token punctuation">.</span>value <span class="token operator">></span> <span class="token operator">-</span><span class="token number">0.5</span> <span class="token operator">||</span>
      _controller<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">0.5</span> <span class="token operator">&amp;&amp;</span> flingVelocity <span class="token operator">></span> velocityThreshold<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// controller can't fling to 0.0 because the upperBound is 1.0</span>
    <span class="token comment">// so we increment the value by 1.0 and toggle the state to get the same effect    _controller.value += 1.0;</span>
    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> _showFrontSide <span class="token operator">=</span> <span class="token operator">!</span>_showFrontSide<span class="token punctuation">)</span><span class="token punctuation">;</span>
    _controller<span class="token punctuation">.</span><span class="token function">fling</span><span class="token punctuation">(</span>velocity<span class="token punctuation">:</span> velocityThreshold<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,zt,es,ko="사용자가 drag gesture를 종료하는 시점에 호출될 callback입니다.",jt,ps,ro="여러가지 상황에 대해 케이스를 분류하여 실행될 로직을 구현해놨습니다.",Ot,os,mo="드래그를 하다가 어떤 시점에 마우스(또는 손가락)를 화면에서 떼면 페이지를 다시 원점으로(드래그 하기 직전으로) 되돌리는 애니메이션(fling)을 실행시키도록 합니다.",Rt,ls,fo="<strong>fling은</strong> <strong>velocity</strong>값을 파라미터로 받습니다.",Ut,cs,vo="velocity가 양수일 경우 animation forward, 음수일 경우 animation reverse 한다고 생각할 수 있습니다.",Wt,us,xo="<strong>velocityThreshold</strong>는 얼마나 빠르게 드래그 했냐를 판단하는 기준값입니다.",Gt,is,ho="현재는 pixelsPerSecond / crossAxisLength 값을 이용해 2(velocityThreshold)보다 큰지 작은지를 보아 빠르냐 느리냐를 판단하고 있습니다.",Kt,ks,wo="가능한 상황은 다음과 같습니다.",Qt,rs,Co="<li><strong>fling 애니메이션이 실행될 필요가 없는 경우.</strong></li> <li><strong>fling 애니메이션이 필요한 경우</strong><ol><li>화면을 <strong>180도 넘게 돌렸거나</strong> 혹은 <strong>매우 빠르게 우측으로 drag</strong>한 경우</li> <li>화면을 <strong>-180도 넘게 돌렸거나</strong> 혹은 <strong>매우 빠르게 좌측으로 drag</strong>한 경우</li> <li>화면을 <strong>0~180도 돌렸거나</strong> 혹은 <strong>180도 넘게 돌렸으나 다시 좌측으로 매우 빠르게 drag</strong>한 경우</li> <li>화면을 <strong>-180 ~ 0도 돌렸거나</strong> 혹은 <strong>-180도 넘게 돌렸으나 다시 우측으로 매우 빠르게 drag</strong>한 경우</li></ol></li>",Yt,Jt,Nt,H,go="AnimatedPageFlipBuilder",$t,ds,_o="controller의 animation이 진행됨에 따라 어떻게 Transform을 적용할지를 정해주는 부분입니다.",Xt,ms,yo="<strong>getTilt</strong>",Zt,fs,ne,bl=`<code class="language-dart">double <span class="token function">_getTilt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">var</span> tilt <span class="token operator">=</span> <span class="token punctuation">(</span>animation<span class="token punctuation">.</span>value <span class="token operator">-</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0.5</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>animation<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    tilt <span class="token operator">=</span> <span class="token number">1.0</span> <span class="token operator">+</span> animation<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
  <span class="token keyword">return</span> tilt <span class="token operator">*</span> <span class="token punctuation">(</span>_isAnimationFirstHalf <span class="token operator">?</span> <span class="token operator">-</span>maxTilt <span class="token punctuation">:</span> maxTilt<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,se,vs,bo="<strong>rotationAngle</strong>",ae,xs,te,Tl=`<code class="language-dart">double <span class="token function">_rotationAngle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">final</span> rotationValue <span class="token operator">=</span> animation<span class="token punctuation">.</span>value <span class="token operator">*</span> pi<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>animation<span class="token punctuation">.</span>value <span class="token operator">></span> <span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> pi <span class="token operator">-</span> rotationValue<span class="token punctuation">;</span> <span class="token comment">// input from 0.5 to 1.0</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>animation<span class="token punctuation">.</span>value <span class="token operator">></span> <span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> rotationValue<span class="token punctuation">;</span> <span class="token comment">// input from -0.5 to 0.5</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token operator">-</span>pi <span class="token operator">-</span> rotationValue<span class="token punctuation">;</span> <span class="token comment">// input from -1.0 to -0.5</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,ee,hs,To="<strong>scale</strong>",pe,ws,oe,Hl=`<code class="language-dart">double <span class="token function">_scale</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">final</span> absValue <span class="token operator">=</span> animation<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">1.0</span> <span class="token operator">-</span> <span class="token punctuation">(</span>absValue <span class="token operator">&lt;</span> <span class="token number">0.5</span> <span class="token operator">?</span> absValue <span class="token punctuation">:</span> <span class="token number">1.0</span> <span class="token operator">-</span> absValue<span class="token punctuation">)</span> <span class="token operator">*</span> maxScale<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,le,ce,ue,Cs,Ho="보이는 것과는 달리 생각보다 어려운 문제였습니다.",ie,gs,Po="단순하게 한번 실행되고 종료되는 애니메이션이 아니기 때문에 ticker 하나만으로는 구현이 어렵습니다.",ke,_s,Lo="유저의 입력이 어떤 식으로 들어올지 각 케이스를 자세하게 분류해야 하며,",re,ys,So="실감나는 3D 애니메이션을 만들기 위해 적절한 변환을 적용해주어야 합니다.",de,bs,Mo="구현 과정에서는 변동 가능성을 염두에 두고 위젯의 유연한 설계를 위한 고민도 필요했습니다.",me,Ts,Do="andrea의 예시 답안을 나름대로 분석해보며 많이 배우는 시간이었습니다.",fe,P,Fo="Example",ve,Hs,Bo='<img src="/animation_example.gif" alt="animation_example"/>',xe,L,Eo="animation controller 정의",he,Ps,we,Pl=`<code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">DayViewCard</span> <span class="token keyword">extends</span> <span class="token class-name">ConsumerStatefulWidget</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> <span class="token class-name">DayViewCard</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token keyword">super</span><span class="token punctuation">.</span>key<span class="token punctuation">,</span> required <span class="token keyword">this</span><span class="token punctuation">.</span>journal<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">final</span> <span class="token class-name">Journal</span> journal<span class="token punctuation">;</span>

  <span class="token metadata function">@override</span>
  <span class="token class-name">ConsumerState</span><span class="token generics"><span class="token punctuation">&lt;</span>_DayViewCard<span class="token punctuation">></span></span> <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">_DayViewCardState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">class</span> _DayViewCardState <span class="token keyword">extends</span> <span class="token class-name">ConsumerState</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DayViewCard</span><span class="token punctuation">></span></span> <span class="token keyword">with</span> <span class="token class-name">SingleTickerProviderMixin</span> <span class="token punctuation">&#123;</span>

  <span class="token comment">// define animation controller to handle the user drag gesture.</span>
  late <span class="token keyword">final</span> <span class="token class-name">AnimationController</span><span class="token generics"><span class="token punctuation">&lt;</span>double<span class="token punctuation">></span></span> _controller<span class="token punctuation">;</span>

  <span class="token metadata function">@override</span>
  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _controller <span class="token operator">=</span> <span class="token class-name">AnimationController</span><span class="token punctuation">(</span>
      vsync<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">,</span>
      duration<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Duration</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      lowerBound<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">400</span><span class="token punctuation">,</span>
      upperBound<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// Prevent dragging to right.</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    _controller<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token metadata function">@override</span>
  <span class="token keyword">void</span> <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    _controller<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Make sure to dispose the controller.</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,Ce,S,Ao="GestureDetector의 horizontal drag callback 정의",ge,Ls,_e,Ll=`<code class="language-dart"><span class="token keyword">class</span> _DayViewCardState <span class="token keyword">extends</span> <span class="token class-name">ConsumerState</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DayViewCard</span><span class="token punctuation">></span></span> <span class="token keyword">with</span> <span class="token class-name">SingleTickerProviderMixin</span> <span class="token punctuation">&#123;</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

  <span class="token keyword">void</span> <span class="token function">handleDragUpdate</span><span class="token punctuation">(</span><span class="token class-name">DragUpdateDetails</span> details<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// Update the animation controllers value continuously on user's gesture.</span>
    _controller<span class="token punctuation">.</span>value <span class="token operator">+=</span> details<span class="token punctuation">.</span>primaryDelta<span class="token operator">!</span><span class="token punctuation">;</span>

    <span class="token comment">// If the user has dragged the journal over deleteOnDragThreshold,</span>
    <span class="token comment">// vibrate the phone to indicate that this drag action will fire the delete callback.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>_controller<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> deleteOnDragThreshold <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>didVibrate<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token class-name">HapticFeedback</span><span class="token punctuation">.</span><span class="token function">heavyImpact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      didVibrate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">// if the user has dragged the journal over deleteOnDragThreshold,</span>
    <span class="token comment">// and thus the phone has vibrated, and did not end the drag gesture</span>
    <span class="token comment">// but dragged back to the point where the controller's value to under deleteOnDragThreshold,</span>
    <span class="token comment">// reset the didVibrate boolean, so that dragging the journal over the threshold</span>
    <span class="token comment">// will again make the phone vibrate.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>_controller<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> deleteOnDragThreshold <span class="token operator">&amp;&amp;</span> didVibrate<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      didVibrate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

  <span class="token punctuation">&#125;</span>

  <span class="token keyword">void</span> <span class="token function">handleDragEnd</span><span class="token punctuation">(</span><span class="token class-name">DragEndDetails</span> details<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

    <span class="token comment">// If previous animation is still on progress, block further animation updates.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>_controller<span class="token punctuation">.</span>isAnimating <span class="token operator">||</span> _controller<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token class-name">AnimationStatus</span><span class="token punctuation">.</span>completed<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">// If the phone has vibrated, indicating that the user wants to delete the journal,</span>
    <span class="token comment">// execute the on delete callback and reset the journal to the original point,</span>
    <span class="token comment">// where Offset is 0 from right.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>didVibrate<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token function">_handleOnDelete</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
      _controller<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">// Reset the didVibrate bool to false.</span>
    didVibrate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>


    <span class="token comment">// Threshold of which to decide user's intention whether to open the icon menus or not.</span>
    <span class="token keyword">const</span> velocityThreshold <span class="token operator">=</span> <span class="token number">2.0</span><span class="token punctuation">;</span>

    <span class="token comment">// If user has dragged the journal fast enough to overcome the velocityThreshold,</span>
    <span class="token comment">// which is 2 logical pixcels per second, then reset the position of the journal.</span>
    <span class="token comment">// This gets called only when dragging to right.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>details<span class="token punctuation">.</span>primaryVelocity<span class="token operator">!</span> <span class="token operator">>=</span> velocityThreshold<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      _controller<span class="token punctuation">.</span><span class="token function">fling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">// If user has not dragged the journal good enough to show the delete icon button,</span>
    <span class="token comment">// than reset the journal's position.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>_controller<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> deleteIconStartFrom<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      _controller<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>



    <span class="token keyword">if</span> <span class="token punctuation">(</span>_controller<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">>=</span> deleteIconStartFrom <span class="token operator">||</span> details<span class="token punctuation">.</span>primaryVelocity<span class="token operator">!</span> <span class="token operator">>=</span> velocityThreshold<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      _controller<span class="token punctuation">.</span><span class="token function">animateTo</span><span class="token punctuation">(</span>
        <span class="token operator">-</span>dragEndsAt<span class="token punctuation">,</span>
        curve<span class="token punctuation">:</span> <span class="token class-name">Curves</span><span class="token punctuation">.</span>easeOutCirc<span class="token punctuation">,</span>
        duration<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Duration</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>details<span class="token punctuation">.</span>primaryVelocity<span class="token operator">!</span> <span class="token operator">></span> velocityThreshold<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      _controller<span class="token punctuation">.</span><span class="token function">animateTo</span><span class="token punctuation">(</span><span class="token operator">-</span>dragEndsAt<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,ye,Ss,qo="variables used for handling the animation.",be,Ms,Te,Sl=`<code class="language-dart"><span class="token keyword">class</span> _DayViewCardState <span class="token keyword">extends</span> <span class="token class-name">ConsumerState</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DayViewCard</span><span class="token punctuation">></span></span> <span class="token keyword">with</span> <span class="token class-name">SingleTickerProviderMixin</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">/// Whether the user dragged the journal over [deleteOnDragThreshold] offset value.</span>
  bool didVibrate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token comment">/// Distance of which the icon</span>
  double opacityDistance <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span>

  double <span class="token keyword">get</span> iconSize <span class="token operator">=</span><span class="token operator">></span> <span class="token number">45</span><span class="token punctuation">;</span>

  <span class="token comment">/// delete icon will start appearing from this offset to the right</span>
  <span class="token comment">/// Since 8 is the default padding applied to the IconButton, adjust the logical</span>
  <span class="token comment">/// pixels based on this value.</span>
  double <span class="token keyword">get</span> deleteIconStartFrom <span class="token operator">=</span><span class="token operator">></span> iconSize <span class="token operator">-</span> <span class="token number">24</span><span class="token punctuation">;</span>

  <span class="token comment">/// delete icon will start appearing from this offset to the right</span>
  <span class="token comment">/// Since 8 is the default padding applied to the IconButton, adjust the logical</span>
  <span class="token comment">/// pixels based on this value.</span>
  double <span class="token keyword">get</span> editIconStartFrom <span class="token operator">=</span><span class="token operator">></span> iconSize <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>

  <span class="token comment">/// Position of which the drag will end up on user drag gesture to open edit and delete icon buttons.</span>
  double <span class="token keyword">get</span> dragEndsAt <span class="token operator">=</span><span class="token operator">></span> editIconStartFrom <span class="token operator">+</span> opacityDistance <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span>

  <span class="token comment">/// Threshold of which the drag gesture fires the on delete callback.</span>
  double <span class="token keyword">get</span> deleteOnDragThreshold <span class="token operator">=</span><span class="token operator">></span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span>iconSize <span class="token operator">+</span> <span class="token punctuation">(</span>opacityDistance<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">40</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,He,M,Io="AnimatedWidget으로 완성하기",Pe,Ds,Le,Ml=`<code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">AnimatedDayViewBuilder</span> <span class="token keyword">extends</span> <span class="token class-name">AnimatedWidget</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> <span class="token class-name">AnimatedDayViewBuilder</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span>key<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>animation<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>journal<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>iconSize<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>deleteIconOpacity<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>editIconOpacity<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>deleteIconStartFrom<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>editIconStartFrom<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>deleteOnDragThreshold<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>opacityDistance<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onEditCallback<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onDeleteCallback<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onTapCallback<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>isOverThreshold<span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>listenable<span class="token punctuation">:</span> animation<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">final</span> <span class="token class-name">Animation</span><span class="token generics"><span class="token punctuation">&lt;</span>double<span class="token punctuation">></span></span> animation<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">Journal</span> journal<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double iconSize<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double <span class="token class-name">Function</span><span class="token punctuation">(</span>double value<span class="token punctuation">)</span> deleteIconOpacity<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double <span class="token class-name">Function</span><span class="token punctuation">(</span>double value<span class="token punctuation">)</span> editIconOpacity<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double deleteIconStartFrom<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double editIconStartFrom<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double deleteOnDragThreshold<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double<span class="token operator">?</span> opacityDistance<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span> onEditCallback<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span><span class="token punctuation">)</span><span class="token operator">?</span> onDeleteCallback<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span> onTapCallback<span class="token punctuation">;</span>
  <span class="token keyword">final</span> bool<span class="token operator">?</span> isOverThreshold<span class="token punctuation">;</span>

  <span class="token metadata function">@override</span>
  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">final</span> <span class="token class-name">Widget</span> deleteIconButton <span class="token operator">=</span> <span class="token class-name">IconButton</span><span class="token punctuation">(</span>
      onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> onDeleteCallback<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">,</span>
      iconSize<span class="token punctuation">:</span> iconSize<span class="token punctuation">,</span>
      style<span class="token punctuation">:</span> <span class="token class-name">IconButton</span><span class="token punctuation">.</span><span class="token function">styleFrom</span><span class="token punctuation">(</span>
        shape<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">CircleBorder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        backgroundColor<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>redAccent<span class="token punctuation">,</span>
        foregroundColor<span class="token punctuation">:</span> <span class="token class-name">Theme</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>scaffoldBackgroundColor<span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      icon<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Icon</span><span class="token punctuation">(</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>delete_forever<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">Widget</span> deleteIcon <span class="token operator">=</span> animation<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> <span class="token operator">-</span>deleteIconStartFrom
        <span class="token operator">?</span> <span class="token class-name">AnimatedPositioned</span><span class="token punctuation">(</span>
            top<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            bottom<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            right<span class="token punctuation">:</span> animation<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> <span class="token operator">-</span>deleteOnDragThreshold
                <span class="token operator">?</span> <span class="token operator">-</span><span class="token punctuation">(</span>animation<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">72</span><span class="token punctuation">)</span>
                <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            duration<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Duration</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            curve<span class="token punctuation">:</span> <span class="token class-name">Curves</span><span class="token punctuation">.</span>decelerate<span class="token punctuation">,</span>
            child<span class="token punctuation">:</span> <span class="token class-name">Center</span><span class="token punctuation">(</span>
              child<span class="token punctuation">:</span> <span class="token class-name">AnimatedOpacity</span><span class="token punctuation">(</span>
                  opacity<span class="token punctuation">:</span> <span class="token function">deleteIconOpacity</span><span class="token punctuation">(</span>animation<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
                  duration<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Duration</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                  child<span class="token punctuation">:</span> deleteIconButton<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">)</span>
        <span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">SizedBox</span><span class="token punctuation">.</span><span class="token function">shrink</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">final</span> editIconButton <span class="token operator">=</span> <span class="token class-name">IconButton</span><span class="token punctuation">(</span>
      onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        onEditCallback<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        context<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">'/update/</span><span class="token interpolation"><span class="token punctuation">$&#123;</span><span class="token expression">journal<span class="token punctuation">.</span>id</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
      style<span class="token punctuation">:</span> <span class="token class-name">IconButton</span><span class="token punctuation">.</span><span class="token function">styleFrom</span><span class="token punctuation">(</span>
        shape<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">CircleBorder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        backgroundColor<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>lightGreen<span class="token punctuation">,</span>
        foregroundColor<span class="token punctuation">:</span> <span class="token class-name">Theme</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>scaffoldBackgroundColor<span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      iconSize<span class="token punctuation">:</span> iconSize<span class="token punctuation">,</span>
      icon<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Icon</span><span class="token punctuation">(</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>edit<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">Widget</span> editIcon <span class="token operator">=</span> animation<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> <span class="token operator">-</span>editIconStartFrom <span class="token operator">&amp;&amp;</span>
            animation<span class="token punctuation">.</span>value <span class="token operator">></span> <span class="token operator">-</span>deleteOnDragThreshold
        <span class="token operator">?</span> <span class="token class-name">Positioned</span><span class="token punctuation">(</span>
            top<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            bottom<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            right<span class="token punctuation">:</span> iconSize <span class="token operator">+</span> <span class="token number">24</span><span class="token punctuation">,</span>
            child<span class="token punctuation">:</span> <span class="token class-name">Center</span><span class="token punctuation">(</span>
              child<span class="token punctuation">:</span> <span class="token class-name">AnimatedOpacity</span><span class="token punctuation">(</span>
                opacity<span class="token punctuation">:</span> <span class="token function">editIconOpacity</span><span class="token punctuation">(</span>animation<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
                duration<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Duration</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                child<span class="token punctuation">:</span> editIconButton<span class="token punctuation">,</span>
              <span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">)</span>
        <span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">SizedBox</span><span class="token punctuation">.</span><span class="token function">shrink</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Stack</span><span class="token punctuation">(</span>
      children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
        deleteIcon<span class="token punctuation">,</span>
        editIcon<span class="token punctuation">,</span>
        <span class="token class-name">Transform</span><span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>
          offset<span class="token punctuation">:</span> <span class="token class-name">Offset</span><span class="token punctuation">(</span>animation<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          child<span class="token punctuation">:</span> <span class="token class-name">Padding</span><span class="token punctuation">(</span>
            padding<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>top<span class="token punctuation">:</span> <span class="token number">4.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            child<span class="token punctuation">:</span> <span class="token class-name">Center</span><span class="token punctuation">(</span>
              child<span class="token punctuation">:</span> <span class="token class-name">DayViewCard</span><span class="token punctuation">(</span>
                verticalPadding<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
                journal<span class="token punctuation">:</span> journal<span class="token punctuation">,</span>
                onTapCallback<span class="token punctuation">:</span> onTapCallback<span class="token punctuation">,</span>
              <span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,Se,Fs,Vo='예시에 사용된 전체 코드는 <a href="https://github.com/yesj1234/farmers_journal" rel="nofollow">여기</a>에서 확인하실 수 있습니다.',Me,D,zo="Sources",De,Bs,jo='<a href="https://pro.codewithandrea.com/flutter-ui-challenges/003-page-flip/01-intro" rel="nofollow">Andrea Flutter Challenge 3</a>',Fe,Es,Oo='<a href="https://api.flutter.dev/flutter/widgets/GlobalKey-class.html" rel="nofollow">GlobalKey</a>',Be,As,Ro='<a href="https://api.flutter.dev/flutter/widgets/AnimatedWidget-class.html" rel="nofollow">AnimatedWidget</a>',Ee,qs,Uo='<a href="https://api.flutter.dev/flutter/widgets/WidgetBuilder.html" rel="nofollow">WidgetBuilder typedef</a>',Ae,Is,Wo='<a href="https://api.flutter.dev/flutter/vector_math_64/Matrix4-class.html" rel="nofollow">Matrix4</a>',qe,Vs,Go='<a href="https://darkpgmr.tistory.com/78" rel="nofollow">homogeneous coordinates</a>',Ie,zs,Ko='<a href="https://medium.com/flutter-community/a-deep-dive-into-transform-widgets-in-flutter-4dc32cd575a9" rel="nofollow">Flutter Transform</a>';return{c(){d=e("nav"),d.innerHTML=ze,js=o(),Os=e("hr"),Rs=o(),F=e("p"),F.textContent=je,Us=o(),B=e("p"),B.innerHTML=Oe,Ws=o(),E=e("p"),E.innerHTML=Re,Gs=o(),A=e("p"),A.textContent=Ue,Ks=o(),q=e("p"),q.textContent=We,Qs=o(),I=e("ul"),I.innerHTML=Ge,Ys=o(),m=e("h1"),m.textContent=Ke,Js=o(),V=e("p"),V.innerHTML=Qe,Ns=o(),f=e("h2"),f.textContent=Ye,$s=o(),v=e("h3"),v.textContent=Je,Xs=o(),z=e("blockquote"),z.innerHTML=Ne,Zs=o(),j=e("p"),j.textContent=$e,na=o(),O=e("p"),O.textContent=Xe,sa=o(),R=e("ol"),R.innerHTML=Ze,aa=o(),U=e("p"),U.textContent=np,ta=o(),x=e("h2"),x.textContent=sp,ea=o(),h=e("h3"),h.textContent=ap,pa=o(),W=e("ul"),W.innerHTML=tp,oa=o(),G=e("pre"),la=new i(!1),ca=o(),K=e("blockquote"),K.innerHTML=ep,ua=o(),w=e("h3"),w.textContent=pp,ia=o(),Q=e("ul"),Q.innerHTML=op,ka=o(),Y=e("pre"),ra=new i(!1),da=o(),J=e("p"),J.innerHTML=lp,ma=o(),N=e("p"),N.textContent=cp,fa=o(),$=e("pre"),va=new i(!1),xa=o(),X=e("p"),X.innerHTML=up,ha=o(),Z=e("p"),Z.textContent=ip,wa=o(),nn=e("p"),nn.textContent=kp,Ca=o(),sn=e("p"),sn.textContent=rp,ga=o(),an=e("p"),an.innerHTML=dp,_a=o(),tn=e("p"),tn.textContent=mp,ya=o(),en=e("p"),en.textContent=fp,ba=o(),pn=e("p"),pn.textContent=vp,Ta=o(),on=e("p"),on.innerHTML=xp,Ha=o(),ln=e("p"),ln.textContent=hp,Pa=o(),cn=e("p"),cn.textContent=wp,La=o(),un=e("p"),un.innerHTML=Cp,Sa=o(),kn=e("ul"),kn.innerHTML=gp,Ma=o(),rn=e("pre"),Da=new i(!1),Fa=o(),dn=e("ul"),dn.innerHTML=_p,Ba=o(),C=e("h2"),C.textContent=yp,Ea=o(),mn=e("ul"),mn.innerHTML=bp,Aa=o(),g=e("h2"),g.textContent=Tp,qa=o(),_=e("h3"),_.textContent=Hp,Ia=o(),fn=e("ul"),fn.innerHTML=Pp,Va=o(),y=e("h3"),y.textContent=Lp,za=o(),vn=e("ul"),vn.innerHTML=Sp,ja=o(),b=e("h1"),b.textContent=Mp,Oa=o(),T=e("h2"),T.textContent=Dp,Ra=o(),xn=e("p"),xn.innerHTML=Fp,Ua=o(),hn=e("pre"),Wa=new i(!1),Ga=o(),wn=e("p"),wn.textContent=Bp,Ka=o(),Cn=e("p"),Cn.textContent=Ep,Qa=o(),gn=e("p"),gn.textContent=Ap,Ya=o(),_n=e("p"),_n.textContent=qp,Ja=o(),yn=e("ul"),yn.innerHTML=Ip,Na=o(),bn=e("pre"),$a=new i(!1),Xa=o(),Tn=e("p"),Tn.textContent=Vp,Za=o(),Hn=e("pre"),nt=new i(!1),st=o(),Pn=e("p"),Pn.textContent=zp,at=o(),Ln=e("p"),Ln.textContent=jp,tt=o(),Sn=e("p"),Sn.textContent=Op,et=o(),Mn=e("p"),Mn.textContent=Rp,pt=o(),Dn=e("p"),Dn.innerHTML=Up,ot=o(),Fn=e("pre"),lt=new i(!1),ct=o(),Bn=e("p"),Bn.textContent=Wp,ut=o(),En=e("p"),En.textContent=Gp,it=o(),kt=e("hr"),rt=o(),An=e("p"),An.innerHTML=Kp,dt=o(),qn=e("p"),qn.textContent=Qp,mt=o(),In=e("p"),In.innerHTML=Yp,ft=o(),Vn=e("p"),Vn.textContent=Jp,vt=o(),zn=e("ul"),zn.innerHTML=Np,xt=o(),jn=e("blockquote"),jn.innerHTML=$p,ht=o(),On=e("p"),On.textContent=Xp,wt=o(),Rn=e("p"),Rn.innerHTML=Zp,Ct=o(),Un=e("pre"),gt=new i(!1),_t=o(),Wn=e("p"),Wn.textContent=no,yt=o(),Gn=e("p"),Gn.innerHTML=so,bt=o(),Kn=e("pre"),Tt=new i(!1),Ht=o(),Qn=e("p"),Qn.textContent=ao,Pt=o(),Yn=e("p"),Yn.textContent=to,Lt=o(),Jn=e("p"),Jn.innerHTML=eo,St=o(),Nn=e("p"),Nn.innerHTML=po,Mt=o(),$n=e("pre"),Dt=new i(!1),Ft=o(),Xn=e("p"),Xn.textContent=oo,Bt=o(),Zn=e("p"),Zn.innerHTML=lo,Et=o(),ns=e("p"),ns.innerHTML=co,At=o(),ss=e("p"),ss.innerHTML=uo,qt=o(),as=e("p"),as.innerHTML=io,It=o(),ts=e("pre"),Vt=new i(!1),zt=o(),es=e("p"),es.textContent=ko,jt=o(),ps=e("p"),ps.textContent=ro,Ot=o(),os=e("p"),os.textContent=mo,Rt=o(),ls=e("p"),ls.innerHTML=fo,Ut=o(),cs=e("p"),cs.textContent=vo,Wt=o(),us=e("p"),us.innerHTML=xo,Gt=o(),is=e("p"),is.textContent=ho,Kt=o(),ks=e("p"),ks.textContent=wo,Qt=o(),rs=e("ol"),rs.innerHTML=Co,Yt=o(),Jt=e("hr"),Nt=o(),H=e("h2"),H.textContent=go,$t=o(),ds=e("p"),ds.textContent=_o,Xt=o(),ms=e("p"),ms.innerHTML=yo,Zt=o(),fs=e("pre"),ne=new i(!1),se=o(),vs=e("p"),vs.innerHTML=bo,ae=o(),xs=e("pre"),te=new i(!1),ee=o(),hs=e("p"),hs.innerHTML=To,pe=o(),ws=e("pre"),oe=new i(!1),le=o(),ce=e("hr"),ue=o(),Cs=e("p"),Cs.textContent=Ho,ie=o(),gs=e("p"),gs.textContent=Po,ke=o(),_s=e("p"),_s.textContent=Lo,re=o(),ys=e("p"),ys.textContent=So,de=o(),bs=e("p"),bs.textContent=Mo,me=o(),Ts=e("p"),Ts.textContent=Do,fe=o(),P=e("h1"),P.textContent=Fo,ve=o(),Hs=e("p"),Hs.innerHTML=Bo,xe=o(),L=e("h2"),L.textContent=Eo,he=o(),Ps=e("pre"),we=new i(!1),Ce=o(),S=e("h2"),S.textContent=Ao,ge=o(),Ls=e("pre"),_e=new i(!1),ye=o(),Ss=e("p"),Ss.textContent=qo,be=o(),Ms=e("pre"),Te=new i(!1),He=o(),M=e("h2"),M.textContent=Io,Pe=o(),Ds=e("pre"),Le=new i(!1),Se=o(),Fs=e("p"),Fs.innerHTML=Vo,Me=o(),D=e("h1"),D.textContent=zo,De=o(),Bs=e("p"),Bs.innerHTML=jo,Fe=o(),Es=e("p"),Es.innerHTML=Oo,Be=o(),As=e("p"),As.innerHTML=Ro,Ee=o(),qs=e("p"),qs.innerHTML=Uo,Ae=o(),Is=e("p"),Is.innerHTML=Wo,qe=o(),Vs=e("p"),Vs.innerHTML=Go,Ie=o(),zs=e("p"),zs.innerHTML=Ko,this.h()},l(n){d=p(n,"NAV",{class:!0,"data-svelte-h":!0}),c(d)!=="svelte-1w6m3dt"&&(d.innerHTML=ze),js=l(n),Os=p(n,"HR",{}),Rs=l(n),F=p(n,"P",{"data-svelte-h":!0}),c(F)!=="svelte-1vjr62z"&&(F.textContent=je),Us=l(n),B=p(n,"P",{"data-svelte-h":!0}),c(B)!=="svelte-1g5aolc"&&(B.innerHTML=Oe),Ws=l(n),E=p(n,"P",{"data-svelte-h":!0}),c(E)!=="svelte-15thsav"&&(E.innerHTML=Re),Gs=l(n),A=p(n,"P",{"data-svelte-h":!0}),c(A)!=="svelte-4v5zw"&&(A.textContent=Ue),Ks=l(n),q=p(n,"P",{"data-svelte-h":!0}),c(q)!=="svelte-1frj6a1"&&(q.textContent=We),Qs=l(n),I=p(n,"UL",{"data-svelte-h":!0}),c(I)!=="svelte-1u2rx63"&&(I.innerHTML=Ge),Ys=l(n),m=p(n,"H1",{id:!0,"data-svelte-h":!0}),c(m)!=="svelte-49igd3"&&(m.textContent=Ke),Js=l(n),V=p(n,"P",{"data-svelte-h":!0}),c(V)!=="svelte-1f069em"&&(V.innerHTML=Qe),Ns=l(n),f=p(n,"H2",{id:!0,"data-svelte-h":!0}),c(f)!=="svelte-izm64m"&&(f.textContent=Ye),$s=l(n),v=p(n,"H3",{id:!0,"data-svelte-h":!0}),c(v)!=="svelte-nzukjo"&&(v.textContent=Je),Xs=l(n),z=p(n,"BLOCKQUOTE",{"data-svelte-h":!0}),c(z)!=="svelte-jmsc1r"&&(z.innerHTML=Ne),Zs=l(n),j=p(n,"P",{"data-svelte-h":!0}),c(j)!=="svelte-1hlhqoj"&&(j.textContent=$e),na=l(n),O=p(n,"P",{"data-svelte-h":!0}),c(O)!=="svelte-1tgdsxk"&&(O.textContent=Xe),sa=l(n),R=p(n,"OL",{"data-svelte-h":!0}),c(R)!=="svelte-o0irko"&&(R.innerHTML=Ze),aa=l(n),U=p(n,"P",{"data-svelte-h":!0}),c(U)!=="svelte-me9or8"&&(U.textContent=np),ta=l(n),x=p(n,"H2",{id:!0,"data-svelte-h":!0}),c(x)!=="svelte-1ckibqo"&&(x.textContent=sp),ea=l(n),h=p(n,"H3",{id:!0,"data-svelte-h":!0}),c(h)!=="svelte-ji3bap"&&(h.textContent=ap),pa=l(n),W=p(n,"UL",{"data-svelte-h":!0}),c(W)!=="svelte-addkgk"&&(W.innerHTML=tp),oa=l(n),G=p(n,"PRE",{class:!0});var a=k(G);la=r(a,!1),a.forEach(s),ca=l(n),K=p(n,"BLOCKQUOTE",{"data-svelte-h":!0}),c(K)!=="svelte-1f45w3m"&&(K.innerHTML=ep),ua=l(n),w=p(n,"H3",{id:!0,"data-svelte-h":!0}),c(w)!=="svelte-1k5mfic"&&(w.textContent=pp),ia=l(n),Q=p(n,"UL",{"data-svelte-h":!0}),c(Q)!=="svelte-19uo36c"&&(Q.innerHTML=op),ka=l(n),Y=p(n,"PRE",{class:!0});var Qo=k(Y);ra=r(Qo,!1),Qo.forEach(s),da=l(n),J=p(n,"P",{"data-svelte-h":!0}),c(J)!=="svelte-wjwqny"&&(J.innerHTML=lp),ma=l(n),N=p(n,"P",{"data-svelte-h":!0}),c(N)!=="svelte-1wf0nuz"&&(N.textContent=cp),fa=l(n),$=p(n,"PRE",{class:!0});var Yo=k($);va=r(Yo,!1),Yo.forEach(s),xa=l(n),X=p(n,"P",{"data-svelte-h":!0}),c(X)!=="svelte-1ezmoam"&&(X.innerHTML=up),ha=l(n),Z=p(n,"P",{"data-svelte-h":!0}),c(Z)!=="svelte-1vd733q"&&(Z.textContent=ip),wa=l(n),nn=p(n,"P",{"data-svelte-h":!0}),c(nn)!=="svelte-1al0ka9"&&(nn.textContent=kp),Ca=l(n),sn=p(n,"P",{"data-svelte-h":!0}),c(sn)!=="svelte-7who5e"&&(sn.textContent=rp),ga=l(n),an=p(n,"P",{"data-svelte-h":!0}),c(an)!=="svelte-1e53hh2"&&(an.innerHTML=dp),_a=l(n),tn=p(n,"P",{"data-svelte-h":!0}),c(tn)!=="svelte-1cjg5e3"&&(tn.textContent=mp),ya=l(n),en=p(n,"P",{"data-svelte-h":!0}),c(en)!=="svelte-13nzp75"&&(en.textContent=fp),ba=l(n),pn=p(n,"P",{"data-svelte-h":!0}),c(pn)!=="svelte-17tqmuq"&&(pn.textContent=vp),Ta=l(n),on=p(n,"P",{"data-svelte-h":!0}),c(on)!=="svelte-55q4jl"&&(on.innerHTML=xp),Ha=l(n),ln=p(n,"P",{"data-svelte-h":!0}),c(ln)!=="svelte-yu70ta"&&(ln.textContent=hp),Pa=l(n),cn=p(n,"P",{"data-svelte-h":!0}),c(cn)!=="svelte-1hrpysp"&&(cn.textContent=wp),La=l(n),un=p(n,"P",{"data-svelte-h":!0}),c(un)!=="svelte-nexbwe"&&(un.innerHTML=Cp),Sa=l(n),kn=p(n,"UL",{"data-svelte-h":!0}),c(kn)!=="svelte-fhmpsx"&&(kn.innerHTML=gp),Ma=l(n),rn=p(n,"PRE",{class:!0});var Jo=k(rn);Da=r(Jo,!1),Jo.forEach(s),Fa=l(n),dn=p(n,"UL",{"data-svelte-h":!0}),c(dn)!=="svelte-1ktf6ex"&&(dn.innerHTML=_p),Ba=l(n),C=p(n,"H2",{id:!0,"data-svelte-h":!0}),c(C)!=="svelte-1lawwni"&&(C.textContent=yp),Ea=l(n),mn=p(n,"UL",{"data-svelte-h":!0}),c(mn)!=="svelte-1syd28q"&&(mn.innerHTML=bp),Aa=l(n),g=p(n,"H2",{id:!0,"data-svelte-h":!0}),c(g)!=="svelte-roth3i"&&(g.textContent=Tp),qa=l(n),_=p(n,"H3",{id:!0,"data-svelte-h":!0}),c(_)!=="svelte-fm1yer"&&(_.textContent=Hp),Ia=l(n),fn=p(n,"UL",{"data-svelte-h":!0}),c(fn)!=="svelte-1ui0h8r"&&(fn.innerHTML=Pp),Va=l(n),y=p(n,"H3",{id:!0,"data-svelte-h":!0}),c(y)!=="svelte-in9v3a"&&(y.textContent=Lp),za=l(n),vn=p(n,"UL",{"data-svelte-h":!0}),c(vn)!=="svelte-6ll7ry"&&(vn.innerHTML=Sp),ja=l(n),b=p(n,"H1",{id:!0,"data-svelte-h":!0}),c(b)!=="svelte-1qy1qob"&&(b.textContent=Mp),Oa=l(n),T=p(n,"H2",{id:!0,"data-svelte-h":!0}),c(T)!=="svelte-17e80lo"&&(T.textContent=Dp),Ra=l(n),xn=p(n,"P",{"data-svelte-h":!0}),c(xn)!=="svelte-1wbyb5w"&&(xn.innerHTML=Fp),Ua=l(n),hn=p(n,"PRE",{class:!0});var No=k(hn);Wa=r(No,!1),No.forEach(s),Ga=l(n),wn=p(n,"P",{"data-svelte-h":!0}),c(wn)!=="svelte-qn2bsi"&&(wn.textContent=Bp),Ka=l(n),Cn=p(n,"P",{"data-svelte-h":!0}),c(Cn)!=="svelte-aynepf"&&(Cn.textContent=Ep),Qa=l(n),gn=p(n,"P",{"data-svelte-h":!0}),c(gn)!=="svelte-1przbta"&&(gn.textContent=Ap),Ya=l(n),_n=p(n,"P",{"data-svelte-h":!0}),c(_n)!=="svelte-lrq2yy"&&(_n.textContent=qp),Ja=l(n),yn=p(n,"UL",{"data-svelte-h":!0}),c(yn)!=="svelte-1kap2p"&&(yn.innerHTML=Ip),Na=l(n),bn=p(n,"PRE",{class:!0});var $o=k(bn);$a=r($o,!1),$o.forEach(s),Xa=l(n),Tn=p(n,"P",{"data-svelte-h":!0}),c(Tn)!=="svelte-19rdpfg"&&(Tn.textContent=Vp),Za=l(n),Hn=p(n,"PRE",{class:!0});var Xo=k(Hn);nt=r(Xo,!1),Xo.forEach(s),st=l(n),Pn=p(n,"P",{"data-svelte-h":!0}),c(Pn)!=="svelte-5wwi8a"&&(Pn.textContent=zp),at=l(n),Ln=p(n,"P",{"data-svelte-h":!0}),c(Ln)!=="svelte-1ptxl9t"&&(Ln.textContent=jp),tt=l(n),Sn=p(n,"P",{"data-svelte-h":!0}),c(Sn)!=="svelte-18st2ct"&&(Sn.textContent=Op),et=l(n),Mn=p(n,"P",{"data-svelte-h":!0}),c(Mn)!=="svelte-ox95zt"&&(Mn.textContent=Rp),pt=l(n),Dn=p(n,"P",{"data-svelte-h":!0}),c(Dn)!=="svelte-jqdd7n"&&(Dn.innerHTML=Up),ot=l(n),Fn=p(n,"PRE",{class:!0});var Zo=k(Fn);lt=r(Zo,!1),Zo.forEach(s),ct=l(n),Bn=p(n,"P",{"data-svelte-h":!0}),c(Bn)!=="svelte-1bv9s94"&&(Bn.textContent=Wp),ut=l(n),En=p(n,"P",{"data-svelte-h":!0}),c(En)!=="svelte-17tavft"&&(En.textContent=Gp),it=l(n),kt=p(n,"HR",{}),rt=l(n),An=p(n,"P",{"data-svelte-h":!0}),c(An)!=="svelte-1b62mbg"&&(An.innerHTML=Kp),dt=l(n),qn=p(n,"P",{"data-svelte-h":!0}),c(qn)!=="svelte-1j88iwt"&&(qn.textContent=Qp),mt=l(n),In=p(n,"P",{"data-svelte-h":!0}),c(In)!=="svelte-1rmo7d6"&&(In.innerHTML=Yp),ft=l(n),Vn=p(n,"P",{"data-svelte-h":!0}),c(Vn)!=="svelte-1jntpz6"&&(Vn.textContent=Jp),vt=l(n),zn=p(n,"UL",{"data-svelte-h":!0}),c(zn)!=="svelte-puui94"&&(zn.innerHTML=Np),xt=l(n),jn=p(n,"BLOCKQUOTE",{"data-svelte-h":!0}),c(jn)!=="svelte-mxb7ke"&&(jn.innerHTML=$p),ht=l(n),On=p(n,"P",{"data-svelte-h":!0}),c(On)!=="svelte-djkvyd"&&(On.textContent=Xp),wt=l(n),Rn=p(n,"P",{"data-svelte-h":!0}),c(Rn)!=="svelte-1bhckct"&&(Rn.innerHTML=Zp),Ct=l(n),Un=p(n,"PRE",{class:!0});var nl=k(Un);gt=r(nl,!1),nl.forEach(s),_t=l(n),Wn=p(n,"P",{"data-svelte-h":!0}),c(Wn)!=="svelte-1i4dbfo"&&(Wn.textContent=no),yt=l(n),Gn=p(n,"P",{"data-svelte-h":!0}),c(Gn)!=="svelte-1idhhh6"&&(Gn.innerHTML=so),bt=l(n),Kn=p(n,"PRE",{class:!0});var sl=k(Kn);Tt=r(sl,!1),sl.forEach(s),Ht=l(n),Qn=p(n,"P",{"data-svelte-h":!0}),c(Qn)!=="svelte-1vsefnd"&&(Qn.textContent=ao),Pt=l(n),Yn=p(n,"P",{"data-svelte-h":!0}),c(Yn)!=="svelte-1734jq2"&&(Yn.textContent=to),Lt=l(n),Jn=p(n,"P",{"data-svelte-h":!0}),c(Jn)!=="svelte-1tzqzqz"&&(Jn.innerHTML=eo),St=l(n),Nn=p(n,"P",{"data-svelte-h":!0}),c(Nn)!=="svelte-gbxc8m"&&(Nn.innerHTML=po),Mt=l(n),$n=p(n,"PRE",{class:!0});var al=k($n);Dt=r(al,!1),al.forEach(s),Ft=l(n),Xn=p(n,"P",{"data-svelte-h":!0}),c(Xn)!=="svelte-11uo7js"&&(Xn.textContent=oo),Bt=l(n),Zn=p(n,"P",{"data-svelte-h":!0}),c(Zn)!=="svelte-1k7woh8"&&(Zn.innerHTML=lo),Et=l(n),ns=p(n,"P",{"data-svelte-h":!0}),c(ns)!=="svelte-5pwziw"&&(ns.innerHTML=co),At=l(n),ss=p(n,"P",{"data-svelte-h":!0}),c(ss)!=="svelte-u1uyf3"&&(ss.innerHTML=uo),qt=l(n),as=p(n,"P",{"data-svelte-h":!0}),c(as)!=="svelte-1g9pzls"&&(as.innerHTML=io),It=l(n),ts=p(n,"PRE",{class:!0});var tl=k(ts);Vt=r(tl,!1),tl.forEach(s),zt=l(n),es=p(n,"P",{"data-svelte-h":!0}),c(es)!=="svelte-5mn9yp"&&(es.textContent=ko),jt=l(n),ps=p(n,"P",{"data-svelte-h":!0}),c(ps)!=="svelte-1gr9utn"&&(ps.textContent=ro),Ot=l(n),os=p(n,"P",{"data-svelte-h":!0}),c(os)!=="svelte-tqdsr6"&&(os.textContent=mo),Rt=l(n),ls=p(n,"P",{"data-svelte-h":!0}),c(ls)!=="svelte-br48en"&&(ls.innerHTML=fo),Ut=l(n),cs=p(n,"P",{"data-svelte-h":!0}),c(cs)!=="svelte-eba1bg"&&(cs.textContent=vo),Wt=l(n),us=p(n,"P",{"data-svelte-h":!0}),c(us)!=="svelte-1gi78u4"&&(us.innerHTML=xo),Gt=l(n),is=p(n,"P",{"data-svelte-h":!0}),c(is)!=="svelte-1f9oynm"&&(is.textContent=ho),Kt=l(n),ks=p(n,"P",{"data-svelte-h":!0}),c(ks)!=="svelte-6knmx7"&&(ks.textContent=wo),Qt=l(n),rs=p(n,"OL",{"data-svelte-h":!0}),c(rs)!=="svelte-83sk3r"&&(rs.innerHTML=Co),Yt=l(n),Jt=p(n,"HR",{}),Nt=l(n),H=p(n,"H2",{id:!0,"data-svelte-h":!0}),c(H)!=="svelte-1fal5ww"&&(H.textContent=go),$t=l(n),ds=p(n,"P",{"data-svelte-h":!0}),c(ds)!=="svelte-kw7v0a"&&(ds.textContent=_o),Xt=l(n),ms=p(n,"P",{"data-svelte-h":!0}),c(ms)!=="svelte-1ihs1um"&&(ms.innerHTML=yo),Zt=l(n),fs=p(n,"PRE",{class:!0});var el=k(fs);ne=r(el,!1),el.forEach(s),se=l(n),vs=p(n,"P",{"data-svelte-h":!0}),c(vs)!=="svelte-oghzdc"&&(vs.innerHTML=bo),ae=l(n),xs=p(n,"PRE",{class:!0});var pl=k(xs);te=r(pl,!1),pl.forEach(s),ee=l(n),hs=p(n,"P",{"data-svelte-h":!0}),c(hs)!=="svelte-o82oin"&&(hs.innerHTML=To),pe=l(n),ws=p(n,"PRE",{class:!0});var ol=k(ws);oe=r(ol,!1),ol.forEach(s),le=l(n),ce=p(n,"HR",{}),ue=l(n),Cs=p(n,"P",{"data-svelte-h":!0}),c(Cs)!=="svelte-p4acps"&&(Cs.textContent=Ho),ie=l(n),gs=p(n,"P",{"data-svelte-h":!0}),c(gs)!=="svelte-bcg5tm"&&(gs.textContent=Po),ke=l(n),_s=p(n,"P",{"data-svelte-h":!0}),c(_s)!=="svelte-t0ewa0"&&(_s.textContent=Lo),re=l(n),ys=p(n,"P",{"data-svelte-h":!0}),c(ys)!=="svelte-1usyvm5"&&(ys.textContent=So),de=l(n),bs=p(n,"P",{"data-svelte-h":!0}),c(bs)!=="svelte-1189hx0"&&(bs.textContent=Mo),me=l(n),Ts=p(n,"P",{"data-svelte-h":!0}),c(Ts)!=="svelte-19ibeqg"&&(Ts.textContent=Do),fe=l(n),P=p(n,"H1",{id:!0,"data-svelte-h":!0}),c(P)!=="svelte-1auahro"&&(P.textContent=Fo),ve=l(n),Hs=p(n,"P",{"data-svelte-h":!0}),c(Hs)!=="svelte-1c09wgl"&&(Hs.innerHTML=Bo),xe=l(n),L=p(n,"H2",{id:!0,"data-svelte-h":!0}),c(L)!=="svelte-sq6uwm"&&(L.textContent=Eo),he=l(n),Ps=p(n,"PRE",{class:!0});var ll=k(Ps);we=r(ll,!1),ll.forEach(s),Ce=l(n),S=p(n,"H2",{id:!0,"data-svelte-h":!0}),c(S)!=="svelte-15rh49g"&&(S.textContent=Ao),ge=l(n),Ls=p(n,"PRE",{class:!0});var cl=k(Ls);_e=r(cl,!1),cl.forEach(s),ye=l(n),Ss=p(n,"P",{"data-svelte-h":!0}),c(Ss)!=="svelte-uovfy9"&&(Ss.textContent=qo),be=l(n),Ms=p(n,"PRE",{class:!0});var ul=k(Ms);Te=r(ul,!1),ul.forEach(s),He=l(n),M=p(n,"H2",{id:!0,"data-svelte-h":!0}),c(M)!=="svelte-1xu1kab"&&(M.textContent=Io),Pe=l(n),Ds=p(n,"PRE",{class:!0});var il=k(Ds);Le=r(il,!1),il.forEach(s),Se=l(n),Fs=p(n,"P",{"data-svelte-h":!0}),c(Fs)!=="svelte-z04rre"&&(Fs.innerHTML=Vo),Me=l(n),D=p(n,"H1",{id:!0,"data-svelte-h":!0}),c(D)!=="svelte-22jvrw"&&(D.textContent=zo),De=l(n),Bs=p(n,"P",{"data-svelte-h":!0}),c(Bs)!=="svelte-1sel7uf"&&(Bs.innerHTML=jo),Fe=l(n),Es=p(n,"P",{"data-svelte-h":!0}),c(Es)!=="svelte-12s2ysj"&&(Es.innerHTML=Oo),Be=l(n),As=p(n,"P",{"data-svelte-h":!0}),c(As)!=="svelte-1rl8o5h"&&(As.innerHTML=Ro),Ee=l(n),qs=p(n,"P",{"data-svelte-h":!0}),c(qs)!=="svelte-1amdb7d"&&(qs.innerHTML=Uo),Ae=l(n),Is=p(n,"P",{"data-svelte-h":!0}),c(Is)!=="svelte-15kvfen"&&(Is.innerHTML=Wo),qe=l(n),Vs=p(n,"P",{"data-svelte-h":!0}),c(Vs)!=="svelte-2svh7p"&&(Vs.innerHTML=Go),Ie=l(n),zs=p(n,"P",{"data-svelte-h":!0}),c(zs)!=="svelte-13gqejf"&&(zs.innerHTML=Ko),this.h()},h(){u(d,"class","toc"),u(m,"id","widget-구성"),u(f,"id","homepage"),u(v,"id","globalkey"),u(x,"id","pageflipbuilder"),u(h,"id","required-properties"),la.a=null,u(G,"class","language-dart"),u(w,"id","default-value-properties"),ra.a=null,u(Y,"class","language-dart"),va.a=null,u($,"class","language-dart"),Da.a=null,u(rn,"class","language-dart"),u(C,"id","pageflipbuilderstate"),u(g,"id","animatedpageflipbuilder"),u(_,"id","required-properties-1"),u(y,"id","default-value-properties-1"),u(b,"id","내부-메서드-세부-구현"),u(T,"id","pageflipbuilderstate-1"),Wa.a=null,u(hn,"class","language-dart"),$a.a=null,u(bn,"class","language-dart"),nt.a=null,u(Hn,"class","language-dart"),lt.a=null,u(Fn,"class","language-dart"),gt.a=null,u(Un,"class","language-dart"),Tt.a=null,u(Kn,"class","language-dart"),Dt.a=null,u($n,"class","language-dart"),Vt.a=null,u(ts,"class","language-dart"),u(H,"id","animatedpageflipbuilder-1"),ne.a=null,u(fs,"class","language-dart"),te.a=null,u(xs,"class","language-dart"),oe.a=null,u(ws,"class","language-dart"),u(P,"id","example"),u(L,"id","animation-controller-정의"),we.a=null,u(Ps,"class","language-dart"),u(S,"id","gesturedetector의-horizontal-drag-callback-정의"),_e.a=null,u(Ls,"class","language-dart"),Te.a=null,u(Ms,"class","language-dart"),u(M,"id","animatedwidget으로-완성하기"),Le.a=null,u(Ds,"class","language-dart"),u(D,"id","sources")},m(n,a){t(n,d,a),t(n,js,a),t(n,Os,a),t(n,Rs,a),t(n,F,a),t(n,Us,a),t(n,B,a),t(n,Ws,a),t(n,E,a),t(n,Gs,a),t(n,A,a),t(n,Ks,a),t(n,q,a),t(n,Qs,a),t(n,I,a),t(n,Ys,a),t(n,m,a),t(n,Js,a),t(n,V,a),t(n,Ns,a),t(n,f,a),t(n,$s,a),t(n,v,a),t(n,Xs,a),t(n,z,a),t(n,Zs,a),t(n,j,a),t(n,na,a),t(n,O,a),t(n,sa,a),t(n,R,a),t(n,aa,a),t(n,U,a),t(n,ta,a),t(n,x,a),t(n,ea,a),t(n,h,a),t(n,pa,a),t(n,W,a),t(n,oa,a),t(n,G,a),la.m(rl,G),t(n,ca,a),t(n,K,a),t(n,ua,a),t(n,w,a),t(n,ia,a),t(n,Q,a),t(n,ka,a),t(n,Y,a),ra.m(dl,Y),t(n,da,a),t(n,J,a),t(n,ma,a),t(n,N,a),t(n,fa,a),t(n,$,a),va.m(ml,$),t(n,xa,a),t(n,X,a),t(n,ha,a),t(n,Z,a),t(n,wa,a),t(n,nn,a),t(n,Ca,a),t(n,sn,a),t(n,ga,a),t(n,an,a),t(n,_a,a),t(n,tn,a),t(n,ya,a),t(n,en,a),t(n,ba,a),t(n,pn,a),t(n,Ta,a),t(n,on,a),t(n,Ha,a),t(n,ln,a),t(n,Pa,a),t(n,cn,a),t(n,La,a),t(n,un,a),t(n,Sa,a),t(n,kn,a),t(n,Ma,a),t(n,rn,a),Da.m(fl,rn),t(n,Fa,a),t(n,dn,a),t(n,Ba,a),t(n,C,a),t(n,Ea,a),t(n,mn,a),t(n,Aa,a),t(n,g,a),t(n,qa,a),t(n,_,a),t(n,Ia,a),t(n,fn,a),t(n,Va,a),t(n,y,a),t(n,za,a),t(n,vn,a),t(n,ja,a),t(n,b,a),t(n,Oa,a),t(n,T,a),t(n,Ra,a),t(n,xn,a),t(n,Ua,a),t(n,hn,a),Wa.m(vl,hn),t(n,Ga,a),t(n,wn,a),t(n,Ka,a),t(n,Cn,a),t(n,Qa,a),t(n,gn,a),t(n,Ya,a),t(n,_n,a),t(n,Ja,a),t(n,yn,a),t(n,Na,a),t(n,bn,a),$a.m(xl,bn),t(n,Xa,a),t(n,Tn,a),t(n,Za,a),t(n,Hn,a),nt.m(hl,Hn),t(n,st,a),t(n,Pn,a),t(n,at,a),t(n,Ln,a),t(n,tt,a),t(n,Sn,a),t(n,et,a),t(n,Mn,a),t(n,pt,a),t(n,Dn,a),t(n,ot,a),t(n,Fn,a),lt.m(wl,Fn),t(n,ct,a),t(n,Bn,a),t(n,ut,a),t(n,En,a),t(n,it,a),t(n,kt,a),t(n,rt,a),t(n,An,a),t(n,dt,a),t(n,qn,a),t(n,mt,a),t(n,In,a),t(n,ft,a),t(n,Vn,a),t(n,vt,a),t(n,zn,a),t(n,xt,a),t(n,jn,a),t(n,ht,a),t(n,On,a),t(n,wt,a),t(n,Rn,a),t(n,Ct,a),t(n,Un,a),gt.m(Cl,Un),t(n,_t,a),t(n,Wn,a),t(n,yt,a),t(n,Gn,a),t(n,bt,a),t(n,Kn,a),Tt.m(gl,Kn),t(n,Ht,a),t(n,Qn,a),t(n,Pt,a),t(n,Yn,a),t(n,Lt,a),t(n,Jn,a),t(n,St,a),t(n,Nn,a),t(n,Mt,a),t(n,$n,a),Dt.m(_l,$n),t(n,Ft,a),t(n,Xn,a),t(n,Bt,a),t(n,Zn,a),t(n,Et,a),t(n,ns,a),t(n,At,a),t(n,ss,a),t(n,qt,a),t(n,as,a),t(n,It,a),t(n,ts,a),Vt.m(yl,ts),t(n,zt,a),t(n,es,a),t(n,jt,a),t(n,ps,a),t(n,Ot,a),t(n,os,a),t(n,Rt,a),t(n,ls,a),t(n,Ut,a),t(n,cs,a),t(n,Wt,a),t(n,us,a),t(n,Gt,a),t(n,is,a),t(n,Kt,a),t(n,ks,a),t(n,Qt,a),t(n,rs,a),t(n,Yt,a),t(n,Jt,a),t(n,Nt,a),t(n,H,a),t(n,$t,a),t(n,ds,a),t(n,Xt,a),t(n,ms,a),t(n,Zt,a),t(n,fs,a),ne.m(bl,fs),t(n,se,a),t(n,vs,a),t(n,ae,a),t(n,xs,a),te.m(Tl,xs),t(n,ee,a),t(n,hs,a),t(n,pe,a),t(n,ws,a),oe.m(Hl,ws),t(n,le,a),t(n,ce,a),t(n,ue,a),t(n,Cs,a),t(n,ie,a),t(n,gs,a),t(n,ke,a),t(n,_s,a),t(n,re,a),t(n,ys,a),t(n,de,a),t(n,bs,a),t(n,me,a),t(n,Ts,a),t(n,fe,a),t(n,P,a),t(n,ve,a),t(n,Hs,a),t(n,xe,a),t(n,L,a),t(n,he,a),t(n,Ps,a),we.m(Pl,Ps),t(n,Ce,a),t(n,S,a),t(n,ge,a),t(n,Ls,a),_e.m(Ll,Ls),t(n,ye,a),t(n,Ss,a),t(n,be,a),t(n,Ms,a),Te.m(Sl,Ms),t(n,He,a),t(n,M,a),t(n,Pe,a),t(n,Ds,a),Le.m(Ml,Ds),t(n,Se,a),t(n,Fs,a),t(n,Me,a),t(n,D,a),t(n,De,a),t(n,Bs,a),t(n,Fe,a),t(n,Es,a),t(n,Be,a),t(n,As,a),t(n,Ee,a),t(n,qs,a),t(n,Ae,a),t(n,Is,a),t(n,qe,a),t(n,Vs,a),t(n,Ie,a),t(n,zs,a)},p:Ve,i:Ve,o:Ve,d(n){n&&(s(d),s(js),s(Os),s(Rs),s(F),s(Us),s(B),s(Ws),s(E),s(Gs),s(A),s(Ks),s(q),s(Qs),s(I),s(Ys),s(m),s(Js),s(V),s(Ns),s(f),s($s),s(v),s(Xs),s(z),s(Zs),s(j),s(na),s(O),s(sa),s(R),s(aa),s(U),s(ta),s(x),s(ea),s(h),s(pa),s(W),s(oa),s(G),s(ca),s(K),s(ua),s(w),s(ia),s(Q),s(ka),s(Y),s(da),s(J),s(ma),s(N),s(fa),s($),s(xa),s(X),s(ha),s(Z),s(wa),s(nn),s(Ca),s(sn),s(ga),s(an),s(_a),s(tn),s(ya),s(en),s(ba),s(pn),s(Ta),s(on),s(Ha),s(ln),s(Pa),s(cn),s(La),s(un),s(Sa),s(kn),s(Ma),s(rn),s(Fa),s(dn),s(Ba),s(C),s(Ea),s(mn),s(Aa),s(g),s(qa),s(_),s(Ia),s(fn),s(Va),s(y),s(za),s(vn),s(ja),s(b),s(Oa),s(T),s(Ra),s(xn),s(Ua),s(hn),s(Ga),s(wn),s(Ka),s(Cn),s(Qa),s(gn),s(Ya),s(_n),s(Ja),s(yn),s(Na),s(bn),s(Xa),s(Tn),s(Za),s(Hn),s(st),s(Pn),s(at),s(Ln),s(tt),s(Sn),s(et),s(Mn),s(pt),s(Dn),s(ot),s(Fn),s(ct),s(Bn),s(ut),s(En),s(it),s(kt),s(rt),s(An),s(dt),s(qn),s(mt),s(In),s(ft),s(Vn),s(vt),s(zn),s(xt),s(jn),s(ht),s(On),s(wt),s(Rn),s(Ct),s(Un),s(_t),s(Wn),s(yt),s(Gn),s(bt),s(Kn),s(Ht),s(Qn),s(Pt),s(Yn),s(Lt),s(Jn),s(St),s(Nn),s(Mt),s($n),s(Ft),s(Xn),s(Bt),s(Zn),s(Et),s(ns),s(At),s(ss),s(qt),s(as),s(It),s(ts),s(zt),s(es),s(jt),s(ps),s(Ot),s(os),s(Rt),s(ls),s(Ut),s(cs),s(Wt),s(us),s(Gt),s(is),s(Kt),s(ks),s(Qt),s(rs),s(Yt),s(Jt),s(Nt),s(H),s($t),s(ds),s(Xt),s(ms),s(Zt),s(fs),s(se),s(vs),s(ae),s(xs),s(ee),s(hs),s(pe),s(ws),s(le),s(ce),s(ue),s(Cs),s(ie),s(gs),s(ke),s(_s),s(re),s(ys),s(de),s(bs),s(me),s(Ts),s(fe),s(P),s(ve),s(Hs),s(xe),s(L),s(he),s(Ps),s(Ce),s(S),s(ge),s(Ls),s(ye),s(Ss),s(be),s(Ms),s(He),s(M),s(Pe),s(Ds),s(Se),s(Fs),s(Me),s(D),s(De),s(Bs),s(Fe),s(Es),s(Be),s(As),s(Ee),s(qs),s(Ae),s(Is),s(qe),s(Vs),s(Ie),s(zs))}}}const Il={title:"Flutter UI Challenge(3)",description:"Learn some advanced usage of StatefulWidget, Widget builder, AnimatedWidget, and Transform.",author:"jack",date:"2024. 10. 16.",published:!0,tags:["Flutter"]};class Vl extends Fl{constructor(d){super(),Bl(this,d,null,El,Dl,{})}}export{Vl as default,Il as metadata};
