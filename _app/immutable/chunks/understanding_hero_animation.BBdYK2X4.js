import{s as na,n as ss}from"./scheduler.K4N95sjU.js";import{S as sa,i as aa,e as p,s as o,H as h,c as e,g as c,f as l,j as f,k as w,d as s,a as u,l as t}from"./index.of2qq71z.js";function ta(Zs){let i,as='<ol class="toc-level toc-level-1"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#hero를-이해하기-전에-알아두면-좋은-flutter-animation-library의-핵심-widget들">Hero를 이해하기 전에 알아두면 좋은 Flutter animation library의 핵심 widget들</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#hero-animation의-원리">Hero animation의 원리</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#구체적인-예시">구체적인 예시</a></li></ol>',tn,g,ts="Flutter에서 hero animation은 다른 페이지로 이동 할 때 두 페이지 간의 공통되는 widget(대표적으로 이미지)이 화면에서 사라지지 않고 자연스럽게 시작 페이지에서 목표 페이지로 넘어가는 듯한 효과를 주는 애니메이션입니다.",pn,x,ps="일반적으로는 shared element transitions(animations)으로 알려져있습니다.",en,k,es="Hero를 이해하기 전에 알아두면 좋은 Flutter animation library의 핵심 widget들",on,v,os='<li><p><a href="https://api.flutter.dev/flutter/animation/Tween-class.html" rel="nofollow"><strong>Tween</strong></a></p> <p>시작 값과 끝 값만을 파라미터로 받는 stateless widget. Tween은 단지 입력값을 원하는 출력값으로 변환해주는 역할입니다.</p></li>',ln,b,ls="<strong>예시</strong>",cn,C,un,Vs=`<code class="language-dart">basicTween <span class="token operator">=</span> <span class="token class-name">Tween</span><span class="token generics"><span class="token punctuation">&lt;</span>double<span class="token punctuation">></span></span><span class="token punctuation">(</span>begin<span class="token punctuation">:</span> <span class="token number">0.0</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
rTween <span class="token operator">=</span> <span class="token class-name">Tween</span><span class="token generics"><span class="token punctuation">&lt;</span>double<span class="token punctuation">></span></span><span class="token punctuation">(</span>begin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token number">255.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code>`,kn,y,cs='<li><p><a href="https://api.flutter.dev/flutter/animation/AnimationController-class.html" rel="nofollow"><strong>AnimationController</strong></a></p> <p>vsync object를 필수적으로 파라미터로 넘겨주어야 합니다. 이를 위해 일반적으로는 SingleTickerProviderStateMixin 과 같은 클래스를 사용합니다.</p> <p>Tween이 매 프레임 만들어낼 때 마다 setState를 호출하여 화면을 갱신하는 식으로 애니메이션을 진행시킬 수 있습니다.</p></li>',rn,_,us="<strong>예시</strong>",dn,T,mn,Gs=`<code class="language-dart"><span class="token keyword">class</span> _LogoAppState <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LogoApp</span><span class="token punctuation">></span></span> <span class="token keyword">with</span> <span class="token class-name">SingleTickerProviderStateMixin</span> <span class="token punctuation">&#123;</span>
	late <span class="token class-name">Animation</span><span class="token generics"><span class="token punctuation">&lt;</span>double<span class="token punctuation">></span></span> animation<span class="token punctuation">;</span>
	late <span class="token class-name">AnimationController</span> controller<span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token class-name">Tween</span><span class="token generics"><span class="token punctuation">&lt;</span>double<span class="token punctuation">></span></span> sizeTween <span class="token operator">=</span> <span class="token class-name">Tween</span><span class="token generics"><span class="token punctuation">&lt;</span>double<span class="token punctuation">></span></span><span class="token punctuation">(</span>begin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token metadata function">@override</span>
	<span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		controller <span class="token operator">=</span> <span class="token class-name">AnimationController</span><span class="token punctuation">(</span>vsync<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		animation <span class="token operator">=</span> sizeTween<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>controller<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		controller<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>

	<span class="token metadata function">@override</span>
	<span class="token keyword">void</span> <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		controller<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>

	<span class="token metadata function">@override</span>
	<span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">return</span> <span class="token class-name">Center</span><span class="token punctuation">(</span>
			child<span class="token punctuation">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>
				width<span class="token punctuation">:</span> animation<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
				height<span class="token punctuation">:</span> animation<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
				child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">FlutterLogo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>

<span class="token punctuation">&#125;</span>
</code>`,hn,H,is='<li><p><a href="https://api.flutter.dev/flutter/widgets/AnimatedWidget-class.html" rel="nofollow"><strong>AnimatedWidget</strong></a></p> <p>Tween과 AnimationController를 이용하면 굉장히 explicit한 애니메이션 코드를 구현할 수 있습니다.</p> <p>하지만 애니메이션과 관련된 코드가 UI코드와 결합되기 때문에 코드의 복잡도가 올라가 가독성과 유지보수성이 떨어질 수 있습니다.</p> <p>이를 위해 UI와 애니메이션을 분리할 수 있게 도와주는 것이 AnimatedWidget입니다.</p> <p>UI는 그대로 그리고 외부에서 animation을 파라미터로 받아와서 사용하면 되는 식입니다.</p></li>',fn,L,ks="<strong>예시</strong>",wn,R,gn,Js=`<code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">AnimatedLogo</span> <span class="token keyword">extends</span> <span class="token class-name">AnimatedWidget</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">const</span> <span class="token class-name">AnimatedLogo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token keyword">super</span><span class="token punctuation">.</span>key<span class="token punctuation">,</span> required <span class="token class-name">Animation</span><span class="token generics"><span class="token punctuation">&lt;</span>double<span class="token punctuation">></span></span> animation<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>listenable<span class="token punctuation">:</span> animation<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token metadata function">@override</span>
	<span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">final</span> animation <span class="token operator">=</span> listenable <span class="token operator">as</span> <span class="token class-name">Animation</span><span class="token generics"><span class="token punctuation">&lt;</span>double<span class="token punctuation">></span></span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token class-name">Center</span><span class="token punctuation">(</span>
			child<span class="token punctuation">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>
			margin<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">symmetric</span><span class="token punctuation">(</span>vertical<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			height<span class="token punctuation">:</span> animation<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
			width<span class="token punctuation">:</span> animation<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
			child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">FlutterLogo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token punctuation">)</span>
		<span class="token punctuation">)</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,xn,M,rs='<li><p><a href="https://api.flutter.dev/flutter/widgets/AnimatedBuilder-class.html" rel="nofollow"><strong>AnimatedBuilder</strong></a></p> <p>AnimatedBuilder는 애니메이션이 필요한 부분을 다른 widget tree 중간에 넣어서 사용할 필요가 있을 때 사용하면 위젯입니다.</p> <p>AnimatedWidget이 animation과 UI를 분리했듯 AnimatedBuilder는 UI, animation, transition을 분리하여 사용할 수 있도록 도와줍니다.</p></li>',vn,r,ds="Hero animation의 원리",bn,I,ms="Hero widget이 화면 전환 애니메이션을 구현하는 원리는 다음과 같습니다.",Cn,P,hs="<li>시작 화면과 도착 화면에서 사용될 <strong>hero widget을 정의</strong>합니다. 두 페이지간의 hero widget은 <strong>동일한 tag</strong>를 가져야 하며 tag가 다른 hero widget들과 <strong>중복 되어서는 안됩</strong>니다.</li> <li>시작 화면에서 도착 화면으로 가는 함수가 호출이 되는 경우(Navigator.of(context).push와 같은) 전환 애니메이션을 실행시키기 위해 도착지점에 대한 정보를 계산합니다(도착 지점 Hero의 사이즈, layout등).</li> <li>위에서 계산된 <strong>도착 지점의 hero</strong>를 Overlay의 시작 지점의 hero가 있던 동일한 위치와 사이즈에 배치합니다. Overlay에 배치된 hero는 전환 시에 항상 화면에 표시되도록 Z축값이 변경됩니다. (참고로 Overlay는 Navigator가 관리하는 widget입니다.)</li> <li>시작 지점의 hero를 화면에서 보이지 않도록 화면밖으로 이동됩니다.</li> <li>화면 전환 애니메이션이 시작됩니다. 전환 시 그려지는 애니메이션은 <code>Tween&lt;Rect&gt;</code> 를 이용해 그려지며 Hero의 createRectTween을 이용해 해당 애니메이션을 변경할 수 있습니다. 기본값은 MaterialRectArcTween입니다.</li> <li>애니메이션이 완료되면 도착 지점의 hero는 Overlay에서 도착 지점 페이지로 옮겨집니다.</li> <li>시작 지점이 화면 밖(offscreen) 에서 route stack에 복구됩니다.</li>",yn,d,fs="구체적인 예시",_n,W,ws="저는 위와 같은 hero animation의 원리를 모르고 animation이 예상대로 동작하지 않는 문제를 가지고 하루 정도를 고민해본 경험이 있습니다.",Tn,E,gs="저의 상황은 다음과 같았습니다.",Hn,A,xs="이미지의 개수에 따라 서로 다른 layout과 border radius를 갖게 하기 위해 이미지의 개수(1개 ~ 5개)에 따라서 다음과 같은 별도의 함수를 정의하여 사용했습니다.",Ln,q,Rn,Ks=`<code class="language-dart"><span class="token comment">/// Simply return a single image tile returned from buildImageTile.</span>
<span class="token comment">/// width and height are just same with the parent.</span>
<span class="token comment">/// In this case, Source Hero's image and destination Hero's image has the same</span>
<span class="token comment">/// size, making super natural transition between two routes.</span>
<span class="token class-name">Widget</span> <span class="token function">_buildSingleImage</span><span class="token punctuation">(</span>double width<span class="token punctuation">,</span> double height<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> <span class="token function">_buildImageTile</span><span class="token punctuation">(</span>
		index<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
		width<span class="token punctuation">:</span> width<span class="token punctuation">,</span>
		height<span class="token punctuation">:</span> height<span class="token punctuation">,</span>
		total<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
		context<span class="token punctuation">:</span> context<span class="token punctuation">,</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token class-name">Widget</span> <span class="token function">_buildTwoImages</span><span class="token punctuation">(</span>double width<span class="token punctuation">,</span> double height<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> <span class="token class-name">Row</span><span class="token punctuation">(</span>
		spacing<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
		children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
			<span class="token class-name">Expanded</span><span class="token punctuation">(</span>
				child<span class="token punctuation">:</span>
				<span class="token function">_buildImageTile</span><span class="token punctuation">(</span>
					index<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
					width<span class="token punctuation">:</span> width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>
					height<span class="token punctuation">:</span> height<span class="token punctuation">,</span>
					total<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
					context<span class="token punctuation">:</span> context<span class="token punctuation">,</span>
				<span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token class-name">Expanded</span><span class="token punctuation">(</span>
				child<span class="token punctuation">:</span>
				<span class="token function">_buildImageTile</span><span class="token punctuation">(</span>
					index<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
					width<span class="token punctuation">:</span> width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>
					height<span class="token punctuation">:</span> height<span class="token punctuation">,</span>
					total<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
					context<span class="token punctuation">:</span> context<span class="token punctuation">,</span>
				<span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token punctuation">]</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token class-name">Widget</span> <span class="token function">_buildThreeImages</span><span class="token punctuation">(</span>double width<span class="token punctuation">,</span> double height<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span>
<span class="token class-name">Widget</span> <span class="token function">_buildFourImages</span><span class="token punctuation">(</span>double width<span class="token punctuation">,</span> double height<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span>
<span class="token class-name">Widget</span> <span class="token function">_buildFiveImages</span><span class="token punctuation">(</span>double width<span class="token punctuation">,</span> double height<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span></code>`,Mn,S,vs="개별 이미지는 위에 정의된 별도의 함수로부터 width와 height를 전달받아 URLImageTile로 전달합니다.",In,U,Pn,Qs=`<code class="language-dart"><span class="token comment">/// Builds an image tile based on the provided parameters.</span>
<span class="token class-name">Widget</span> <span class="token function">_buildImageTile</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>required int index<span class="token punctuation">,</span> required double width<span class="token punctuation">,</span> required double height<span class="token punctuation">,</span> required int total<span class="token punctuation">,</span> required context<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token keyword">final</span> image <span class="token operator">=</span> images<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token class-name">BorderRadius</span><span class="token operator">?</span> borderRadius <span class="token operator">=</span>
	    <span class="token class-name">CustomImageWidgetLayout</span><span class="token punctuation">.</span><span class="token function">calculateBorderRadius</span><span class="token punctuation">(</span>total<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token class-name">URLImageTile</span><span class="token punctuation">(</span>
	    url<span class="token punctuation">:</span> value<span class="token punctuation">,</span>
	    onDelete<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> onDelete<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span>
	    width<span class="token punctuation">:</span> width<span class="token punctuation">,</span>
	    height<span class="token punctuation">:</span> height<span class="token punctuation">,</span>
	    isEditMode<span class="token punctuation">:</span> isEditMode<span class="token punctuation">,</span>
	    borderRadius<span class="token punctuation">:</span> borderRadius<span class="token punctuation">,</span>
	  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,Wn,B,bs="URLImageTile은 다음과 같이 받아온 width, height를 SizedBox에 넘겨주어 크기를 고정시켜줍니다.",En,z,An,Xs=`<code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">URLImageTile</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> <span class="token class-name">URLImageTile</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span>key<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>url<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>onDelete<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>isEditMode<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>borderRadius<span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">final</span> <span class="token class-name">String</span> url<span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span> onDelete<span class="token punctuation">;</span>
	<span class="token keyword">final</span> bool isEditMode<span class="token punctuation">;</span>
	<span class="token keyword">final</span> double width<span class="token punctuation">;</span>
	<span class="token keyword">final</span> double height<span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token class-name">BorderRadius</span><span class="token operator">?</span> borderRadius<span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token class-name">SizedBox</span><span class="token punctuation">(</span>
		width<span class="token punctuation">:</span> width<span class="token punctuation">,</span>
		height<span class="token punctuation">:</span> height<span class="token punctuation">,</span>
		child<span class="token punctuation">:</span> <span class="token class-name">ClipRRect</span><span class="token punctuation">(</span>
		  borderRadius<span class="token punctuation">:</span> borderRadius <span class="token operator">?</span><span class="token operator">?</span>
		      <span class="token keyword">const</span> <span class="token class-name">BorderRadius</span><span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>
	        bottomLeft<span class="token punctuation">:</span> <span class="token class-name">Radius</span><span class="token punctuation">.</span>zero<span class="token punctuation">,</span>
	        bottomRight<span class="token punctuation">:</span> <span class="token class-name">Radius</span><span class="token punctuation">.</span>zero<span class="token punctuation">,</span>
	        topLeft<span class="token punctuation">:</span> <span class="token class-name">Radius</span><span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	        topRight<span class="token punctuation">:</span> <span class="token class-name">Radius</span><span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	      <span class="token punctuation">)</span><span class="token punctuation">,</span>
		  child<span class="token punctuation">:</span> <span class="token class-name">CachedNetworkImage</span><span class="token punctuation">(</span>
		    imageUrl<span class="token punctuation">:</span> url<span class="token punctuation">,</span>
		    width<span class="token punctuation">:</span> width<span class="token punctuation">,</span>
		    height<span class="token punctuation">:</span> height<span class="token punctuation">,</span>
		    fit<span class="token punctuation">:</span> <span class="token class-name">BoxFit</span><span class="token punctuation">.</span>cover<span class="token punctuation">,</span>
		    errorWidget<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> url<span class="token punctuation">,</span> error<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">const</span> <span class="token class-name">Icon</span><span class="token punctuation">(</span>
		      <span class="token class-name">Icons</span><span class="token punctuation">.</span>broken_image<span class="token punctuation">,</span>
		      size<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
			<span class="token punctuation">)</span><span class="token punctuation">,</span>
		  <span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token punctuation">)</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,qn,F,Cs="이미지가 1개일 경우에는 문제 없이 정방향, 역방향 애니메이션 모두 자연스럽게 나타납니다.",Sn,O,ys='<img src="/single_hero.gif" alt="single_hero.gif"/>',Un,N,_s="문제는 이미지가 2 개 이상일 경우에는 다음과 같은 현상이 나타납니다.",Bn,D,Ts='<img src="/double_hero.gif" alt="double_hero.gif"/>',zn,j,Hs="정방향 애니메이션은 자연스럽게 전환이 되지만 역방향 애니메이션은 크기가 갑자기 작아진 상태에서 시작하게 됩니다.",Fn,Z,Ls="Hero가 애니메이션을 그리는 원리의 3번째 단계를 상기해보겠습니다.",On,m,Rs="<li>위에서 계산된 ”<strong>도착 지점의 hero를</strong>” Overlay의 시작 지점의 hero가 있던 위치에 시작지점의 hero와 같은 사이즈로 배치합니다. Overlay에 배치된 hero는 전환 시에 항상 화면에 표시되도록 Z축값이 변경됩니다.</li>",Nn,V,Ms="Overlay에 배치되는 Hero는 <strong>“도착 지점의 Hero”</strong> 입니다.",Dn,G,Is="이는 다음 코드와 같이 이미지가 1개 일 때 갖던 width의 절반 만큼만을 최대 사이즈로 갖는 Hero입니다.",jn,J,Ps="따라서 화면에 그려지는 이미지의 사이즈가 순간적으로 작아지면서 애니메이션이 시작하게 되는 것입니다.",Zn,K,Vn,Ys=`<code class="language-dart"><span class="token comment">/// Now 2 images have to share the width, so each image tile can have half of the width than the single image had.</span>
<span class="token comment">/// This leads</span>
<span class="token class-name">Widget</span> <span class="token function">_buildTwoImages</span><span class="token punctuation">(</span>double width<span class="token punctuation">,</span> double height<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> <span class="token class-name">Row</span><span class="token punctuation">(</span>
		spacing<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
		children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
			<span class="token class-name">Expanded</span><span class="token punctuation">(</span>
				child<span class="token punctuation">:</span>
				<span class="token function">_buildImageTile</span><span class="token punctuation">(</span>
					index<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
					width<span class="token punctuation">:</span> width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>
					height<span class="token punctuation">:</span> height<span class="token punctuation">,</span>
					total<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
					context<span class="token punctuation">:</span> context<span class="token punctuation">,</span>
				<span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token class-name">Expanded</span><span class="token punctuation">(</span>
				child<span class="token punctuation">:</span>
				<span class="token function">_buildImageTile</span><span class="token punctuation">(</span>
					index<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
					width<span class="token punctuation">:</span> width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>
					height<span class="token punctuation">:</span> height<span class="token punctuation">,</span>
					total<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
					context<span class="token punctuation">:</span> context<span class="token punctuation">,</span>
				<span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token punctuation">]</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">&#125;</span></code>`,Gn,Q,Ws="이를 해결하기 위해서는 양 쪽의 Hero가 가질 수 있는 width, height의 값을 동일하게 맞춰줄 필요가 있습니다.",Jn,X,Es="저는 ConstrainedBox를 이용해 이를 구현했습니다.",Kn,Y,As="<strong>Fixed Code:</strong>",Qn,$,Xn,$s=`<code class="language-dart"><span class="token comment">/// Displays network images with caching support via CachedNetworkImage. Shows delete button in edit mode.</span>
<span class="token keyword">class</span> <span class="token class-name">URLImageTile</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> <span class="token class-name">URLImageTile</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span>key<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>url<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>onDelete<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>isEditMode<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>maxWidth<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>maxHeight<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>minWidth<span class="token punctuation">,</span>
    required <span class="token keyword">this</span><span class="token punctuation">.</span>minHeight<span class="token punctuation">,</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>borderRadius<span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">final</span> <span class="token class-name">String</span> url<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span> onDelete<span class="token punctuation">;</span>
  <span class="token keyword">final</span> bool isEditMode<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double maxWidth<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double maxHeight<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double minWidth<span class="token punctuation">;</span>
  <span class="token keyword">final</span> double minHeight<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">BorderRadius</span><span class="token operator">?</span> borderRadius<span class="token punctuation">;</span>

  <span class="token metadata function">@override</span>
  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span>
      <span class="token class-name">ConstrainedBox</span><span class="token punctuation">(</span>
        constraints<span class="token punctuation">:</span> <span class="token class-name">BoxConstraints</span><span class="token punctuation">(</span>
          minHeight<span class="token punctuation">:</span> minHeight<span class="token punctuation">,</span>
          minWidth<span class="token punctuation">:</span> minWidth<span class="token punctuation">,</span>
          maxWidth<span class="token punctuation">:</span> maxWidth<span class="token punctuation">,</span>
          maxHeight<span class="token punctuation">:</span> maxHeight<span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
        child<span class="token punctuation">:</span> <span class="token class-name">ClipRRect</span><span class="token punctuation">(</span>
          borderRadius<span class="token punctuation">:</span> borderRadius <span class="token operator">?</span><span class="token operator">?</span>
              <span class="token keyword">const</span> <span class="token class-name">BorderRadius</span><span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>
                bottomLeft<span class="token punctuation">:</span> <span class="token class-name">Radius</span><span class="token punctuation">.</span>zero<span class="token punctuation">,</span>
                bottomRight<span class="token punctuation">:</span> <span class="token class-name">Radius</span><span class="token punctuation">.</span>zero<span class="token punctuation">,</span>
                topLeft<span class="token punctuation">:</span> <span class="token class-name">Radius</span><span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                topRight<span class="token punctuation">:</span> <span class="token class-name">Radius</span><span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
              <span class="token punctuation">)</span><span class="token punctuation">,</span>
          child<span class="token punctuation">:</span> <span class="token class-name">CachedNetworkImage</span><span class="token punctuation">(</span>
            imageUrl<span class="token punctuation">:</span> url<span class="token punctuation">,</span>
            width<span class="token punctuation">:</span> maxWidth<span class="token punctuation">,</span>
            height<span class="token punctuation">:</span> maxHeight<span class="token punctuation">,</span>
            fit<span class="token punctuation">:</span> <span class="token class-name">BoxFit</span><span class="token punctuation">.</span>cover<span class="token punctuation">,</span>
            errorWidget<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> url<span class="token punctuation">,</span> error<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">const</span> <span class="token class-name">Icon</span><span class="token punctuation">(</span>
              <span class="token class-name">Icons</span><span class="token punctuation">.</span>broken_image<span class="token punctuation">,</span>
              size<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,Yn,nn,qs="긴 글 읽어주셔서 감사합니다.",$n,sn,Ss="Sources",ns,an,Us='<li><a href="https://docs.flutter.dev/ui/animations/hero-animations" rel="nofollow">https://docs.flutter.dev/ui/animations/hero-animations</a></li> <li><a href="https://api.flutter.dev/flutter/widgets/Navigator-class.html" rel="nofollow">https://api.flutter.dev/flutter/widgets/Navigator-class.html</a></li> <li><a href="https://api.flutter.dev/flutter/widgets/Overlay-class.html" rel="nofollow">https://api.flutter.dev/flutter/widgets/Overlay-class.html</a></li> <li><a href="https://api.flutter.dev/flutter/animation/Tween-class.html" rel="nofollow">https://api.flutter.dev/flutter/animation/Tween-class.html</a></li> <li><a href="https://api.flutter.dev/flutter/animation/AnimationController-class.html" rel="nofollow">https://api.flutter.dev/flutter/animation/AnimationController-class.html</a></li>';return{c(){i=p("nav"),i.innerHTML=as,tn=o(),g=p("p"),g.textContent=ts,pn=o(),x=p("p"),x.textContent=ps,en=o(),k=p("h2"),k.textContent=es,on=o(),v=p("ul"),v.innerHTML=os,ln=o(),b=p("p"),b.innerHTML=ls,cn=o(),C=p("pre"),un=new h(!1),kn=o(),y=p("ul"),y.innerHTML=cs,rn=o(),_=p("p"),_.innerHTML=us,dn=o(),T=p("pre"),mn=new h(!1),hn=o(),H=p("ul"),H.innerHTML=is,fn=o(),L=p("p"),L.innerHTML=ks,wn=o(),R=p("pre"),gn=new h(!1),xn=o(),M=p("ul"),M.innerHTML=rs,vn=o(),r=p("h2"),r.textContent=ds,bn=o(),I=p("p"),I.textContent=ms,Cn=o(),P=p("ol"),P.innerHTML=hs,yn=o(),d=p("h2"),d.textContent=fs,_n=o(),W=p("p"),W.textContent=ws,Tn=o(),E=p("p"),E.textContent=gs,Hn=o(),A=p("p"),A.textContent=xs,Ln=o(),q=p("pre"),Rn=new h(!1),Mn=o(),S=p("p"),S.textContent=vs,In=o(),U=p("pre"),Pn=new h(!1),Wn=o(),B=p("p"),B.textContent=bs,En=o(),z=p("pre"),An=new h(!1),qn=o(),F=p("p"),F.textContent=Cs,Sn=o(),O=p("p"),O.innerHTML=ys,Un=o(),N=p("p"),N.textContent=_s,Bn=o(),D=p("p"),D.innerHTML=Ts,zn=o(),j=p("p"),j.textContent=Hs,Fn=o(),Z=p("p"),Z.textContent=Ls,On=o(),m=p("ol"),m.innerHTML=Rs,Nn=o(),V=p("p"),V.innerHTML=Ms,Dn=o(),G=p("p"),G.textContent=Is,jn=o(),J=p("p"),J.textContent=Ps,Zn=o(),K=p("pre"),Vn=new h(!1),Gn=o(),Q=p("p"),Q.textContent=Ws,Jn=o(),X=p("p"),X.textContent=Es,Kn=o(),Y=p("p"),Y.innerHTML=As,Qn=o(),$=p("pre"),Xn=new h(!1),Yn=o(),nn=p("p"),nn.textContent=qs,$n=o(),sn=p("p"),sn.textContent=Ss,ns=o(),an=p("ul"),an.innerHTML=Us,this.h()},l(n){i=e(n,"NAV",{class:!0,"data-svelte-h":!0}),c(i)!=="svelte-10fq1ug"&&(i.innerHTML=as),tn=l(n),g=e(n,"P",{"data-svelte-h":!0}),c(g)!=="svelte-u634hq"&&(g.textContent=ts),pn=l(n),x=e(n,"P",{"data-svelte-h":!0}),c(x)!=="svelte-9irwi5"&&(x.textContent=ps),en=l(n),k=e(n,"H2",{id:!0,"data-svelte-h":!0}),c(k)!=="svelte-ul7nxz"&&(k.textContent=es),on=l(n),v=e(n,"UL",{"data-svelte-h":!0}),c(v)!=="svelte-1khr247"&&(v.innerHTML=os),ln=l(n),b=e(n,"P",{"data-svelte-h":!0}),c(b)!=="svelte-1f2w87l"&&(b.innerHTML=ls),cn=l(n),C=e(n,"PRE",{class:!0});var a=f(C);un=w(a,!1),a.forEach(s),kn=l(n),y=e(n,"UL",{"data-svelte-h":!0}),c(y)!=="svelte-10t275m"&&(y.innerHTML=cs),rn=l(n),_=e(n,"P",{"data-svelte-h":!0}),c(_)!=="svelte-1f2w87l"&&(_.innerHTML=us),dn=l(n),T=e(n,"PRE",{class:!0});var Bs=f(T);mn=w(Bs,!1),Bs.forEach(s),hn=l(n),H=e(n,"UL",{"data-svelte-h":!0}),c(H)!=="svelte-1yez62t"&&(H.innerHTML=is),fn=l(n),L=e(n,"P",{"data-svelte-h":!0}),c(L)!=="svelte-1f2w87l"&&(L.innerHTML=ks),wn=l(n),R=e(n,"PRE",{class:!0});var zs=f(R);gn=w(zs,!1),zs.forEach(s),xn=l(n),M=e(n,"UL",{"data-svelte-h":!0}),c(M)!=="svelte-hfpcvg"&&(M.innerHTML=rs),vn=l(n),r=e(n,"H2",{id:!0,"data-svelte-h":!0}),c(r)!=="svelte-1kul2bo"&&(r.textContent=ds),bn=l(n),I=e(n,"P",{"data-svelte-h":!0}),c(I)!=="svelte-1gx6ss"&&(I.textContent=ms),Cn=l(n),P=e(n,"OL",{"data-svelte-h":!0}),c(P)!=="svelte-ar77mw"&&(P.innerHTML=hs),yn=l(n),d=e(n,"H2",{id:!0,"data-svelte-h":!0}),c(d)!=="svelte-tgihm1"&&(d.textContent=fs),_n=l(n),W=e(n,"P",{"data-svelte-h":!0}),c(W)!=="svelte-2shwe5"&&(W.textContent=ws),Tn=l(n),E=e(n,"P",{"data-svelte-h":!0}),c(E)!=="svelte-1gasq6w"&&(E.textContent=gs),Hn=l(n),A=e(n,"P",{"data-svelte-h":!0}),c(A)!=="svelte-er9s6d"&&(A.textContent=xs),Ln=l(n),q=e(n,"PRE",{class:!0});var Fs=f(q);Rn=w(Fs,!1),Fs.forEach(s),Mn=l(n),S=e(n,"P",{"data-svelte-h":!0}),c(S)!=="svelte-1lxu7x0"&&(S.textContent=vs),In=l(n),U=e(n,"PRE",{class:!0});var Os=f(U);Pn=w(Os,!1),Os.forEach(s),Wn=l(n),B=e(n,"P",{"data-svelte-h":!0}),c(B)!=="svelte-r0lkrn"&&(B.textContent=bs),En=l(n),z=e(n,"PRE",{class:!0});var Ns=f(z);An=w(Ns,!1),Ns.forEach(s),qn=l(n),F=e(n,"P",{"data-svelte-h":!0}),c(F)!=="svelte-1gokji8"&&(F.textContent=Cs),Sn=l(n),O=e(n,"P",{"data-svelte-h":!0}),c(O)!=="svelte-sia8mx"&&(O.innerHTML=ys),Un=l(n),N=e(n,"P",{"data-svelte-h":!0}),c(N)!=="svelte-1m4rktb"&&(N.textContent=_s),Bn=l(n),D=e(n,"P",{"data-svelte-h":!0}),c(D)!=="svelte-54o1pt"&&(D.innerHTML=Ts),zn=l(n),j=e(n,"P",{"data-svelte-h":!0}),c(j)!=="svelte-8o78hg"&&(j.textContent=Hs),Fn=l(n),Z=e(n,"P",{"data-svelte-h":!0}),c(Z)!=="svelte-yz5n3f"&&(Z.textContent=Ls),On=l(n),m=e(n,"OL",{start:!0,"data-svelte-h":!0}),c(m)!=="svelte-1qlx6sh"&&(m.innerHTML=Rs),Nn=l(n),V=e(n,"P",{"data-svelte-h":!0}),c(V)!=="svelte-u58lje"&&(V.innerHTML=Ms),Dn=l(n),G=e(n,"P",{"data-svelte-h":!0}),c(G)!=="svelte-59x5a1"&&(G.textContent=Is),jn=l(n),J=e(n,"P",{"data-svelte-h":!0}),c(J)!=="svelte-1v3mg5b"&&(J.textContent=Ps),Zn=l(n),K=e(n,"PRE",{class:!0});var Ds=f(K);Vn=w(Ds,!1),Ds.forEach(s),Gn=l(n),Q=e(n,"P",{"data-svelte-h":!0}),c(Q)!=="svelte-es4axp"&&(Q.textContent=Ws),Jn=l(n),X=e(n,"P",{"data-svelte-h":!0}),c(X)!=="svelte-76s6nl"&&(X.textContent=Es),Kn=l(n),Y=e(n,"P",{"data-svelte-h":!0}),c(Y)!=="svelte-1qzh68e"&&(Y.innerHTML=As),Qn=l(n),$=e(n,"PRE",{class:!0});var js=f($);Xn=w(js,!1),js.forEach(s),Yn=l(n),nn=e(n,"P",{"data-svelte-h":!0}),c(nn)!=="svelte-1x8m9fu"&&(nn.textContent=qs),$n=l(n),sn=e(n,"P",{"data-svelte-h":!0}),c(sn)!=="svelte-1of2tu2"&&(sn.textContent=Ss),ns=l(n),an=e(n,"UL",{"data-svelte-h":!0}),c(an)!=="svelte-1ycx0du"&&(an.innerHTML=Us),this.h()},h(){u(i,"class","toc"),u(k,"id","hero를-이해하기-전에-알아두면-좋은-flutter-animation-library의-핵심-widget들"),un.a=null,u(C,"class","language-dart"),mn.a=null,u(T,"class","language-dart"),gn.a=null,u(R,"class","language-dart"),u(r,"id","hero-animation의-원리"),u(d,"id","구체적인-예시"),Rn.a=null,u(q,"class","language-dart"),Pn.a=null,u(U,"class","language-dart"),An.a=null,u(z,"class","language-dart"),u(m,"start","3"),Vn.a=null,u(K,"class","language-dart"),Xn.a=null,u($,"class","language-dart")},m(n,a){t(n,i,a),t(n,tn,a),t(n,g,a),t(n,pn,a),t(n,x,a),t(n,en,a),t(n,k,a),t(n,on,a),t(n,v,a),t(n,ln,a),t(n,b,a),t(n,cn,a),t(n,C,a),un.m(Vs,C),t(n,kn,a),t(n,y,a),t(n,rn,a),t(n,_,a),t(n,dn,a),t(n,T,a),mn.m(Gs,T),t(n,hn,a),t(n,H,a),t(n,fn,a),t(n,L,a),t(n,wn,a),t(n,R,a),gn.m(Js,R),t(n,xn,a),t(n,M,a),t(n,vn,a),t(n,r,a),t(n,bn,a),t(n,I,a),t(n,Cn,a),t(n,P,a),t(n,yn,a),t(n,d,a),t(n,_n,a),t(n,W,a),t(n,Tn,a),t(n,E,a),t(n,Hn,a),t(n,A,a),t(n,Ln,a),t(n,q,a),Rn.m(Ks,q),t(n,Mn,a),t(n,S,a),t(n,In,a),t(n,U,a),Pn.m(Qs,U),t(n,Wn,a),t(n,B,a),t(n,En,a),t(n,z,a),An.m(Xs,z),t(n,qn,a),t(n,F,a),t(n,Sn,a),t(n,O,a),t(n,Un,a),t(n,N,a),t(n,Bn,a),t(n,D,a),t(n,zn,a),t(n,j,a),t(n,Fn,a),t(n,Z,a),t(n,On,a),t(n,m,a),t(n,Nn,a),t(n,V,a),t(n,Dn,a),t(n,G,a),t(n,jn,a),t(n,J,a),t(n,Zn,a),t(n,K,a),Vn.m(Ys,K),t(n,Gn,a),t(n,Q,a),t(n,Jn,a),t(n,X,a),t(n,Kn,a),t(n,Y,a),t(n,Qn,a),t(n,$,a),Xn.m($s,$),t(n,Yn,a),t(n,nn,a),t(n,$n,a),t(n,sn,a),t(n,ns,a),t(n,an,a)},p:ss,i:ss,o:ss,d(n){n&&(s(i),s(tn),s(g),s(pn),s(x),s(en),s(k),s(on),s(v),s(ln),s(b),s(cn),s(C),s(kn),s(y),s(rn),s(_),s(dn),s(T),s(hn),s(H),s(fn),s(L),s(wn),s(R),s(xn),s(M),s(vn),s(r),s(bn),s(I),s(Cn),s(P),s(yn),s(d),s(_n),s(W),s(Tn),s(E),s(Hn),s(A),s(Ln),s(q),s(Mn),s(S),s(In),s(U),s(Wn),s(B),s(En),s(z),s(qn),s(F),s(Sn),s(O),s(Un),s(N),s(Bn),s(D),s(zn),s(j),s(Fn),s(Z),s(On),s(m),s(Nn),s(V),s(Dn),s(G),s(jn),s(J),s(Zn),s(K),s(Gn),s(Q),s(Jn),s(X),s(Kn),s(Y),s(Qn),s($),s(Yn),s(nn),s($n),s(sn),s(ns),s(an))}}}const oa={title:"Understanding Flutter Hero animations process",description:"Flutter Hero animation에 대해 알아봅니다.",author:"jack",published:!0,date:"2025. 02. 22.",tags:["Flutter"]};class la extends sa{constructor(i){super(),aa(this,i,null,ta,na,{})}}export{la as default,oa as metadata};
