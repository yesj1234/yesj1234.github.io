import{s as as,n as wn}from"./scheduler.Bch89ZIZ.js";import{S as ps,i as es,e as p,s as o,H as z,c as e,g as c,f as l,j as S,k as N,d as s,a as u,l as a}from"./index.WsbZAp97.js";function os(Xn){let i,Pn='<ol class="toc-level toc-level-1"><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#branch란">Branch란?</a><ol class="toc-level toc-level-2"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#if">If</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#if-case">If case</a></li></ol></li></ol>',U,k,hn="Branch란?",A,x,Hn="Branch는 다음과 같이 코드의 흐름이 조건에 따라 나누어 지는 것을 의미합니다.",K,m,bn='<img src="/controlFlow.png" alt="ControlFlowExample"/>',O,v,Tn="(<del>15년도 SKT T1은 월즈에 나온 모든 팀들에게 자연재해 그 자체였습니다. 대상혁..</del>)",V,C,Ln="Dart에서는 크게 다음의 3가지 방식으로 Branch를 이용해 코드의 흐름을 제어합니다.",W,d,Mn="<li><strong>If</strong></li> <li><strong>If case</strong></li> <li><strong>switch</strong></li>",G,_,En="본 글에서는 If 와 If case에 대해서 알아보도록 하겠습니다.",J,y,Bn='switch는 <a href="https://yesj1234.github.io/posts/terminologies1" rel="nofollow">헷갈리는 용어들 정리(1)-statement &amp; expression</a>에 정리해두었으니 참고해주세요.',Q,r,Dn="If",X,g,In="If문은 condition으로 bool값으로 평가될 수 있는 expression이 올 수 있습니다.",Y,w,Z,Yn=`<code class="language-dart"><span class="token comment">// bool isFakerDominating() &#123;...&#125;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFakerDominating</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    you<span class="token punctuation">.</span><span class="token function">lose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,nn,P,$n="만약 여러 종류의 분기가 필요하다면 else 문을 이용해 여러 개의 분기점을 만들 수 있습니다.",sn,h,tn,Zn=`<code class="language-dart"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFakerDominating</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    you<span class="token punctuation">.</span><span class="token function">lose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isMarineDominating</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    you<span class="token punctuation">.</span><span class="token function">lose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isBangDominating</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    you<span class="token punctuation">.</span><span class="token function">lose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isBengiUsingHand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    you<span class="token punctuation">.</span><span class="token function">lose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    you<span class="token punctuation">.</span><span class="token function">win</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,an,H,qn="만약 분기가 하나뿐이라면 <strong>conditional expression</strong>을 사용해 더 간단하게 표현할 수도 있습니다.",pn,b,Fn="conditional expression은 다음과 같이 표현할 수 있습니다.",en,T,Rn="<code>condition ? expression1 : expression2</code>",on,L,jn="만약 condition이 true라면 expression1의 값이 evaluate되고 false라면 expression2의 값이 evaluate됩니다.",ln,M,zn="다른 언어에서는 흔히 삼항연산자(ternary operation)으로도 많이 부릅니다.",cn,E,un,ns='<code class="language-dart"><span class="token class-name">String</span> yourTeam <span class="token operator">=</span> <span class="token function">isBengUsingHand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"Lose"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Win"</span></span><span class="token punctuation">;</span></code>',kn,f,Sn="If case",rn,B,Nn="If case 문은 pattern 문법과 함께 Dart 버전 3.0 이상부터 지원되는 문법입니다.",fn,D,Un="if case 문은 조건문에 pattern 을 이용한 <strong>pattern matching</strong>과 <strong>destructuring</strong>(구조 분해 할당)이 가능합니다.",xn,I,An="만약 다음과 같이 특정 패턴을 파악해야 하는 경우가 있다고 가정해 봅시다.",mn,$,vn,ss=`<code class="language-dart">bool <span class="token function">isCartesian</span><span class="token punctuation">(</span>pair<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span> <span class="token comment">// additional coding for pattern matching</span>
bool <span class="token function">isPolar</span><span class="token punctuation">(</span>pair<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span>

<span class="token keyword">var</span> anonymousPair <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isCartesian</span><span class="token punctuation">(</span>anonymousPair<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"pair is cartesian"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation"><span class="token punctuation">$&#123;</span><span class="token expression">anonymousPair<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span><span class="token punctuation">&#125;</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">$&#123;</span><span class="token expression">anonymousPair<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPolar</span><span class="token punctuation">(</span>anonymousPair<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"pair is polar"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation"><span class="token punctuation">$&#123;</span><span class="token expression">anonymousPair<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span><span class="token punctuation">&#125;</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">$&#123;</span><span class="token expression">anonymousPair<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// Not implemented.</span>
<span class="token punctuation">&#125;</span></code>`,Cn,q,Kn="if case 문을 이용하면 다음과 같이 바꿀 수 있습니다.",dn,F,_n,ts=`<code class="language-dart"><span class="token keyword">var</span> anonymousPair <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>anonymousPair <span class="token keyword">case</span> <span class="token punctuation">[</span>int x<span class="token punctuation">,</span> int y<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// pattern matching and destructuring.</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"pair is cartesian"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">'</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">x</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">y</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"pair is polar"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">'</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">x</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">y</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,yn,R,On="if case문은 위처럼 1가지 케이스에 대해 pattern matching하는 경우 유용한 문법입니다.",gn,j,Vn="여러 개의 case에 대해 분기를 위해서는 switch문을 이용하는 것이 적절합니다.";return{c(){i=p("nav"),i.innerHTML=Pn,U=o(),k=p("h1"),k.textContent=hn,A=o(),x=p("p"),x.textContent=Hn,K=o(),m=p("p"),m.innerHTML=bn,O=o(),v=p("p"),v.innerHTML=Tn,V=o(),C=p("p"),C.textContent=Ln,W=o(),d=p("ol"),d.innerHTML=Mn,G=o(),_=p("p"),_.textContent=En,J=o(),y=p("p"),y.innerHTML=Bn,Q=o(),r=p("h2"),r.textContent=Dn,X=o(),g=p("p"),g.textContent=In,Y=o(),w=p("pre"),Z=new z(!1),nn=o(),P=p("p"),P.textContent=$n,sn=o(),h=p("pre"),tn=new z(!1),an=o(),H=p("p"),H.innerHTML=qn,pn=o(),b=p("p"),b.textContent=Fn,en=o(),T=p("p"),T.innerHTML=Rn,on=o(),L=p("p"),L.textContent=jn,ln=o(),M=p("p"),M.textContent=zn,cn=o(),E=p("pre"),un=new z(!1),kn=o(),f=p("h2"),f.textContent=Sn,rn=o(),B=p("p"),B.textContent=Nn,fn=o(),D=p("p"),D.innerHTML=Un,xn=o(),I=p("p"),I.textContent=An,mn=o(),$=p("pre"),vn=new z(!1),Cn=o(),q=p("p"),q.textContent=Kn,dn=o(),F=p("pre"),_n=new z(!1),yn=o(),R=p("p"),R.textContent=On,gn=o(),j=p("p"),j.textContent=Vn,this.h()},l(n){i=e(n,"NAV",{class:!0,"data-svelte-h":!0}),c(i)!=="svelte-8bneq3"&&(i.innerHTML=Pn),U=l(n),k=e(n,"H1",{id:!0,"data-svelte-h":!0}),c(k)!=="svelte-5zifsd"&&(k.textContent=hn),A=l(n),x=e(n,"P",{"data-svelte-h":!0}),c(x)!=="svelte-ofw1td"&&(x.textContent=Hn),K=l(n),m=e(n,"P",{"data-svelte-h":!0}),c(m)!=="svelte-2gzxa8"&&(m.innerHTML=bn),O=l(n),v=e(n,"P",{"data-svelte-h":!0}),c(v)!=="svelte-1fvrzxo"&&(v.innerHTML=Tn),V=l(n),C=e(n,"P",{"data-svelte-h":!0}),c(C)!=="svelte-1cb0spu"&&(C.textContent=Ln),W=l(n),d=e(n,"OL",{"data-svelte-h":!0}),c(d)!=="svelte-1b28s7s"&&(d.innerHTML=Mn),G=l(n),_=e(n,"P",{"data-svelte-h":!0}),c(_)!=="svelte-1i0pbs8"&&(_.textContent=En),J=l(n),y=e(n,"P",{"data-svelte-h":!0}),c(y)!=="svelte-1dir84v"&&(y.innerHTML=Bn),Q=l(n),r=e(n,"H2",{id:!0,"data-svelte-h":!0}),c(r)!=="svelte-1fm61gu"&&(r.textContent=Dn),X=l(n),g=e(n,"P",{"data-svelte-h":!0}),c(g)!=="svelte-t7rcqc"&&(g.textContent=In),Y=l(n),w=e(n,"PRE",{class:!0});var t=S(w);Z=N(t,!1),t.forEach(s),nn=l(n),P=e(n,"P",{"data-svelte-h":!0}),c(P)!=="svelte-1nufysj"&&(P.textContent=$n),sn=l(n),h=e(n,"PRE",{class:!0});var Wn=S(h);tn=N(Wn,!1),Wn.forEach(s),an=l(n),H=e(n,"P",{"data-svelte-h":!0}),c(H)!=="svelte-b2hwhc"&&(H.innerHTML=qn),pn=l(n),b=e(n,"P",{"data-svelte-h":!0}),c(b)!=="svelte-10fnd2c"&&(b.textContent=Fn),en=l(n),T=e(n,"P",{"data-svelte-h":!0}),c(T)!=="svelte-1a36qsi"&&(T.innerHTML=Rn),on=l(n),L=e(n,"P",{"data-svelte-h":!0}),c(L)!=="svelte-1q9rdd"&&(L.textContent=jn),ln=l(n),M=e(n,"P",{"data-svelte-h":!0}),c(M)!=="svelte-uker51"&&(M.textContent=zn),cn=l(n),E=e(n,"PRE",{class:!0});var Gn=S(E);un=N(Gn,!1),Gn.forEach(s),kn=l(n),f=e(n,"H2",{id:!0,"data-svelte-h":!0}),c(f)!=="svelte-111go3t"&&(f.textContent=Sn),rn=l(n),B=e(n,"P",{"data-svelte-h":!0}),c(B)!=="svelte-o680ih"&&(B.textContent=Nn),fn=l(n),D=e(n,"P",{"data-svelte-h":!0}),c(D)!=="svelte-1ccndug"&&(D.innerHTML=Un),xn=l(n),I=e(n,"P",{"data-svelte-h":!0}),c(I)!=="svelte-8hgd88"&&(I.textContent=An),mn=l(n),$=e(n,"PRE",{class:!0});var Jn=S($);vn=N(Jn,!1),Jn.forEach(s),Cn=l(n),q=e(n,"P",{"data-svelte-h":!0}),c(q)!=="svelte-c1vvr2"&&(q.textContent=Kn),dn=l(n),F=e(n,"PRE",{class:!0});var Qn=S(F);_n=N(Qn,!1),Qn.forEach(s),yn=l(n),R=e(n,"P",{"data-svelte-h":!0}),c(R)!=="svelte-rlz3xx"&&(R.textContent=On),gn=l(n),j=e(n,"P",{"data-svelte-h":!0}),c(j)!=="svelte-1yky120"&&(j.textContent=Vn),this.h()},h(){u(i,"class","toc"),u(k,"id","branch란"),u(r,"id","if"),Z.a=null,u(w,"class","language-dart"),tn.a=null,u(h,"class","language-dart"),un.a=null,u(E,"class","language-dart"),u(f,"id","if-case"),vn.a=null,u($,"class","language-dart"),_n.a=null,u(F,"class","language-dart")},m(n,t){a(n,i,t),a(n,U,t),a(n,k,t),a(n,A,t),a(n,x,t),a(n,K,t),a(n,m,t),a(n,O,t),a(n,v,t),a(n,V,t),a(n,C,t),a(n,W,t),a(n,d,t),a(n,G,t),a(n,_,t),a(n,J,t),a(n,y,t),a(n,Q,t),a(n,r,t),a(n,X,t),a(n,g,t),a(n,Y,t),a(n,w,t),Z.m(Yn,w),a(n,nn,t),a(n,P,t),a(n,sn,t),a(n,h,t),tn.m(Zn,h),a(n,an,t),a(n,H,t),a(n,pn,t),a(n,b,t),a(n,en,t),a(n,T,t),a(n,on,t),a(n,L,t),a(n,ln,t),a(n,M,t),a(n,cn,t),a(n,E,t),un.m(ns,E),a(n,kn,t),a(n,f,t),a(n,rn,t),a(n,B,t),a(n,fn,t),a(n,D,t),a(n,xn,t),a(n,I,t),a(n,mn,t),a(n,$,t),vn.m(ss,$),a(n,Cn,t),a(n,q,t),a(n,dn,t),a(n,F,t),_n.m(ts,F),a(n,yn,t),a(n,R,t),a(n,gn,t),a(n,j,t)},p:wn,i:wn,o:wn,d(n){n&&(s(i),s(U),s(k),s(A),s(x),s(K),s(m),s(O),s(v),s(V),s(C),s(W),s(d),s(G),s(_),s(J),s(y),s(Q),s(r),s(X),s(g),s(Y),s(w),s(nn),s(P),s(sn),s(h),s(an),s(H),s(pn),s(b),s(en),s(T),s(on),s(L),s(ln),s(M),s(cn),s(E),s(kn),s(f),s(rn),s(B),s(fn),s(D),s(xn),s(I),s(mn),s($),s(Cn),s(q),s(dn),s(F),s(yn),s(R),s(gn),s(j))}}}const is={title:"Branches in Dart",author:"jack",description:"Dart에서 Branch(분기)로 코드의 흐름을 제어하는 방법에 대해 알아봅니다.",published:!0,date:"2024. 09. 24.",tags:["Dart"]};class us extends ps{constructor(i){super(),es(this,i,null,os,as,{})}}export{us as default,is as metadata};
