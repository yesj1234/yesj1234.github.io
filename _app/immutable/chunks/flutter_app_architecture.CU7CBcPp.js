import{s as Hn,n as bl}from"./scheduler.Bch89ZIZ.js";import{S as _n,i as yn,e as n,s as o,c as s,g as v,f as p,a as u,l,d as i}from"./index.WsbZAp97.js";function Tn(mn){let r,Il='<ol class="toc-level toc-level-1"><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#separation-of-concerns">Separation of concerns</a></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#layered-architectures-in-flutter-app">Layered Architectures in Flutter App</a><ol class="toc-level toc-level-2"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#mvvm-architecture">MVVM Architecture</a><ol class="toc-level toc-level-3"><li class="toc-item toc-item-h3"><a class="toc-link toc-link-h3" href="#ui-layer">UI Layer</a><ol class="toc-level toc-level-4"><li class="toc-item toc-item-h4"><a class="toc-link toc-link-h4" href="#view">View</a></li><li class="toc-item toc-item-h4"><a class="toc-link toc-link-h4" href="#viewmodel">ViewModel</a></li></ol></li><li class="toc-item toc-item-h3"><a class="toc-link toc-link-h3" href="#datamodel-layer">Data(Model) Layer</a><ol class="toc-level toc-level-4"><li class="toc-item toc-item-h4"><a class="toc-link toc-link-h4" href="#repository">Repository</a></li><li class="toc-item toc-item-h4"><a class="toc-link toc-link-h4" href="#service">Service</a></li></ol></li></ol></li></ol></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#best-practices">Best practices</a><ol class="toc-level toc-level-2"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#separation-of-concerns-1">Separation of concerns</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#handling-data">Handling data</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#app-structure">App structure</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#testing">Testing</a></li></ol></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#sources">Sources</a></li></ol>',Jt,V,Al=`Architecture란 용어는 문맥에 따라 다양한 의미를 지니는 단어이기 때문에 한 문장으로 정의하기 애매한 단어입니다.<br/>
앱을 개발하는 관점에서 Architecture는 유지 보수성, 확장성을 고려하여 앱을 어떻게 구조화/체계화/설계 할지에 대한 방법이라고 생각 할 수 있습니다.
이러한 아키텍처를 고민하고 앱을 개발하면 여러가지 이점을 얻을 수 있습니다.`,Kt,k,ql="좋은 아키텍처는…",Qt,h,jl="<li><strong>유지 보수성(Maintainability)</strong> : 앱의 새로운 기능을 추가하거나 업데이트 혹은 수정에 유연하게 대응할 수 있습니다.</li> <li><strong>확장성(Scalability)</strong> : 많은 개발자들이 동시에 개발에 참여할 수 있습니다.</li> <li><strong>쉬운 테스트 코드 작성(Testability)</strong> : 간단한 class와 잘 정의된 인터페이스는 좋은 테스트를 할 수 있게 도와줍니다.</li> <li><strong>새로운 개발자의 낮은 학습 곡선(Lower cognitive load)</strong> : 높은 가독성을 확보 할 수 있고, 앱의 아키텍처를 아는 개발자들은 많은 노력 없이도 프로젝트 개발에 참여할 수 있습니다.</li> <li><strong>더 나은 유저 경험(Better user experience)</strong> : 새로운 기능 개발이 빨라지고 버그가 줄어듭니다.</li>",Xt,S,zl="아키텍처를 선정할 때 가장 중요하게 고려할 것은 <strong>관심사의 분리</strong>(Separation of concerns)입니다.",Yt,x,Fl="Separation of concerns",Zt,R,Ol='<strong>관심사의 분리</strong>(<a href="https://en.wikipedia.org/wiki/Separation_of_concerns" rel="nofollow">Separation of concerns</a>)는 프로그램을 여러 개의 구별되는 영역으로 분리하는 디자인 원칙입니다.',$t,U,El="<strong>관심사</strong>(Concern)란 프로그램에 영향을 주는 정보의 집합체입니다.",gt,D,Bl="이러한 관심사의 분리는 각 영역이 담당하는 관심사를 다른 영역으로부터 숨기고(Encapsulating) 잘 정의된 인터페이스를 통해 다른 영역과 소통함으로써 이루어집니다.",te,b,Nl=`웹이나 앱에서 많이 사용하는 레이어드(Layered) 아키텍처는 이러한 관심사의 분리 디자인 원칙의 구현입니다.
레이어드(Layered), 즉 층이 나눠져 있다는 것은 각 레이어가 인접한 레이어와만 소통할 수 있다는 의미가 담겨져 있습니다.`,ee,I,Wl="이번 글에선 이런 레이어드 아키텍처 중 <strong>MVVM</strong> 아키텍처에 대해서 알아보도록 하겠습니다.",le,C,Gl="Layered Architectures in Flutter App",ie,A,Jl='이 글은 <a href="https://docs.flutter.dev/app-architecture" rel="nofollow">플러터팀이 작성한 App architecture</a> 을 읽고 정리한 내용입니다. 참고 부탁드립니다.',ne,q,Kl="<strong>용어 정의하기</strong>",se,j,Ql="레이어드 아키텍처는 관심사 분리 원칙의 구현이라는 것을 알았습니다.",oe,z,Xl="하지만 앱의 영역을 어떻게 분리할 지에 대한 부분은 각 아키텍처에 과제로 남아 있습니다.",pe,F,Yl="그러다 보니 각 아키텍처 마다 각 영역이 담당하는 관심사가 조금씩 달라 지고 자연스럽게 용어의 의미도 다르게 사용되곤 합니다.",ve,O,Zl="따라서 아키텍처를 선택할 때는 아키텍처에서 사용 되는 용어를 정확히 숙지할 필요가 있습니다.",ue,E,$l="<strong>공통되는 레이어</strong>",re,B,gl=`각 아키텍처마다 관심사를 분리하는 기준이 달라진다고 해도 공통되는 큰 틀은 어느정도 정해져있습니다.
일반적으로 앱의 복잡도에 따라 레이어를 크게 2~3개로 나눌 수 있습니다.`,xe,N,ti="<li><strong>UI layer</strong> : 유저에게 데이터를 어떻게 보여줄지와 유저와의 상호작용을 담당하는 레이어입니다. Presentation layer라고도 합니다.</li> <li><strong>Logic layer</strong> : 데이터에 관련된 비즈니스 로직을 담당합니다.</li> <li><strong>Data layer</strong> : 외부 데이터베이스나 플랫폼 플러그인과의 소통을 담당합니다.</li>",Ce,W,ei="<strong>일관된 데이터 관리와 단방향 데이터 흐름</strong>",fe,G,li="앱에서 사용 되는 모든 데이터 타입은 일관된 데이터를 가져야합니다. 이는 데이터를 단 한 곳에서만 관리, 제공해야 함을 의미합니다.",ae,J,ii="일반적으로 Data layer에 있는 Repository가 데이터를 관리, 제공합니다.",Me,K,ni='<img src="/unidirectional_data_flow.png" alt="Unidirectional_data_flow"/>',Le,Q,si=`유저의 상호작용으로 인한 데이터의 변경도 마찬가지로 최종적인 데이터를 변경하는 곳은 Data layer이어야 합니다.<br/>
유저의 상호작용으로 인한 데이터의 변경은 다음과 같은 단방향 데이터 흐름을 갖습니다.`,me,X,oi="<li><strong>[UI Layer]</strong> : 클릭과 같은 유저 상호작용이 일어나면 그 클릭에 걸려있는 콜백이 실행됩니다. 해당 콜백은 Logic layer가 인터페이스로 UI layer에 제공하는 메서드입니다.</li> <li><strong>[Logic Layer]</strong> : 해당 콜백은 Data layer가 Logic layer에 인터페이스로 제공하는 메서드입니다. 해당 메서드를 실행시키기 전에 필요한 비즈니스 로직이 있다면 Logic layer에서 이를 담당합니다. 최종적인 데이터의 변경은 Data layer의 메서드가 담당합니다.</li> <li><strong>[Data Layer]</strong> : Logic layer에 인터페이스로 제공한 메서드가 실행됩니다. 실행된 메서드의 리턴값을 Logic layer로 전달합니다. 이는 곧 데이터의 업데이트를 의미하기도 합니다.</li> <li><strong>[Logic Layer]</strong> : Data layer로 리턴값을 받고 State를 업데이트합니다. 업데이트 된 리턴값을 UI에 전달합니다.</li> <li><strong>[UI Layer]</strong> : Logic layer로 부터 리턴값을 받고 업데이트 된 state를 이용해 UI를 업데이트합니다.</li>",He,Y,pi="<strong>Flutter에서 UI는 (불변)상태에 대한 함수다</strong>",_e,Z,vi="Flutter는 선언적(declarative)이기 때문에 Flutter에서의 UI는 현재 상태를 반영한 결과값입니다.",ye,$,ui=`항상 염두에 두어야 할 점은 데이터가 UI를 결정해야 한다는 점입니다. UI관점에서 데이터는 불변 값 이어야하며
최대한 데이터와 관련된 비즈니스 로직을 포함하지 않아야 합니다.`,Te,g,ri="이런 특징은 앱이 종료 되었을 때 데이터의 유실을 최소화 할 수 있고 테스트에 유용하며 버그가 발생할 가능성을 낮춰줍니다.",ce,f,xi="MVVM Architecture",de,tt,Ci=`MVVM(Model, View, ViewModel) 아키텍처에서 사용하는 용어에 대한 정의를 먼저 하고 가도록 합시다.
MVVM아키텍처는 크게 <strong>UI layer</strong>와 <strong>Data(model) layer</strong>로 나눌 수 있습니다.`,we,et,fi='<img src="/MVVM.png" alt="MVVM"/>',Pe,lt,ai="<li><strong>UI Layer</strong><ul><li>View : 유저에게 데이터를 어떻게 보여줄지에 대한 화면을 정의합니다. 일반적으로는 Scaffold위젯을 갖는 하나의 페이지라고 생각할 수 있으며 ViewModel에 유저 인터랙션으로 인해 발생하는 이벤트를 전달합니다.</li> <li>ViewModel : Repository가 전달하는 데이터를 View가 UI를 그리는데 필요한 state로 가공하는 역할을 합니다. 여러 Repository로 부터 정보를 받아 합쳐서 전달하거나 적절한 type으로 변환하는 등의 로직을 수행합니다.</li></ul></li> <li><strong>Data(Model) Layer</strong><ul><li>Repository : 유일한 데이터의 원천(Single Source of Truth)역할을 합니다. Serivce로 부터 데이터를 받아오고 Domain model로 변환한 후 ViewModel로 전달합니다.</li> <li>Service : 데이터베이스, REST endpoint, local file 등의 앱 외부와 소통하는 게이트웨이입니다. Repository에 Future나 Stream과 같은 형식으로 데이터를 제공하며 데이터 로딩에 관한 역할만 수행합니다.</li></ul></li> <li><strong>Domain model</strong> : 앱에서 필요한 데이터의 모양을 결정합니다. Repository에서 원본 데이터를 Domain model로 변환하고 ViewModel에서 Domain model을 가지고 비즈니스 로직을 수행합니다.</li>",Ve,ke,he,a,Mi="UI Layer",Se,it,Li="UI layer는 유저에게 데이터를 보여주고 버튼 클릭과 같은 유저의 행동 혹은 입력폼 제출과 같은 이벤트를 담당합니다.",Re,nt,mi="MVVM 아키텍처에서는 UI layer를 다시 View, ViewModel로 나눕니다.",Ue,st,Hi="View와 ViewModel은 1대1 관계를 갖습니다.",De,M,_i="View",be,ot,yi="유저에게 데이터를 어떻게 보여줄지 정합니다. Flutter는 앱을 Widget들의 조합으로 하나의 페이지를 구성합니다. 예를 들어 하나의 View는 Scaffold 위젯을 포함하는 페이지가 될 수 있습니다. 유저의 입력이나 클릭과 같은 상호작용으로 발생하는 이벤트를 ViewModel로 전달합니다.",Ie,pt,Ti=`View는 데이터와 관련된 비즈니스 로직을 포함해서는 안됩니다.
데이터와 관련된 모든 비즈니스 로직은 ViewModel에서 수행되어야 하며 결과값만을 받아 사용해야 합니다.`,Ae,vt,ci="View에서 처리할 수 있는 비즈니스 로직은 다음과 같이 한정됩니다.",qe,ut,di="<li>화면에 표시할 위젯을 정할 간단한 분기처리 로직(if statement와 같은)</li> <li>애니메이션에 필요한 로직</li> <li>서로 다른 디바이스를 위한 반응형 로직</li> <li>페이지 라우팅 로직</li>",je,L,wi="ViewModel",ze,rt,Pi=`View가 필요로 하는 데이터를 제공하는 역할을 합니다.
Repository로부터 받은 app data들을 1대1로 대응하는 View가 필요로 하는 데이터 형태로 가공하여 전달합니다.`,Fe,xt,Vi="ViewModel의 주된 관심사는 다음과 같습니다.",Oe,Ct,ki="<li>Repository로 부터 데이터를 전달받아 1대1로 대응되는 View에 필요한 데이터 형태로 가공하기. 예를 들어, 여러 repository로 부터 데이터를 받아 하나로 묶거나, 받은 데이터를 특정 조건에 맞게 필터링하는 로직을 수행합니다.</li> <li>View가 화면을 그리는데 필요한 상태(State)를 관리합니다. 예를 들어, 화면에 특정 위젯을 보여줄지에 대한 boolean flag, 캐러셀의 어느 부분을 표시할 지에 대한 상태값 등이 이에 포함됩니다.</li> <li>View의 이벤트 핸들러가 사용할 콜백(command)을 제공해야합니다. Dart에서는 이 command를 ViewModel 클래스의 멤버로 정의하여 사용하며 메서드로 View에 제공됩니다.</li>",Ee,Be,Ne,m,hi="Data(Model) Layer",We,ft,Si="MVVM 아키텍처는 Data(Model) layer를 Repository , Service 로 나눕니다.",Ge,H,Ri="Repository",Je,at,Ui=`Repository는 유일한 데이터의 원천(Single Source of Truth)역할을 합니다.
Serivce로 부터 데이터를 받아오고 Domain model로 변환한 후 ViewModel로 전달합니다.`,Ke,Mt,Di="Repository는 Service에 다음과 같은 관련된 비즈니스 로직을 수행합니다.",Qe,Lt,bi="<li><strong>캐싱</strong></li> <li><strong>에러 핸들링</strong></li> <li><strong>재요청</strong></li> <li><strong>새로고침</strong></li> <li>데이터를 주기적으로 확인하기위한 <strong>Polling</strong></li>",Xe,mt,Ii="Repository는 ViewModel에 데이터를 전달할 때 DomainModel에 정의된 형태로 가공하여 데이터를 전달하여야 합니다.",Ye,Ht,Ai="소셜 미디어 앱을 예로 들어보면 유저 프로필 데이터를 관리하기 위한 UserProfileRepository가 있을 수 있습니다.",Ze,_t,qi="유저의 로그인 상태에 따라 UserProfileRepository는 <code>Stream&lt;UserProfile?&gt;</code>을 제공할 것이고 이때 UserProfile이 Domain model이며 ViewModel에서 사용되는 데이터의 형태입니다.",$e,yt,ji="이런 <strong>Domain model과 Repository가 1대1로</strong> 대응되어 관리되어야 합니다.",ge,Tt,zi=`<strong>Repository와 ViewModel은 다대다</strong> 관계를 갖습니다.
하나의 ViewModel은 여러 Repository로 부터 데이터를 받아와 사용할 수 있고 마찬가지로 하나의 Repository는 여러 ViewModel로 부터 호출될 수 있습니다.`,tl,ct,Fi="Repository끼리는 서로 영향을 주어선 안됩니다. 만약 서로 다른 Repository로 부터 데이터를 받아와 비즈니스 로직을 수행해야 한다면 이 과정은 반드시 ViewModel 혹은 Domain layer에서 수행되어야 합니다.",el,_,Oi="Service",ll,dt,Ei="Services는 데이터베이스, REST endpoint, local file 등의 앱 외부와 소통하는 게이트웨이 역할입니다.",il,wt,Bi="Repository에 Future나 Stream과 같은 형식으로 데이터를 제공하며 데이터 로딩에 관한 역할만 수행하며 상태에 관한 정보를 가져서는 안됩니다.",nl,Pt,Ni="<strong>Service와 외부 Data source는 1대1</strong> 관계를 갖습니다.",sl,Vt,Wi="외부 Data source는 다음과 같은것들을 의미합니다.",ol,kt,Gi="<li><strong>iOS나 Android API와 같은 플랫폼</strong></li> <li><strong>REST endpoints</strong></li> <li><strong>로컬 파일</strong></li>",pl,ht,Ji="<strong>Service 와 Repository는 다대다 관계</strong>를 갖습니다. 하나의 Service는 여러 Repository에서 사용될 수 있으며 하나의 Repository는 여러 Service로 부터 데이터를 받아와 사용할 수 있습니다.",vl,ul,rl,y,Ki="Best practices",xl,T,Qi="Separation of concerns",Cl,St,Xi="<strong>Strongly recommended</strong>",fl,Rt,Yi="<li>UI Layer &amp; Data Layer의 명확한 분리</li> <li>Data Layer에서 Repository pattern 사용</li> <li>UI Layer에서 View 와 ViewModel 사용</li> <li>widget 안에 비즈니스 로직 포함시키지 않기</li>",al,Ut,Zi="<strong>Conditional</strong>",Ml,Dt,$i="<li>widget에 업데이트가 필요할 경우엔 ChangeNotifier 혹은 Listenable 사용</li> <li>Domain Layer 사용</li>",Ll,c,gi="Handling data",ml,bt,tn="<strong>Strongly recommended</strong>",Hl,It,en="<li>단방향 데이터 흐름을 통해 데이터 관리</li> <li>data model은 불변 타입으로 사용</li>",_l,At,ln="<strong>Recommended</strong>",yl,qt,nn="<li>Command pattern을 사용해 유저와의 상호작용으로 발생하는 이벤트 관리</li> <li>freezed 같은 코드 제너레이터를 사용해 data model 관리</li>",Tl,jt,sn="<strong>Conditional</strong>",cl,zt,on="<li>API 모델과 domain 모델 분리하여 만들기</li>",dl,d,pn="App structure",wl,Ft,vn="<strong>Strongly recommended</strong>",Pl,Ot,un="<li>의존성 주입 패턴 사용</li> <li>Abstract repository 사용</li>",Vl,Et,rn="<strong>Recommended</strong>",kl,Bt,xn="<li>go_router를 사용</li> <li>파일, 디렉토리, 클래스 이름 지을 때 표준화된 규칙 사용하기</li>",hl,w,Cn="Testing",Sl,Nt,fn="<strong>Strongly recommended</strong>",Rl,Wt,an="<li>Test architectural components separately and together</li> <li>Make fakes for testing (and write code that takes advantages of fakes.)</li>",Ul,P,Mn="Sources",Dl,Gt,Ln='<li><a href="https://docs.flutter.dev/app-architecture" rel="nofollow">https://docs.flutter.dev/app-architecture</a></li>';return{c(){r=n("nav"),r.innerHTML=Il,Jt=o(),V=n("p"),V.innerHTML=Al,Kt=o(),k=n("p"),k.textContent=ql,Qt=o(),h=n("ul"),h.innerHTML=jl,Xt=o(),S=n("p"),S.innerHTML=zl,Yt=o(),x=n("h1"),x.textContent=Fl,Zt=o(),R=n("p"),R.innerHTML=Ol,$t=o(),U=n("p"),U.innerHTML=El,gt=o(),D=n("p"),D.textContent=Bl,te=o(),b=n("p"),b.textContent=Nl,ee=o(),I=n("p"),I.innerHTML=Wl,le=o(),C=n("h1"),C.textContent=Gl,ie=o(),A=n("p"),A.innerHTML=Jl,ne=o(),q=n("p"),q.innerHTML=Kl,se=o(),j=n("p"),j.textContent=Ql,oe=o(),z=n("p"),z.textContent=Xl,pe=o(),F=n("p"),F.textContent=Yl,ve=o(),O=n("p"),O.textContent=Zl,ue=o(),E=n("p"),E.innerHTML=$l,re=o(),B=n("p"),B.textContent=gl,xe=o(),N=n("ul"),N.innerHTML=ti,Ce=o(),W=n("p"),W.innerHTML=ei,fe=o(),G=n("p"),G.textContent=li,ae=o(),J=n("p"),J.textContent=ii,Me=o(),K=n("p"),K.innerHTML=ni,Le=o(),Q=n("p"),Q.innerHTML=si,me=o(),X=n("ol"),X.innerHTML=oi,He=o(),Y=n("p"),Y.innerHTML=pi,_e=o(),Z=n("p"),Z.textContent=vi,ye=o(),$=n("p"),$.textContent=ui,Te=o(),g=n("p"),g.textContent=ri,ce=o(),f=n("h2"),f.textContent=xi,de=o(),tt=n("p"),tt.innerHTML=Ci,we=o(),et=n("p"),et.innerHTML=fi,Pe=o(),lt=n("ul"),lt.innerHTML=ai,Ve=o(),ke=n("hr"),he=o(),a=n("h3"),a.textContent=Mi,Se=o(),it=n("p"),it.textContent=Li,Re=o(),nt=n("p"),nt.textContent=mi,Ue=o(),st=n("p"),st.textContent=Hi,De=o(),M=n("h4"),M.textContent=_i,be=o(),ot=n("p"),ot.textContent=yi,Ie=o(),pt=n("p"),pt.textContent=Ti,Ae=o(),vt=n("p"),vt.textContent=ci,qe=o(),ut=n("ul"),ut.innerHTML=di,je=o(),L=n("h4"),L.textContent=wi,ze=o(),rt=n("p"),rt.textContent=Pi,Fe=o(),xt=n("p"),xt.textContent=Vi,Oe=o(),Ct=n("ul"),Ct.innerHTML=ki,Ee=o(),Be=n("hr"),Ne=o(),m=n("h3"),m.textContent=hi,We=o(),ft=n("p"),ft.textContent=Si,Ge=o(),H=n("h4"),H.textContent=Ri,Je=o(),at=n("p"),at.textContent=Ui,Ke=o(),Mt=n("p"),Mt.textContent=Di,Qe=o(),Lt=n("ul"),Lt.innerHTML=bi,Xe=o(),mt=n("p"),mt.textContent=Ii,Ye=o(),Ht=n("p"),Ht.textContent=Ai,Ze=o(),_t=n("p"),_t.innerHTML=qi,$e=o(),yt=n("p"),yt.innerHTML=ji,ge=o(),Tt=n("p"),Tt.innerHTML=zi,tl=o(),ct=n("p"),ct.textContent=Fi,el=o(),_=n("h4"),_.textContent=Oi,ll=o(),dt=n("p"),dt.textContent=Ei,il=o(),wt=n("p"),wt.textContent=Bi,nl=o(),Pt=n("p"),Pt.innerHTML=Ni,sl=o(),Vt=n("p"),Vt.textContent=Wi,ol=o(),kt=n("ul"),kt.innerHTML=Gi,pl=o(),ht=n("p"),ht.innerHTML=Ji,vl=o(),ul=n("hr"),rl=o(),y=n("h1"),y.textContent=Ki,xl=o(),T=n("h2"),T.textContent=Qi,Cl=o(),St=n("p"),St.innerHTML=Xi,fl=o(),Rt=n("ol"),Rt.innerHTML=Yi,al=o(),Ut=n("p"),Ut.innerHTML=Zi,Ml=o(),Dt=n("ol"),Dt.innerHTML=$i,Ll=o(),c=n("h2"),c.textContent=gi,ml=o(),bt=n("p"),bt.innerHTML=tn,Hl=o(),It=n("ol"),It.innerHTML=en,_l=o(),At=n("p"),At.innerHTML=ln,yl=o(),qt=n("ol"),qt.innerHTML=nn,Tl=o(),jt=n("p"),jt.innerHTML=sn,cl=o(),zt=n("ol"),zt.innerHTML=on,dl=o(),d=n("h2"),d.textContent=pn,wl=o(),Ft=n("p"),Ft.innerHTML=vn,Pl=o(),Ot=n("ol"),Ot.innerHTML=un,Vl=o(),Et=n("p"),Et.innerHTML=rn,kl=o(),Bt=n("ol"),Bt.innerHTML=xn,hl=o(),w=n("h2"),w.textContent=Cn,Sl=o(),Nt=n("p"),Nt.innerHTML=fn,Rl=o(),Wt=n("ol"),Wt.innerHTML=an,Ul=o(),P=n("h1"),P.textContent=Mn,Dl=o(),Gt=n("ul"),Gt.innerHTML=Ln,this.h()},l(t){r=s(t,"NAV",{class:!0,"data-svelte-h":!0}),v(r)!=="svelte-ywqxgp"&&(r.innerHTML=Il),Jt=p(t),V=s(t,"P",{"data-svelte-h":!0}),v(V)!=="svelte-1eusmwg"&&(V.innerHTML=Al),Kt=p(t),k=s(t,"P",{"data-svelte-h":!0}),v(k)!=="svelte-zk26ri"&&(k.textContent=ql),Qt=p(t),h=s(t,"UL",{"data-svelte-h":!0}),v(h)!=="svelte-1di92tr"&&(h.innerHTML=jl),Xt=p(t),S=s(t,"P",{"data-svelte-h":!0}),v(S)!=="svelte-1bmggdm"&&(S.innerHTML=zl),Yt=p(t),x=s(t,"H1",{id:!0,"data-svelte-h":!0}),v(x)!=="svelte-1yohh3a"&&(x.textContent=Fl),Zt=p(t),R=s(t,"P",{"data-svelte-h":!0}),v(R)!=="svelte-tpbvui"&&(R.innerHTML=Ol),$t=p(t),U=s(t,"P",{"data-svelte-h":!0}),v(U)!=="svelte-180yg1a"&&(U.innerHTML=El),gt=p(t),D=s(t,"P",{"data-svelte-h":!0}),v(D)!=="svelte-1nx708n"&&(D.textContent=Bl),te=p(t),b=s(t,"P",{"data-svelte-h":!0}),v(b)!=="svelte-1gztqdn"&&(b.textContent=Nl),ee=p(t),I=s(t,"P",{"data-svelte-h":!0}),v(I)!=="svelte-15uolt0"&&(I.innerHTML=Wl),le=p(t),C=s(t,"H1",{id:!0,"data-svelte-h":!0}),v(C)!=="svelte-1aomaom"&&(C.textContent=Gl),ie=p(t),A=s(t,"P",{"data-svelte-h":!0}),v(A)!=="svelte-9y79nu"&&(A.innerHTML=Jl),ne=p(t),q=s(t,"P",{"data-svelte-h":!0}),v(q)!=="svelte-ppep6n"&&(q.innerHTML=Kl),se=p(t),j=s(t,"P",{"data-svelte-h":!0}),v(j)!=="svelte-fh5nyu"&&(j.textContent=Ql),oe=p(t),z=s(t,"P",{"data-svelte-h":!0}),v(z)!=="svelte-1lhfegz"&&(z.textContent=Xl),pe=p(t),F=s(t,"P",{"data-svelte-h":!0}),v(F)!=="svelte-175zdjl"&&(F.textContent=Yl),ve=p(t),O=s(t,"P",{"data-svelte-h":!0}),v(O)!=="svelte-e4af9b"&&(O.textContent=Zl),ue=p(t),E=s(t,"P",{"data-svelte-h":!0}),v(E)!=="svelte-1niughr"&&(E.innerHTML=$l),re=p(t),B=s(t,"P",{"data-svelte-h":!0}),v(B)!=="svelte-awcsi3"&&(B.textContent=gl),xe=p(t),N=s(t,"UL",{"data-svelte-h":!0}),v(N)!=="svelte-a948f4"&&(N.innerHTML=ti),Ce=p(t),W=s(t,"P",{"data-svelte-h":!0}),v(W)!=="svelte-sef003"&&(W.innerHTML=ei),fe=p(t),G=s(t,"P",{"data-svelte-h":!0}),v(G)!=="svelte-yuny0j"&&(G.textContent=li),ae=p(t),J=s(t,"P",{"data-svelte-h":!0}),v(J)!=="svelte-odbm14"&&(J.textContent=ii),Me=p(t),K=s(t,"P",{"data-svelte-h":!0}),v(K)!=="svelte-1raucqc"&&(K.innerHTML=ni),Le=p(t),Q=s(t,"P",{"data-svelte-h":!0}),v(Q)!=="svelte-3fq6g"&&(Q.innerHTML=si),me=p(t),X=s(t,"OL",{"data-svelte-h":!0}),v(X)!=="svelte-139rto8"&&(X.innerHTML=oi),He=p(t),Y=s(t,"P",{"data-svelte-h":!0}),v(Y)!=="svelte-1f0jamv"&&(Y.innerHTML=pi),_e=p(t),Z=s(t,"P",{"data-svelte-h":!0}),v(Z)!=="svelte-3ilkq3"&&(Z.textContent=vi),ye=p(t),$=s(t,"P",{"data-svelte-h":!0}),v($)!=="svelte-1biyj6i"&&($.textContent=ui),Te=p(t),g=s(t,"P",{"data-svelte-h":!0}),v(g)!=="svelte-1w92vdb"&&(g.textContent=ri),ce=p(t),f=s(t,"H2",{id:!0,"data-svelte-h":!0}),v(f)!=="svelte-eb6d5d"&&(f.textContent=xi),de=p(t),tt=s(t,"P",{"data-svelte-h":!0}),v(tt)!=="svelte-gl7kbr"&&(tt.innerHTML=Ci),we=p(t),et=s(t,"P",{"data-svelte-h":!0}),v(et)!=="svelte-w4p7qw"&&(et.innerHTML=fi),Pe=p(t),lt=s(t,"UL",{"data-svelte-h":!0}),v(lt)!=="svelte-1k109u6"&&(lt.innerHTML=ai),Ve=p(t),ke=s(t,"HR",{}),he=p(t),a=s(t,"H3",{id:!0,"data-svelte-h":!0}),v(a)!=="svelte-15kk0u9"&&(a.textContent=Mi),Se=p(t),it=s(t,"P",{"data-svelte-h":!0}),v(it)!=="svelte-15v93c1"&&(it.textContent=Li),Re=p(t),nt=s(t,"P",{"data-svelte-h":!0}),v(nt)!=="svelte-1gnsodk"&&(nt.textContent=mi),Ue=p(t),st=s(t,"P",{"data-svelte-h":!0}),v(st)!=="svelte-q89ipa"&&(st.textContent=Hi),De=p(t),M=s(t,"H4",{id:!0,"data-svelte-h":!0}),v(M)!=="svelte-1mfif8y"&&(M.textContent=_i),be=p(t),ot=s(t,"P",{"data-svelte-h":!0}),v(ot)!=="svelte-1bc8uud"&&(ot.textContent=yi),Ie=p(t),pt=s(t,"P",{"data-svelte-h":!0}),v(pt)!=="svelte-2f5pj0"&&(pt.textContent=Ti),Ae=p(t),vt=s(t,"P",{"data-svelte-h":!0}),v(vt)!=="svelte-14d95i5"&&(vt.textContent=ci),qe=p(t),ut=s(t,"UL",{"data-svelte-h":!0}),v(ut)!=="svelte-91zhor"&&(ut.innerHTML=di),je=p(t),L=s(t,"H4",{id:!0,"data-svelte-h":!0}),v(L)!=="svelte-k2mdda"&&(L.textContent=wi),ze=p(t),rt=s(t,"P",{"data-svelte-h":!0}),v(rt)!=="svelte-1q5kq01"&&(rt.textContent=Pi),Fe=p(t),xt=s(t,"P",{"data-svelte-h":!0}),v(xt)!=="svelte-zzqkii"&&(xt.textContent=Vi),Oe=p(t),Ct=s(t,"UL",{"data-svelte-h":!0}),v(Ct)!=="svelte-lwep7f"&&(Ct.innerHTML=ki),Ee=p(t),Be=s(t,"HR",{}),Ne=p(t),m=s(t,"H3",{id:!0,"data-svelte-h":!0}),v(m)!=="svelte-ww5d12"&&(m.textContent=hi),We=p(t),ft=s(t,"P",{"data-svelte-h":!0}),v(ft)!=="svelte-blvicc"&&(ft.textContent=Si),Ge=p(t),H=s(t,"H4",{id:!0,"data-svelte-h":!0}),v(H)!=="svelte-rjlvm2"&&(H.textContent=Ri),Je=p(t),at=s(t,"P",{"data-svelte-h":!0}),v(at)!=="svelte-126p2pa"&&(at.textContent=Ui),Ke=p(t),Mt=s(t,"P",{"data-svelte-h":!0}),v(Mt)!=="svelte-ynejht"&&(Mt.textContent=Di),Qe=p(t),Lt=s(t,"UL",{"data-svelte-h":!0}),v(Lt)!=="svelte-c231og"&&(Lt.innerHTML=bi),Xe=p(t),mt=s(t,"P",{"data-svelte-h":!0}),v(mt)!=="svelte-6pwgaf"&&(mt.textContent=Ii),Ye=p(t),Ht=s(t,"P",{"data-svelte-h":!0}),v(Ht)!=="svelte-1ssi0de"&&(Ht.textContent=Ai),Ze=p(t),_t=s(t,"P",{"data-svelte-h":!0}),v(_t)!=="svelte-1wav8we"&&(_t.innerHTML=qi),$e=p(t),yt=s(t,"P",{"data-svelte-h":!0}),v(yt)!=="svelte-1s2o27k"&&(yt.innerHTML=ji),ge=p(t),Tt=s(t,"P",{"data-svelte-h":!0}),v(Tt)!=="svelte-18pq45f"&&(Tt.innerHTML=zi),tl=p(t),ct=s(t,"P",{"data-svelte-h":!0}),v(ct)!=="svelte-pnd3u4"&&(ct.textContent=Fi),el=p(t),_=s(t,"H4",{id:!0,"data-svelte-h":!0}),v(_)!=="svelte-uzfxtk"&&(_.textContent=Oi),ll=p(t),dt=s(t,"P",{"data-svelte-h":!0}),v(dt)!=="svelte-vowklj"&&(dt.textContent=Ei),il=p(t),wt=s(t,"P",{"data-svelte-h":!0}),v(wt)!=="svelte-igy28h"&&(wt.textContent=Bi),nl=p(t),Pt=s(t,"P",{"data-svelte-h":!0}),v(Pt)!=="svelte-1lhs5g6"&&(Pt.innerHTML=Ni),sl=p(t),Vt=s(t,"P",{"data-svelte-h":!0}),v(Vt)!=="svelte-qhd11g"&&(Vt.textContent=Wi),ol=p(t),kt=s(t,"UL",{"data-svelte-h":!0}),v(kt)!=="svelte-7oxca4"&&(kt.innerHTML=Gi),pl=p(t),ht=s(t,"P",{"data-svelte-h":!0}),v(ht)!=="svelte-1qeerrz"&&(ht.innerHTML=Ji),vl=p(t),ul=s(t,"HR",{}),rl=p(t),y=s(t,"H1",{id:!0,"data-svelte-h":!0}),v(y)!=="svelte-1x1lml5"&&(y.textContent=Ki),xl=p(t),T=s(t,"H2",{id:!0,"data-svelte-h":!0}),v(T)!=="svelte-381k9a"&&(T.textContent=Qi),Cl=p(t),St=s(t,"P",{"data-svelte-h":!0}),v(St)!=="svelte-171gdjw"&&(St.innerHTML=Xi),fl=p(t),Rt=s(t,"OL",{"data-svelte-h":!0}),v(Rt)!=="svelte-asd56e"&&(Rt.innerHTML=Yi),al=p(t),Ut=s(t,"P",{"data-svelte-h":!0}),v(Ut)!=="svelte-1muxh7d"&&(Ut.innerHTML=Zi),Ml=p(t),Dt=s(t,"OL",{"data-svelte-h":!0}),v(Dt)!=="svelte-1c2hxdn"&&(Dt.innerHTML=$i),Ll=p(t),c=s(t,"H2",{id:!0,"data-svelte-h":!0}),v(c)!=="svelte-1bu6ot"&&(c.textContent=gi),ml=p(t),bt=s(t,"P",{"data-svelte-h":!0}),v(bt)!=="svelte-171gdjw"&&(bt.innerHTML=tn),Hl=p(t),It=s(t,"OL",{"data-svelte-h":!0}),v(It)!=="svelte-yo2zs2"&&(It.innerHTML=en),_l=p(t),At=s(t,"P",{"data-svelte-h":!0}),v(At)!=="svelte-1kxmhh6"&&(At.innerHTML=ln),yl=p(t),qt=s(t,"OL",{"data-svelte-h":!0}),v(qt)!=="svelte-14jhq3q"&&(qt.innerHTML=nn),Tl=p(t),jt=s(t,"P",{"data-svelte-h":!0}),v(jt)!=="svelte-1muxh7d"&&(jt.innerHTML=sn),cl=p(t),zt=s(t,"OL",{"data-svelte-h":!0}),v(zt)!=="svelte-1hu0kin"&&(zt.innerHTML=on),dl=p(t),d=s(t,"H2",{id:!0,"data-svelte-h":!0}),v(d)!=="svelte-cncpcp"&&(d.textContent=pn),wl=p(t),Ft=s(t,"P",{"data-svelte-h":!0}),v(Ft)!=="svelte-171gdjw"&&(Ft.innerHTML=vn),Pl=p(t),Ot=s(t,"OL",{"data-svelte-h":!0}),v(Ot)!=="svelte-1uymljc"&&(Ot.innerHTML=un),Vl=p(t),Et=s(t,"P",{"data-svelte-h":!0}),v(Et)!=="svelte-1kxmhh6"&&(Et.innerHTML=rn),kl=p(t),Bt=s(t,"OL",{"data-svelte-h":!0}),v(Bt)!=="svelte-1lmb718"&&(Bt.innerHTML=xn),hl=p(t),w=s(t,"H2",{id:!0,"data-svelte-h":!0}),v(w)!=="svelte-1eblalq"&&(w.textContent=Cn),Sl=p(t),Nt=s(t,"P",{"data-svelte-h":!0}),v(Nt)!=="svelte-171gdjw"&&(Nt.innerHTML=fn),Rl=p(t),Wt=s(t,"OL",{"data-svelte-h":!0}),v(Wt)!=="svelte-l57inl"&&(Wt.innerHTML=an),Ul=p(t),P=s(t,"H1",{id:!0,"data-svelte-h":!0}),v(P)!=="svelte-22jvrw"&&(P.textContent=Mn),Dl=p(t),Gt=s(t,"UL",{"data-svelte-h":!0}),v(Gt)!=="svelte-1pokob4"&&(Gt.innerHTML=Ln),this.h()},h(){u(r,"class","toc"),u(x,"id","separation-of-concerns"),u(C,"id","layered-architectures-in-flutter-app"),u(f,"id","mvvm-architecture"),u(a,"id","ui-layer"),u(M,"id","view"),u(L,"id","viewmodel"),u(m,"id","datamodel-layer"),u(H,"id","repository"),u(_,"id","service"),u(y,"id","best-practices"),u(T,"id","separation-of-concerns-1"),u(c,"id","handling-data"),u(d,"id","app-structure"),u(w,"id","testing"),u(P,"id","sources")},m(t,e){l(t,r,e),l(t,Jt,e),l(t,V,e),l(t,Kt,e),l(t,k,e),l(t,Qt,e),l(t,h,e),l(t,Xt,e),l(t,S,e),l(t,Yt,e),l(t,x,e),l(t,Zt,e),l(t,R,e),l(t,$t,e),l(t,U,e),l(t,gt,e),l(t,D,e),l(t,te,e),l(t,b,e),l(t,ee,e),l(t,I,e),l(t,le,e),l(t,C,e),l(t,ie,e),l(t,A,e),l(t,ne,e),l(t,q,e),l(t,se,e),l(t,j,e),l(t,oe,e),l(t,z,e),l(t,pe,e),l(t,F,e),l(t,ve,e),l(t,O,e),l(t,ue,e),l(t,E,e),l(t,re,e),l(t,B,e),l(t,xe,e),l(t,N,e),l(t,Ce,e),l(t,W,e),l(t,fe,e),l(t,G,e),l(t,ae,e),l(t,J,e),l(t,Me,e),l(t,K,e),l(t,Le,e),l(t,Q,e),l(t,me,e),l(t,X,e),l(t,He,e),l(t,Y,e),l(t,_e,e),l(t,Z,e),l(t,ye,e),l(t,$,e),l(t,Te,e),l(t,g,e),l(t,ce,e),l(t,f,e),l(t,de,e),l(t,tt,e),l(t,we,e),l(t,et,e),l(t,Pe,e),l(t,lt,e),l(t,Ve,e),l(t,ke,e),l(t,he,e),l(t,a,e),l(t,Se,e),l(t,it,e),l(t,Re,e),l(t,nt,e),l(t,Ue,e),l(t,st,e),l(t,De,e),l(t,M,e),l(t,be,e),l(t,ot,e),l(t,Ie,e),l(t,pt,e),l(t,Ae,e),l(t,vt,e),l(t,qe,e),l(t,ut,e),l(t,je,e),l(t,L,e),l(t,ze,e),l(t,rt,e),l(t,Fe,e),l(t,xt,e),l(t,Oe,e),l(t,Ct,e),l(t,Ee,e),l(t,Be,e),l(t,Ne,e),l(t,m,e),l(t,We,e),l(t,ft,e),l(t,Ge,e),l(t,H,e),l(t,Je,e),l(t,at,e),l(t,Ke,e),l(t,Mt,e),l(t,Qe,e),l(t,Lt,e),l(t,Xe,e),l(t,mt,e),l(t,Ye,e),l(t,Ht,e),l(t,Ze,e),l(t,_t,e),l(t,$e,e),l(t,yt,e),l(t,ge,e),l(t,Tt,e),l(t,tl,e),l(t,ct,e),l(t,el,e),l(t,_,e),l(t,ll,e),l(t,dt,e),l(t,il,e),l(t,wt,e),l(t,nl,e),l(t,Pt,e),l(t,sl,e),l(t,Vt,e),l(t,ol,e),l(t,kt,e),l(t,pl,e),l(t,ht,e),l(t,vl,e),l(t,ul,e),l(t,rl,e),l(t,y,e),l(t,xl,e),l(t,T,e),l(t,Cl,e),l(t,St,e),l(t,fl,e),l(t,Rt,e),l(t,al,e),l(t,Ut,e),l(t,Ml,e),l(t,Dt,e),l(t,Ll,e),l(t,c,e),l(t,ml,e),l(t,bt,e),l(t,Hl,e),l(t,It,e),l(t,_l,e),l(t,At,e),l(t,yl,e),l(t,qt,e),l(t,Tl,e),l(t,jt,e),l(t,cl,e),l(t,zt,e),l(t,dl,e),l(t,d,e),l(t,wl,e),l(t,Ft,e),l(t,Pl,e),l(t,Ot,e),l(t,Vl,e),l(t,Et,e),l(t,kl,e),l(t,Bt,e),l(t,hl,e),l(t,w,e),l(t,Sl,e),l(t,Nt,e),l(t,Rl,e),l(t,Wt,e),l(t,Ul,e),l(t,P,e),l(t,Dl,e),l(t,Gt,e)},p:bl,i:bl,o:bl,d(t){t&&(i(r),i(Jt),i(V),i(Kt),i(k),i(Qt),i(h),i(Xt),i(S),i(Yt),i(x),i(Zt),i(R),i($t),i(U),i(gt),i(D),i(te),i(b),i(ee),i(I),i(le),i(C),i(ie),i(A),i(ne),i(q),i(se),i(j),i(oe),i(z),i(pe),i(F),i(ve),i(O),i(ue),i(E),i(re),i(B),i(xe),i(N),i(Ce),i(W),i(fe),i(G),i(ae),i(J),i(Me),i(K),i(Le),i(Q),i(me),i(X),i(He),i(Y),i(_e),i(Z),i(ye),i($),i(Te),i(g),i(ce),i(f),i(de),i(tt),i(we),i(et),i(Pe),i(lt),i(Ve),i(ke),i(he),i(a),i(Se),i(it),i(Re),i(nt),i(Ue),i(st),i(De),i(M),i(be),i(ot),i(Ie),i(pt),i(Ae),i(vt),i(qe),i(ut),i(je),i(L),i(ze),i(rt),i(Fe),i(xt),i(Oe),i(Ct),i(Ee),i(Be),i(Ne),i(m),i(We),i(ft),i(Ge),i(H),i(Je),i(at),i(Ke),i(Mt),i(Qe),i(Lt),i(Xe),i(mt),i(Ye),i(Ht),i(Ze),i(_t),i($e),i(yt),i(ge),i(Tt),i(tl),i(ct),i(el),i(_),i(ll),i(dt),i(il),i(wt),i(nl),i(Pt),i(sl),i(Vt),i(ol),i(kt),i(pl),i(ht),i(vl),i(ul),i(rl),i(y),i(xl),i(T),i(Cl),i(St),i(fl),i(Rt),i(al),i(Ut),i(Ml),i(Dt),i(Ll),i(c),i(ml),i(bt),i(Hl),i(It),i(_l),i(At),i(yl),i(qt),i(Tl),i(jt),i(cl),i(zt),i(dl),i(d),i(wl),i(Ft),i(Pl),i(Ot),i(Vl),i(Et),i(kl),i(Bt),i(hl),i(w),i(Sl),i(Nt),i(Rl),i(Wt),i(Ul),i(P),i(Dl),i(Gt))}}}const wn={title:"Flutter App Architecture(1) - MVVM",author:"jack",description:"MVVM(Model View ViewModel)아키텍처에 대해 알아봅니다.",published:!0,date:"2024. 11. 23.",tags:["Flutter"]};class Pn extends _n{constructor(r){super(),yn(this,r,null,Tn,Hn,{})}}export{Pn as default,wn as metadata};
